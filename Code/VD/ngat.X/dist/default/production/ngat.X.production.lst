

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Nov 01 21:21:06 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.31
    12                           ; Generated 13/10/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  000B                     _INTCON	set	11
   167  0008                     _PORTD	set	8
   168  0059                     _INTF	set	89
   169  0081                     _OPTION_REG	set	129
   170  0088                     _TRISD	set	136
   171  0430                     _TRISB0	set	1072
   172                           
   173                           	psect	cinit
   174  000F                     start_initialization:	
   175                           ; #config settings
   176                           
   177  000F                     __initialization:
   178  000F                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  000F                     __end_of__initialization:
   182  000F  0183               	clrf	3
   183  0010  120A  118A  283D   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:
   187  0070                     ?_ISR:
   188  0070                     ??_ISR:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196  0070                     	ds	2
   197  0072                     ISR@i:
   198                           
   199                           ; 2 bytes @ 0x2
   200  0072                     	ds	2
   201  0074                     ISR@j:
   202                           
   203                           ; 2 bytes @ 0x4
   204  0074                     	ds	2
   205  0076                     ??_main:
   206                           
   207                           ; 1 bytes @ 0x6
   208  0076                     	ds	1
   209                           
   210                           	psect	maintext
   211  003D                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 20 in file "newmain.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : B00/0
   229 ;;		Unchanged: 800/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0
   233 ;;      Temps:          1       0       0       0       0
   234 ;;      Totals:         1       0       0       0       0
   235 ;;Total ram usage:        1 bytes
   236 ;; Hardware stack levels required when called:    1
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           
   245                           ;psect for function _main
   246  003D                     _main:
   247                           
   248                           ;newmain.c: 23: PORTD = 0;
   249                           
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0]
   252  003D  0188               	clrf	8	;volatile
   253                           
   254                           ;newmain.c: 25: TRISB0 = 1;
   255  003E  1683               	bsf	3,5	;RP0=1, select bank1
   256  003F  1406               	bsf	6,0	;volatile
   257                           
   258                           ;newmain.c: 27: TRISD = 0;
   259  0040  0188               	clrf	8	;volatile
   260                           
   261                           ;newmain.c: 29: OPTION_REG = 0X00;
   262  0041  0181               	clrf	1	;volatile
   263                           
   264                           ;newmain.c: 31: INTCON |= 0Xd0;
   265  0042  30D0               	movlw	208
   266  0043  00F6               	movwf	??_main
   267  0044  0876               	movf	??_main,w
   268  0045  048B               	iorwf	11,f	;volatile
   269  0046                     l584:
   270                           
   271                           ;newmain.c: 35: PORTD = 0x00;
   272  0046  1283               	bcf	3,5	;RP0=0, select bank0
   273  0047  0188               	clrf	8	;volatile
   274  0048  2846               	goto	l584
   275  0049                     __end_of_main:
   276                           
   277                           	psect	text1
   278  0013                     __ptext1:	
   279 ;; *************** function _ISR *****************
   280 ;; Defined at:
   281 ;;		line 5 in file "newmain.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  j               2    4[COMMON] unsigned int 
   286 ;;  i               2    2[COMMON] unsigned int 
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   296 ;;      Params:         0       0       0       0       0
   297 ;;      Locals:         4       0       0       0       0
   298 ;;      Temps:          2       0       0       0       0
   299 ;;      Totals:         6       0       0       0       0
   300 ;;Total ram usage:        6 bytes
   301 ;; Hardware stack levels used:    1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		Interrupt level 1
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           
   310                           ;psect for function _ISR
   311  0013                     _ISR:
   312                           
   313                           ;newmain.c: 8: unsigned int i, j;;newmain.c: 10: PORTD = 0X55;
   314  0013  3055               	movlw	85
   315  0014  1283               	bcf	3,5	;RP0=0, select bank0
   316  0015  1303               	bcf	3,6	;RP1=0, select bank0
   317  0016  0088               	movwf	8	;volatile
   318                           
   319                           ;newmain.c: 12: for (i = 0; i < 600; i++)
   320  0017  01F2               	clrf	ISR@i
   321  0018  01F3               	clrf	ISR@i+1
   322  0019                     i1l568:
   323                           
   324                           ;newmain.c: 14: for (j = 0; j < 200; j++);
   325  0019  01F4               	clrf	ISR@j
   326  001A  01F5               	clrf	ISR@j+1
   327  001B                     i1l574:
   328  001B  3001               	movlw	1
   329  001C  07F4               	addwf	ISR@j,f
   330  001D  1803               	skipnc
   331  001E  0AF5               	incf	ISR@j+1,f
   332  001F  3000               	movlw	0
   333  0020  07F5               	addwf	ISR@j+1,f
   334  0021  3000               	movlw	0
   335  0022  0275               	subwf	ISR@j+1,w
   336  0023  30C8               	movlw	200
   337  0024  1903               	skipnz
   338  0025  0274               	subwf	ISR@j,w
   339  0026  1C03               	skipc
   340  0027  281B               	goto	i1l574
   341  0028  3001               	movlw	1
   342  0029  07F2               	addwf	ISR@i,f
   343  002A  1803               	skipnc
   344  002B  0AF3               	incf	ISR@i+1,f
   345  002C  3000               	movlw	0
   346  002D  07F3               	addwf	ISR@i+1,f
   347  002E  3002               	movlw	2
   348  002F  0273               	subwf	ISR@i+1,w
   349  0030  3058               	movlw	88
   350  0031  1903               	skipnz
   351  0032  0272               	subwf	ISR@i,w
   352  0033  1C03               	skipc
   353  0034  2819               	goto	i1l568
   354                           
   355                           ;newmain.c: 16: INTF = 0;
   356  0035  108B               	bcf	11,1	;volatile
   357  0036  0871               	movf	??_ISR+1,w
   358  0037  008A               	movwf	10
   359  0038  0E70               	swapf	??_ISR,w
   360  0039  0083               	movwf	3
   361  003A  0EFE               	swapf	126,f
   362  003B  0E7E               	swapf	126,w
   363  003C  0009               	retfie
   364  003D                     __end_of_ISR:
   365  007E                     btemp	set	126	;btemp
   366  007E                     wtemp0	set	126
   367                           
   368                           	psect	intentry
   369  0004                     __pintentry:	
   370                           ;incstack = 0
   371                           ; Regs used in _ISR: [wreg+status,2]
   372                           
   373  0004                     interrupt_function:
   374  007E                     saved_w	set	btemp
   375  0004  00FE               	movwf	btemp
   376  0005  0E03               	swapf	3,w
   377  0006  00F0               	movwf	??_ISR
   378  0007  080A               	movf	10,w
   379  0008  00F1               	movwf	??_ISR+1
   380  0009  120A  118A  2813   	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0      60
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Nov 01 21:21:06 2020

                    l584 0046                      _ISR 0013                     ?_ISR 0070  
                   ISR@i 0072                     ISR@j 0074                     _INTF 0059  
                   _main 003D                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l574 001B  
                  i1l568 0019                    _PORTD 0008                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0049                   ??_main 0076  
                 _INTCON 000B                   _TRISB0 0430                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 003D  
             __pintentry 0004                  __ptext1 0013             __size_of_ISR 002A  
   end_of_initialization 000F      start_initialization 000F              __end_of_ISR 003D  
              ___latbits 0002        interrupt_function 0004            __size_of_main 000C  
               intlevel1 0000               _OPTION_REG 0081  
