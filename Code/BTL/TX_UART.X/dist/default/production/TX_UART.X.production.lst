

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 03 15:33:46 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0006                     _PORTBbits	set	6
   170  0019                     _TXREG	set	25
   171  001A                     _RCREG	set	26
   172  000C                     _PIR1bits	set	12
   173  0018                     _RCSTAbits	set	24
   174  0086                     _TRISBbits	set	134
   175  0099                     _SPBRG	set	153
   176  0098                     _TXSTAbits	set	152
   177  0087                     _TRISCbits	set	135
   178                           
   179                           	psect	strings
   180  0003                     __pstrings:
   181  0003                     stringtab:
   182  0003                     __stringtab:
   183  0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186  0003                     stringdir:
   187  0003  3000               	movlw	high stringdir
   188  0004  008A               	movwf	10
   189  0005  0804               	movf	4,w
   190  0006  0A84               	incf	4,f
   191  0007  0782               	addwf	2,f
   192  0008                     __stringbase:
   193  0008  3400               	retlw	0
   194  0009                     __end_of__stringtab:
   195  0009                     STR_1:
   196  0009  3445               	retlw	69	;'E'
   197  000A  346E               	retlw	110	;'n'
   198  000B  3463               	retlw	99	;'c'
   199  000C  3465               	retlw	101	;'e'
   200  000D  346E               	retlw	110	;'n'
   201  000E  3464               	retlw	100	;'d'
   202  000F  3465               	retlw	101	;'e'
   203  0010  3472               	retlw	114	;'r'
   204  0011  3420               	retlw	32	;' '
   205  0012  346C               	retlw	108	;'l'
   206  0013  3465               	retlw	101	;'e'
   207  0014  3464               	retlw	100	;'d'
   208  0015  3420               	retlw	32	;' '
   209  0016  3463               	retlw	99	;'c'
   210  0017  346F               	retlw	111	;'o'
   211  0018  346E               	retlw	110	;'n'
   212  0019  3420               	retlw	32	;' '
   213  001A  3431               	retlw	49	;'1'
   214  001B  3420               	retlw	32	;' '
   215  001C  3479               	retlw	121	;'y'
   216  001D  3420               	retlw	32	;' '
   217  001E  3461               	retlw	97	;'a'
   218  001F  3470               	retlw	112	;'p'
   219  0020  3461               	retlw	97	;'a'
   220  0021  3467               	retlw	103	;'g'
   221  0022  3461               	retlw	97	;'a'
   222  0023  3472               	retlw	114	;'r'
   223  0024  3420               	retlw	32	;' '
   224  0025  346C               	retlw	108	;'l'
   225  0026  3465               	retlw	101	;'e'
   226  0027  3464               	retlw	100	;'d'
   227  0028  3420               	retlw	32	;' '
   228  0029  3463               	retlw	99	;'c'
   229  002A  346F               	retlw	111	;'o'
   230  002B  346E               	retlw	110	;'n'
   231  002C  3420               	retlw	32	;' '
   232  002D  3430               	retlw	48	;'0'
   233  002E  3400               	retlw	0
   234  002F                     STR_2:
   235  002F  346C               	retlw	108	;'l'
   236  0030  3465               	retlw	101	;'e'
   237  0031  3464               	retlw	100	;'d'
   238  0032  3420               	retlw	32	;' '
   239  0033  3465               	retlw	101	;'e'
   240  0034  346E               	retlw	110	;'n'
   241  0035  3463               	retlw	99	;'c'
   242  0036  3465               	retlw	101	;'e'
   243  0037  346E               	retlw	110	;'n'
   244  0038  3464               	retlw	100	;'d'
   245  0039  3469               	retlw	105	;'i'
   246  003A  3464               	retlw	100	;'d'
   247  003B  346F               	retlw	111	;'o'
   248  003C  3420               	retlw	32	;' '
   249  003D  3400               	retlw	0
   250  003E                     STR_3:
   251  003E  346C               	retlw	108	;'l'
   252  003F  3465               	retlw	101	;'e'
   253  0040  3464               	retlw	100	;'d'
   254  0041  3420               	retlw	32	;' '
   255  0042  3461               	retlw	97	;'a'
   256  0043  3470               	retlw	112	;'p'
   257  0044  3461               	retlw	97	;'a'
   258  0045  3467               	retlw	103	;'g'
   259  0046  3461               	retlw	97	;'a'
   260  0047  3464               	retlw	100	;'d'
   261  0048  346F               	retlw	111	;'o'
   262  0049  3420               	retlw	32	;' '
   263  004A  3400               	retlw	0
   264                           
   265                           	psect	cinit
   266  07FC                     start_initialization:	
   267                           ; #config settings
   268                           
   269  07FC                     __initialization:
   270  07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  07FC                     __end_of__initialization:
   274  07FC  0183               	clrf	3
   275  07FD  120A  118A  2FCC   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_UART_init:
   280  0070                     ??_UART_init:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_UART_read:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_UART_read:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_UART_write:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_UART_write:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_UART_printf:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     UART_write@dato:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 1 bytes @ 0x0
   306  0070                     	ds	1
   307  0071                     ??_UART_printf:
   308                           
   309                           ; 1 bytes @ 0x1
   310  0071                     	ds	1
   311  0072                     UART_printf@cadena:
   312                           
   313                           ; 1 bytes @ 0x2
   314  0072                     	ds	1
   315  0073                     ??_main:
   316                           
   317                           ; 1 bytes @ 0x3
   318  0073                     	ds	1
   319  0074                     main@dato_rx:
   320                           
   321                           ; 1 bytes @ 0x4
   322  0074                     	ds	1
   323                           
   324                           	psect	maintext
   325  07CC                     __pmaintext:	
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 14 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  dato_rx         1    4[COMMON] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : B00/0
   342 ;;		On exit  : 300/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         1       0       0       0       0
   347 ;;      Temps:          1       0       0       0       0
   348 ;;      Totals:         2       0       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels required when called:    2
   351 ;; This function calls:
   352 ;;		_UART_init
   353 ;;		_UART_printf
   354 ;;		_UART_read
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  07CC                     _main:
   363                           
   364                           ;main.c: 16: char dato_rx;;main.c: 17: TRISBbits.TRISB0 = 0;
   365                           
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   368  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   369  07CD  1006               	bcf	6,0	;volatile
   370                           
   371                           ;main.c: 18: PORTBbits.RB0 = 0;
   372  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   373  07CF  1006               	bcf	6,0	;volatile
   374                           
   375                           ;main.c: 20: UART_init();
   376  07D0  120A  118A  27A1  120A  118A  	fcall	_UART_init
   377                           
   378                           ;main.c: 21: UART_printf("Encender led con 1 y apagar led con 0");
   379  07D5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   380  07D6  120A  118A  27B0  120A  118A  	fcall	_UART_printf
   381  07DB                     l645:
   382                           
   383                           ;main.c: 24: {;main.c: 25: dato_rx = UART_read();
   384  07DB  120A  118A  2792  120A  118A  	fcall	_UART_read
   385  07E0  00F3               	movwf	??_main
   386  07E1  0873               	movf	??_main,w
   387  07E2  00F4               	movwf	main@dato_rx
   388                           
   389                           ;main.c: 27: if(dato_rx == '1'){
   390  07E3  3031               	movlw	49
   391  07E4  0674               	xorwf	main@dato_rx,w
   392  07E5  1D03               	btfss	3,2
   393  07E6  2FEF               	goto	l653
   394                           
   395                           ;main.c: 28: UART_printf("led encendido ");
   396  07E7  3027               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   397  07E8  120A  118A  27B0  120A  118A  	fcall	_UART_printf
   398                           
   399                           ;main.c: 29: PORTBbits.RB0 = 1;
   400  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   401  07EE  1406               	bsf	6,0	;volatile
   402  07EF                     l653:
   403                           
   404                           ;main.c: 30: };main.c: 32: if(dato_rx == '0'){
   405  07EF  3030               	movlw	48
   406  07F0  0674               	xorwf	main@dato_rx,w
   407  07F1  1D03               	btfss	3,2
   408  07F2  2FDB               	goto	l645
   409                           
   410                           ;main.c: 33: UART_printf("led apagado ");
   411  07F3  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   412  07F4  120A  118A  27B0  120A  118A  	fcall	_UART_printf
   413                           
   414                           ;main.c: 34: PORTBbits.RB0 = 0;
   415  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   416  07FA  1006               	bcf	6,0	;volatile
   417  07FB  2FDB               	goto	l645
   418  07FC                     __end_of_main:
   419                           
   420                           	psect	text1
   421  0792                     __ptext1:	
   422 ;; *************** function _UART_read *****************
   423 ;; Defined at:
   424 ;;		line 22 in file "UART.h"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      unsigned char 
   431 ;; Registers used:
   432 ;;		wreg
   433 ;; Tracked objects:
   434 ;;		On entry : 200/0
   435 ;;		On exit  : 300/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _UART_read
   453  0792                     _UART_read:
   454                           
   455                           ;UART.h: 24: if (PIR1bits.RCIF == 1)
   456                           
   457                           ;incstack = 0
   458                           ; Regs used in _UART_read: [wreg]
   459  0792  1283               	bcf	3,5	;RP0=0, select bank0
   460  0793  1E8C               	btfss	12,5	;volatile
   461  0794  2F97               	goto	l599
   462                           
   463                           ;UART.h: 25: return RCREG;
   464  0795  081A               	movf	26,w	;volatile
   465  0796  0008               	return
   466  0797                     l599:
   467                           
   468                           ;UART.h: 26: else;UART.h: 27: return 0;
   469  0797  3000               	movlw	0
   470  0798  0008               	return
   471  0799                     __end_of_UART_read:
   472                           
   473                           	psect	text2
   474  07B0                     __ptext2:	
   475 ;; *************** function _UART_printf *****************
   476 ;; Defined at:
   477 ;;		line 36 in file "UART.h"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  cadena          1    wreg     PTR unsigned char 
   480 ;;		 -> STR_3(13), STR_2(15), STR_1(38), 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  cadena          1    2[COMMON] PTR unsigned char 
   483 ;;		 -> STR_3(13), STR_2(15), STR_1(38), 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 300/0
   490 ;;		On exit  : 200/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0
   495 ;;      Temps:          1       0       0       0       0
   496 ;;      Totals:         2       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		_UART_write
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _UART_printf
   509  07B0                     _UART_printf:
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513                           ;UART_printf@cadena stored from wreg
   514  07B0  00F2               	movwf	UART_printf@cadena
   515  07B1                     l637:	
   516                           ;UART.h: 38: while(*cadena !=0x00){
   517                           
   518  07B1  0872               	movf	UART_printf@cadena,w
   519  07B2  0084               	movwf	4
   520  07B3  120A  118A  2003  120A  118A  	fcall	stringdir
   521  07B8  3A00               	xorlw	0
   522  07B9  1903               	btfsc	3,2
   523  07BA  0008               	return
   524                           
   525                           ;UART.h: 39: UART_write(*cadena);
   526  07BB  0872               	movf	UART_printf@cadena,w
   527  07BC  0084               	movwf	4
   528  07BD  120A  118A  2003  120A  118A  	fcall	stringdir
   529  07C2  120A  118A  2799  120A  118A  	fcall	_UART_write
   530                           
   531                           ;UART.h: 40: cadena++;
   532  07C7  3001               	movlw	1
   533  07C8  00F1               	movwf	??_UART_printf
   534  07C9  0871               	movf	??_UART_printf,w
   535  07CA  07F2               	addwf	UART_printf@cadena,f
   536  07CB  2FB1               	goto	l637
   537  07CC                     __end_of_UART_printf:
   538                           
   539                           	psect	text3
   540  0799                     __ptext3:	
   541 ;; *************** function _UART_write *****************
   542 ;; Defined at:
   543 ;;		line 30 in file "UART.h"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  dato            1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  dato            1    0[COMMON] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 200/0
   554 ;;		On exit  : 300/100
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_UART_printf
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _UART_write
   572  0799                     _UART_write:
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _UART_write: [wreg]
   576                           ;UART_write@dato stored from wreg
   577  0799  00F0               	movwf	UART_write@dato
   578                           
   579                           ;UART.h: 32: TXREG = dato;
   580  079A  0870               	movf	UART_write@dato,w
   581  079B  1283               	bcf	3,5	;RP0=0, select bank0
   582  079C  0099               	movwf	25	;volatile
   583  079D                     l29:	
   584                           ;UART.h: 33: while(TXSTAbits.TRMT == 0);
   585                           
   586  079D  1683               	bsf	3,5	;RP0=1, select bank1
   587  079E  1898               	btfsc	24,1	;volatile
   588  079F  0008               	return
   589  07A0  2F9D               	goto	l29
   590  07A1                     __end_of_UART_write:
   591                           
   592                           	psect	text4
   593  07A1                     __ptext4:	
   594 ;; *************** function _UART_init *****************
   595 ;; Defined at:
   596 ;;		line 8 in file "UART.h"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg
   605 ;; Tracked objects:
   606 ;;		On entry : B00/0
   607 ;;		On exit  : B00/0
   608 ;;		Unchanged: 800/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0
   613 ;;      Totals:         0       0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _UART_init
   625  07A1                     _UART_init:
   626                           
   627                           ;UART.h: 10: TRISCbits.TRISC7 = 1;
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _UART_init: [wreg]
   631  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   632  07A2  1787               	bsf	7,7	;volatile
   633                           
   634                           ;UART.h: 11: TRISCbits.TRISC6 = 0;
   635  07A3  1307               	bcf	7,6	;volatile
   636                           
   637                           ;UART.h: 13: TXSTAbits.SYNC = 0;
   638  07A4  1218               	bcf	24,4	;volatile
   639                           
   640                           ;UART.h: 14: TXSTAbits.TX9 = 0;
   641  07A5  1318               	bcf	24,6	;volatile
   642                           
   643                           ;UART.h: 15: TXSTAbits.BRGH = 1;
   644  07A6  1518               	bsf	24,2	;volatile
   645                           
   646                           ;UART.h: 16: SPBRG = 129;
   647  07A7  3081               	movlw	129
   648  07A8  0099               	movwf	25	;volatile
   649                           
   650                           ;UART.h: 17: RCSTAbits.SPEN = 1;
   651  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   652  07AA  1798               	bsf	24,7	;volatile
   653                           
   654                           ;UART.h: 18: TXSTAbits.TXEN = 1;
   655  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   656  07AC  1698               	bsf	24,5	;volatile
   657                           
   658                           ;UART.h: 19: RCSTAbits.CREN = 1;
   659  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   660  07AE  1618               	bsf	24,4	;volatile
   661  07AF  0008               	return
   662  07B0                     __end_of_UART_init:
   663  007E                     btemp	set	126	;btemp
   664  007E                     wtemp0	set	126

Data Sizes:
    Strings     66
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_printf@cadena	PTR unsigned char  size(1) Largest target is 38
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[38]), 


Critical Paths under _main in COMMON

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     186
                                              3 COMMON     2     2      0
                          _UART_init
                        _UART_printf
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     2      0     141
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 03 15:33:46 2020

                      pc 0002                       l29 079D                       fsr 0004  
                    l637 07B1                      l653 07EF                      l645 07DB  
                    l599 0797                      fsr0 0004              main@dato_rx 0074  
                   STR_1 0009                     STR_2 002F                     STR_3 003E  
                   _main 07CC                     btemp 007E                     start 0000  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019       __size_of_UART_init 000F       __size_of_UART_read 0007  
            ?_UART_write 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073        __end_of_UART_init 07B0        __end_of_UART_read 0799  
    __size_of_UART_write 0008             ?_UART_printf 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07CC             ??_UART_write 0070  
             __stringtab 0003       __end_of_UART_write 07A1                  __ptext1 0792  
                __ptext2 07B0                  __ptext3 0799                  __ptext4 07A1  
   __size_of_UART_printf 001C     end_of_initialization 07FC                _RCSTAbits 0018  
              _PORTBbits 0006                _UART_init 07A1                _UART_read 0792  
              _TRISBbits 0086                _TRISCbits 0087                _TXSTAbits 0098  
             ?_UART_init 0070               ?_UART_read 0070      start_initialization 07FC  
              ___latbits 0002        UART_printf@cadena 0072                __pstrings 0003  
            ??_UART_init 0070              ??_UART_read 0070                 _PIR1bits 000C  
          ??_UART_printf 0071              __stringbase 0008           UART_write@dato 0070  
     __end_of__stringtab 0009      __end_of_UART_printf 07CC            __size_of_main 0030  
              stringcode 0003              _UART_printf 07B0                 stringdir 0003  
               stringtab 0003               _UART_write 0799  
