

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Nov 28 09:40:46 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 28 "key.h"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 28 "key.h"
    45  2007  FF7A               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_keyinit
    47                           	FNCALL	_main,_key
    48                           	FNCALL	_main,___lwmod
    49                           	FNCALL	_main,_mask
    50                           	FNROOT	_main
    51                           	global	_keypad
    52                           psect	idataBANK0,class=CODE,space=0,delta=2
    53                           global __pidataBANK0
    54  05D4                     __pidataBANK0:
    55                           	file	"key.h"
    56                           	line	44
    57                           
    58                           ;initializer for _keypad
    59  05D4  3437               	retlw	037h
    60  05D5  3438               	retlw	038h
    61  05D6  3439               	retlw	039h
    62  05D7  342F               	retlw	02Fh
    63  05D8  3434               	retlw	034h
    64  05D9  3435               	retlw	035h
    65  05DA  3436               	retlw	036h
    66  05DB  342A               	retlw	02Ah
    67  05DC  3431               	retlw	031h
    68  05DD  3432               	retlw	032h
    69  05DE  3433               	retlw	033h
    70  05DF  342D               	retlw	02Dh
    71  05E0  3443               	retlw	043h
    72  05E1  3430               	retlw	030h
    73  05E2  343D               	retlw	03Dh
    74  05E3  342B               	retlw	02Bh
    75                           	global	_dk
    76                           	global	_i
    77                           	global	_j
    78                           	global	_num
    79                           	global	_colloc
    80                           	global	_rowloc
    81                           	global	_PORTB
    82  0006                     _PORTB	set	6
    83                           	global	_PORTD
    84  0008                     _PORTD	set	8
    85                           	global	_RB0
    86  0030                     _RB0	set	48
    87                           	global	_RB1
    88  0031                     _RB1	set	49
    89                           	global	_RB2
    90  0032                     _RB2	set	50
    91                           	global	_RB3
    92  0033                     _RB3	set	51
    93                           	global	_RB4
    94  0034                     _RB4	set	52
    95                           	global	_RB5
    96  0035                     _RB5	set	53
    97                           	global	_RB6
    98  0036                     _RB6	set	54
    99                           	global	_RB7
   100  0037                     _RB7	set	55
   101                           	global	_OPTION_REG
   102  0081                     _OPTION_REG	set	129
   103                           	global	_TRISB
   104  0086                     _TRISB	set	134
   105                           	global	_TRISD
   106  0088                     _TRISD	set	136
   107                           	file	"C:\Users\tamin\AppData\Local\Temp\s540."
   108                           	line	#
   109                           psect cinit,class=CODE,delta=2
   110                           global start_initialization
   111  05F5                     start_initialization:
   112                           
   113                           psect	bssCOMMON,class=COMMON,space=1
   114                           global __pbssCOMMON
   115  007C                     __pbssCOMMON:
   116  007C                     _colloc:
   117  007C                            ds      1
   118                           
   119  007D                     _rowloc:
   120  007D                            ds      1
   121                           
   122                           psect	bssBANK0,class=BANK0,space=1
   123                           global __pbssBANK0
   124  0030                     __pbssBANK0:
   125  0030                     _dk:
   126  0030                            ds      2
   127                           
   128  0032                     _i:
   129  0032                            ds      2
   130                           
   131  0034                     _j:
   132  0034                            ds      2
   133                           
   134  0036                     _num:
   135  0036                            ds      2
   136                           
   137                           psect	dataBANK0,class=BANK0,space=1
   138                           global __pdataBANK0
   139  0020                     __pdataBANK0:
   140                           	file	"key.h"
   141  0020                     _keypad:
   142  0020                            ds      16
   143                           
   144                           ; Clear objects allocated to COMMON
   145                           psect cinit,class=CODE,delta=2
   146  05F5  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   147  05F6  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   148                           ; Clear objects allocated to BANK0
   149                           psect cinit,class=CODE,delta=2
   150  05F7  01B0               	clrf	((__pbssBANK0)+0)&07Fh
   151  05F8  01B1               	clrf	((__pbssBANK0)+1)&07Fh
   152  05F9  01B2               	clrf	((__pbssBANK0)+2)&07Fh
   153  05FA  01B3               	clrf	((__pbssBANK0)+3)&07Fh
   154  05FB  01B4               	clrf	((__pbssBANK0)+4)&07Fh
   155  05FC  01B5               	clrf	((__pbssBANK0)+5)&07Fh
   156  05FD  01B6               	clrf	((__pbssBANK0)+6)&07Fh
   157  05FE  01B7               	clrf	((__pbssBANK0)+7)&07Fh
   158                           global btemp
   159                           psect inittext,class=CODE,delta=2
   160                           global init_fetch,btemp
   161                           ;	Called with low address in FSR and high address in W
   162  05E4                     init_fetch:
   163  05E4  087E               	movf btemp,w
   164  05E5  008A               	movwf pclath
   165  05E6  087F               	movf btemp+1,w
   166  05E7  0082               	movwf pc
   167                           global init_ram
   168                           ;Called with:
   169                           ;	high address of idata address in btemp 
   170                           ;	low address of idata address in btemp+1 
   171                           ;	low address of data in FSR
   172                           ;	high address + 1 of data in btemp-1
   173  05E8                     init_ram:
   174  05E8  25E4  120A  118A   	fcall init_fetch
   175  05EB  0080               	movwf indf,f
   176  05EC  0A84               	incf fsr,f
   177  05ED  0804               	movf fsr,w
   178  05EE  067D               	xorwf btemp-1,w
   179  05EF  1903               	btfsc status,2
   180  05F0  3400               	retlw 0
   181  05F1  0AFF               	incf btemp+1,f
   182  05F2  1903               	btfsc status,2
   183  05F3  0AFE               	incf btemp,f
   184  05F4  2DE8               	goto init_ram
   185                           ; Initialize objects allocated to BANK0
   186                           psect cinit,class=CODE,delta=2
   187                           global init_ram, __pidataBANK0
   188  05FF  1383               	bcf	status, 7	;select IRP bank0
   189  0600  3030               	movlw low(__pdataBANK0+16)
   190  0601  00FD               	movwf btemp-1,f
   191  0602  3005               	movlw high(__pidataBANK0)
   192  0603  00FE               	movwf btemp,f
   193  0604  30D4               	movlw low(__pidataBANK0)
   194  0605  00FF               	movwf btemp+1,f
   195  0606  3020               	movlw low(__pdataBANK0)
   196  0607  0084               	movwf fsr,f
   197  0608  120A  118A  25E8   	fcall init_ram
              120A  118A         
   198                           psect cinit,class=CODE,delta=2
   199                           global end_of_initialization
   200                           
   201                           ;End of C runtime variable initialization code
   202                           
   203  060D                     end_of_initialization:
   204  060D  0183               clrf status
   205  060E  120A  118A  2E11   ljmp _main	;jump to C main() function
   206                           psect	cstackCOMMON,class=COMMON,space=1
   207                           global __pcstackCOMMON
   208  0070                     __pcstackCOMMON:
   209                           	global	?_keyinit
   210  0070                     ?_keyinit:	; 0 bytes @ 0x0
   211                           	global	??_keyinit
   212  0070                     ??_keyinit:	; 0 bytes @ 0x0
   213                           	global	??_key
   214  0070                     ??_key:	; 0 bytes @ 0x0
   215                           	global	?_main
   216  0070                     ?_main:	; 0 bytes @ 0x0
   217                           	global	?_key
   218  0070                     ?_key:	; 1 bytes @ 0x0
   219                           	global	?___lwmod
   220  0070                     ?___lwmod:	; 2 bytes @ 0x0
   221                           	global	___lwmod@divisor
   222  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   223  0070                     	ds	2
   224                           	global	___lwmod@dividend
   225  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   226  0072                     	ds	2
   227                           	global	??___lwmod
   228  0074                     ??___lwmod:	; 0 bytes @ 0x4
   229  0074                     	ds	1
   230                           	global	___lwmod@counter
   231  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   232  0075                     	ds	1
   233                           	global	?_mask
   234  0076                     ?_mask:	; 2 bytes @ 0x6
   235                           	global	mask@num
   236  0076                     mask@num:	; 2 bytes @ 0x6
   237  0076                     	ds	2
   238                           	global	??_mask
   239  0078                     ??_mask:	; 0 bytes @ 0x8
   240                           	global	??_main
   241  0078                     ??_main:	; 0 bytes @ 0x8
   242  0078                     	ds	2
   243                           	global	main@b
   244  007A                     main@b:	; 2 bytes @ 0xA
   245  007A                     	ds	2
   246 ;;Data sizes: Strings 0, constant 0, data 16, bss 10, persistent 0 stack 0
   247 ;;Auto spaces:   Size  Autos    Used
   248 ;; COMMON          14     12      14
   249 ;; BANK0           80      0      24
   250 ;; BANK1           80      0       0
   251 ;; BANK3           96      0       0
   252 ;; BANK2           96      0       0
   253                           
   254 ;;
   255 ;; Pointer list with targets:
   256                           
   257 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   258 ;;
   259                           
   260                           
   261 ;;
   262 ;; Critical Paths under _main in COMMON
   263 ;;
   264 ;;   _main->_mask
   265 ;;   _mask->___lwmod
   266 ;;
   267 ;; Critical Paths under _main in BANK0
   268 ;;
   269 ;;   None.
   270 ;;
   271 ;; Critical Paths under _main in BANK1
   272 ;;
   273 ;;   None.
   274 ;;
   275 ;; Critical Paths under _main in BANK3
   276 ;;
   277 ;;   None.
   278 ;;
   279 ;; Critical Paths under _main in BANK2
   280 ;;
   281 ;;   None.
   282                           
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286                           
   287 ;;
   288 ;;Call Graph Tables:
   289 ;;
   290 ;; ---------------------------------------------------------------------------------
   291 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   292 ;; ---------------------------------------------------------------------------------
   293 ;; (0) _main                                                 4     4      0     135
   294 ;;                                              8 COMMON     4     4      0
   295 ;;                            _keyinit
   296 ;;                                _key
   297 ;;                            ___lwmod
   298 ;;                               _mask
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (1) ___lwmod                                              6     2      4     105
   301 ;;                                              0 COMMON     6     2      4
   302 ;; ---------------------------------------------------------------------------------
   303 ;; (1) _mask                                                 2     0      2      15
   304 ;;                                              6 COMMON     2     0      2
   305 ;;                            ___lwmod (ARG)
   306 ;; ---------------------------------------------------------------------------------
   307 ;; (1) _key                                                  3     3      0       0
   308 ;;                                              0 COMMON     3     3      0
   309 ;; ---------------------------------------------------------------------------------
   310 ;; (1) _keyinit                                              1     1      0       0
   311 ;;                                              0 COMMON     1     1      0
   312 ;; ---------------------------------------------------------------------------------
   313 ;; Estimated maximum stack depth 1
   314 ;; ---------------------------------------------------------------------------------
   315                           
   316 ;; Call Graph Graphs:
   317                           
   318 ;; _main (ROOT)
   319 ;;   _keyinit
   320 ;;   _key
   321 ;;   ___lwmod
   322 ;;   _mask
   323 ;;     ___lwmod (ARG)
   324 ;;
   325                           
   326 ;; Address spaces:
   327                           
   328 ;;Name               Size   Autos  Total    Cost      Usage
   329 ;;BANK3               60      0       0       9        0.0%
   330 ;;BITBANK3            60      0       0       8        0.0%
   331 ;;SFR3                 0      0       0       4        0.0%
   332 ;;BITSFR3              0      0       0       4        0.0%
   333 ;;BANK2               60      0       0      11        0.0%
   334 ;;BITBANK2            60      0       0      10        0.0%
   335 ;;SFR2                 0      0       0       5        0.0%
   336 ;;BITSFR2              0      0       0       5        0.0%
   337 ;;SFR1                 0      0       0       2        0.0%
   338 ;;BITSFR1              0      0       0       2        0.0%
   339 ;;BANK1               50      0       0       7        0.0%
   340 ;;BITBANK1            50      0       0       6        0.0%
   341 ;;CODE                 0      0       0       0        0.0%
   342 ;;DATA                 0      0      27      12        0.0%
   343 ;;ABS                  0      0      26       3        0.0%
   344 ;;NULL                 0      0       0       0        0.0%
   345 ;;STACK                0      0       1       2        0.0%
   346 ;;BANK0               50      0      18       5       30.0%
   347 ;;BITBANK0            50      0       0       4        0.0%
   348 ;;SFR0                 0      0       0       1        0.0%
   349 ;;BITSFR0              0      0       0       1        0.0%
   350 ;;COMMON               E      C       E       1      100.0%
   351 ;;BITCOMMON            E      0       0       0        0.0%
   352 ;;EEDATA             100      0       0       0        0.0%
   353                           
   354                           	global	_main
   355                           psect	maintext,global,class=CODE,delta=2
   356                           global __pmaintext
   357  0611                     __pmaintext:
   358                           
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 12 in file "newmain.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  b               2   10[COMMON] unsigned int 
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 17F/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         2       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0
   378 ;;      Totals:         4       0       0       0       0
   379 ;;Total ram usage:        4 bytes
   380 ;; Hardware stack levels required when called:    1
   381 ;; This function calls:
   382 ;;		_keyinit
   383 ;;		_key
   384 ;;		___lwmod
   385 ;;		_mask
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           psect	maintext
   391                           	file	"newmain.c"
   392                           	line	12
   393                           	global	__size_of_main
   394  0038                     	__size_of_main	equ	__end_of_main-_main
   395                           	
   396  0611                     _main:	
   397                           	opt	stack 7
   398                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   399                           	line	13
   400                           	
   401  0611                     l2042:	
   402                           ;newmain.c: 13: TRISB=TRISD=0x00;
   403  0611  1683               	bsf	status, 5	;RP0=1, select bank1
   404  0612  1303               	bcf	status, 6	;RP1=0, select bank1
   405  0613  0188               	clrf	(136)^080h	;volatile
   406  0614  0186               	clrf	(134)^080h	;volatile
   407                           	line	14
   408                           	
   409  0615                     l2044:	
   410                           ;newmain.c: 14: keyinit();
   411  0615  120A  118A  25CB   	fcall	_keyinit
              120A  118A         
   412  061A  2E1B               	goto	l2046
   413                           	line	16
   414                           ;newmain.c: 15: unsigned int b;
   415                           ;newmain.c: 16: while(1){
   416                           	
   417  061B                     l750:	
   418                           	line	17
   419                           	
   420  061B                     l2046:	
   421                           ;newmain.c: 17: b=key();
   422  061B  120A  118A  26F1   	fcall	_key
              120A  118A         
   423  0620  00F8               	movwf	(??_main+0)+0
   424  0621  01F9               	clrf	(??_main+0)+0+1
   425  0622  0878               	movf	0+(??_main+0)+0,w
   426  0623  00FA               	movwf	(main@b)
   427  0624  0879               	movf	1+(??_main+0)+0,w
   428  0625  00FB               	movwf	(main@b+1)
   429                           	line	18
   430                           	
   431  0626                     l2048:	
   432                           ;newmain.c: 18: PORTD=mask(b%10);
   433  0626  300A               	movlw	low(0Ah)
   434  0627  00F0               	movwf	(?___lwmod)
   435  0628  3000               	movlw	high(0Ah)
   436  0629  00F1               	movwf	((?___lwmod))+1
   437  062A  087B               	movf	(main@b+1),w
   438  062B  01F3               	clrf	1+(?___lwmod)+02h
   439  062C  07F3               	addwf	1+(?___lwmod)+02h
   440  062D  087A               	movf	(main@b),w
   441  062E  01F2               	clrf	0+(?___lwmod)+02h
   442  062F  07F2               	addwf	0+(?___lwmod)+02h
   443                           
   444  0630  120A  118A  2649   	fcall	___lwmod
              120A  118A         
   445  0635  0871               	movf	(1+(?___lwmod)),w
   446  0636  01F7               	clrf	(?_mask+1)
   447  0637  07F7               	addwf	(?_mask+1)
   448  0638  0870               	movf	(0+(?___lwmod)),w
   449  0639  01F6               	clrf	(?_mask)
   450  063A  07F6               	addwf	(?_mask)
   451                           
   452  063B  120A  118A  268D   	fcall	_mask
              120A  118A         
   453  0640  0876               	movf	(0+(?_mask)),w
   454  0641  1283               	bcf	status, 5	;RP0=0, select bank0
   455  0642  1303               	bcf	status, 6	;RP1=0, select bank0
   456  0643  0088               	movwf	(8)	;volatile
   457  0644  2E1B               	goto	l2046
   458                           	line	19
   459                           	
   460  0645                     l751:	
   461                           	line	16
   462  0645  2E1B               	goto	l2046
   463                           	
   464  0646                     l752:	
   465                           	line	20
   466                           	
   467  0646                     l753:	
   468                           	global	start
   469  0646  120A  118A  2800   	ljmp	start
   470                           	opt stack 0
   471                           GLOBAL	__end_of_main
   472  0649                     	__end_of_main:
   473 ;; =============== function _main ends ============
   474                           
   475                           	signat	_main,88
   476                           	global	___lwmod
   477                           psect	text84,local,class=CODE,delta=2
   478                           global __ptext84
   479  0649                     __ptext84:
   480                           
   481 ;; *************** function ___lwmod *****************
   482 ;; Defined at:
   483 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwmod.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  divisor         2    0[COMMON] unsigned int 
   486 ;;  dividend        2    2[COMMON] unsigned int 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  counter         1    5[COMMON] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2    0[COMMON] unsigned int 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         4       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0
   501 ;;      Totals:         6       0       0       0       0
   502 ;;Total ram usage:        6 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           psect	text84
   511                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwmod.c"
   512                           	line	5
   513                           	global	__size_of___lwmod
   514  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
   515                           	
   516  0649                     ___lwmod:	
   517                           	opt	stack 7
   518                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   519                           	line	8
   520                           	
   521  0649                     l1312:	
   522  0649  0871               	movf	(___lwmod@divisor+1),w
   523  064A  0470               	iorwf	(___lwmod@divisor),w
   524  064B  1903               	skipnz
   525  064C  2E4E               	goto	u621
   526  064D  2E4F               	goto	u620
   527  064E                     u621:
   528  064E  2E85               	goto	l1330
   529  064F                     u620:
   530                           	line	9
   531                           	
   532  064F                     l1314:	
   533  064F  01F5               	clrf	(___lwmod@counter)
   534  0650  1403               	bsf	status,0
   535  0651  0DF5               	rlf	(___lwmod@counter),f
   536                           	line	10
   537  0652  2E5F               	goto	l1320
   538                           	
   539  0653                     l780:	
   540                           	line	11
   541                           	
   542  0653                     l1316:	
   543  0653  3001               	movlw	01h
   544                           	
   545  0654                     u635:
   546  0654  1003               	clrc
   547  0655  0DF0               	rlf	(___lwmod@divisor),f
   548  0656  0DF1               	rlf	(___lwmod@divisor+1),f
   549  0657  3EFF               	addlw	-1
   550  0658  1D03               	skipz
   551  0659  2E54               	goto	u635
   552                           	line	12
   553                           	
   554  065A                     l1318:	
   555  065A  3001               	movlw	(01h)
   556  065B  00F4               	movwf	(??___lwmod+0)+0
   557  065C  0874               	movf	(??___lwmod+0)+0,w
   558  065D  07F5               	addwf	(___lwmod@counter),f
   559  065E  2E5F               	goto	l1320
   560                           	line	13
   561                           	
   562  065F                     l779:	
   563                           	line	10
   564                           	
   565  065F                     l1320:	
   566  065F  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
   567  0660  2E62               	goto	u641
   568  0661  2E63               	goto	u640
   569  0662                     u641:
   570  0662  2E53               	goto	l1316
   571  0663                     u640:
   572  0663  2E65               	goto	l1322
   573                           	
   574  0664                     l781:	
   575  0664  2E65               	goto	l1322
   576                           	line	14
   577                           	
   578  0665                     l782:	
   579                           	line	15
   580                           	
   581  0665                     l1322:	
   582  0665  0871               	movf	(___lwmod@divisor+1),w
   583  0666  0273               	subwf	(___lwmod@dividend+1),w
   584  0667  1D03               	skipz
   585  0668  2E6B               	goto	u655
   586  0669  0870               	movf	(___lwmod@divisor),w
   587  066A  0272               	subwf	(___lwmod@dividend),w
   588  066B                     u655:
   589  066B  1C03               	skipc
   590  066C  2E6E               	goto	u651
   591  066D  2E6F               	goto	u650
   592  066E                     u651:
   593  066E  2E76               	goto	l1326
   594  066F                     u650:
   595                           	line	16
   596                           	
   597  066F                     l1324:	
   598  066F  0870               	movf	(___lwmod@divisor),w
   599  0670  02F2               	subwf	(___lwmod@dividend),f
   600  0671  0871               	movf	(___lwmod@divisor+1),w
   601  0672  1C03               	skipc
   602  0673  03F3               	decf	(___lwmod@dividend+1),f
   603  0674  02F3               	subwf	(___lwmod@dividend+1),f
   604  0675  2E76               	goto	l1326
   605                           	
   606  0676                     l783:	
   607                           	line	17
   608                           	
   609  0676                     l1326:	
   610  0676  3001               	movlw	01h
   611                           	
   612  0677                     u665:
   613  0677  1003               	clrc
   614  0678  0CF1               	rrf	(___lwmod@divisor+1),f
   615  0679  0CF0               	rrf	(___lwmod@divisor),f
   616  067A  3EFF               	addlw	-1
   617  067B  1D03               	skipz
   618  067C  2E77               	goto	u665
   619                           	line	18
   620                           	
   621  067D                     l1328:	
   622  067D  3001               	movlw	low(01h)
   623  067E  02F5               	subwf	(___lwmod@counter),f
   624  067F  1D03               	btfss	status,2
   625  0680  2E82               	goto	u671
   626  0681  2E83               	goto	u670
   627  0682                     u671:
   628  0682  2E65               	goto	l1322
   629  0683                     u670:
   630  0683  2E85               	goto	l1330
   631                           	
   632  0684                     l784:	
   633  0684  2E85               	goto	l1330
   634                           	line	19
   635                           	
   636  0685                     l778:	
   637                           	line	20
   638                           	
   639  0685                     l1330:	
   640  0685  0873               	movf	(___lwmod@dividend+1),w
   641  0686  01F1               	clrf	(?___lwmod+1)
   642  0687  07F1               	addwf	(?___lwmod+1)
   643  0688  0872               	movf	(___lwmod@dividend),w
   644  0689  01F0               	clrf	(?___lwmod)
   645  068A  07F0               	addwf	(?___lwmod)
   646                           
   647  068B  2E8C               	goto	l785
   648                           	
   649  068C                     l1332:	
   650                           	line	21
   651                           	
   652  068C                     l785:	
   653  068C  0008               	return
   654                           	opt stack 0
   655                           GLOBAL	__end_of___lwmod
   656  068D                     	__end_of___lwmod:
   657 ;; =============== function ___lwmod ends ============
   658                           
   659                           	signat	___lwmod,8314
   660                           	global	_mask
   661                           psect	text85,local,class=CODE,delta=2
   662                           global __ptext85
   663  068D                     __ptext85:
   664                           
   665 ;; *************** function _mask *****************
   666 ;; Defined at:
   667 ;;		line 12 in file "7seg.h"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  num             2    6[COMMON] unsigned short 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2    6[COMMON] unsigned short 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         2       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         2       0       0       0       0
   685 ;;Total ram usage:        2 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           psect	text85
   694                           	file	"7seg.h"
   695                           	line	12
   696                           	global	__size_of_mask
   697  0064                     	__size_of_mask	equ	__end_of_mask-_mask
   698                           	
   699  068D                     _mask:	
   700                           	opt	stack 7
   701                           ; Regs used in _mask: [wreg-fsr0h+status,2+status,0]
   702                           	line	13
   703                           	
   704  068D                     l1224:	
   705                           ;7seg.h: 13: switch (num) {
   706  068D  2ECB               	goto	l1268
   707                           	line	14
   708                           ;7seg.h: 14: case 0: return 0xc0;
   709                           	
   710  068E                     l736:	
   711                           	
   712  068E                     l1226:	
   713  068E  30C0               	movlw	low(0C0h)
   714  068F  00F6               	movwf	(?_mask)
   715  0690  3000               	movlw	high(0C0h)
   716  0691  00F7               	movwf	((?_mask))+1
   717  0692  2EF0               	goto	l737
   718                           	
   719  0693                     l1228:	
   720  0693  2EF0               	goto	l737
   721                           	line	15
   722                           ;7seg.h: 15: case 1: return 0xf9;
   723                           	
   724  0694                     l738:	
   725                           	
   726  0694                     l1230:	
   727  0694  30F9               	movlw	low(0F9h)
   728  0695  00F6               	movwf	(?_mask)
   729  0696  3000               	movlw	high(0F9h)
   730  0697  00F7               	movwf	((?_mask))+1
   731  0698  2EF0               	goto	l737
   732                           	
   733  0699                     l1232:	
   734  0699  2EF0               	goto	l737
   735                           	line	16
   736                           ;7seg.h: 16: case 2: return 0xa4;
   737                           	
   738  069A                     l739:	
   739                           	
   740  069A                     l1234:	
   741  069A  30A4               	movlw	low(0A4h)
   742  069B  00F6               	movwf	(?_mask)
   743  069C  3000               	movlw	high(0A4h)
   744  069D  00F7               	movwf	((?_mask))+1
   745  069E  2EF0               	goto	l737
   746                           	
   747  069F                     l1236:	
   748  069F  2EF0               	goto	l737
   749                           	line	17
   750                           ;7seg.h: 17: case 3: return 0xb0;
   751                           	
   752  06A0                     l740:	
   753                           	
   754  06A0                     l1238:	
   755  06A0  30B0               	movlw	low(0B0h)
   756  06A1  00F6               	movwf	(?_mask)
   757  06A2  3000               	movlw	high(0B0h)
   758  06A3  00F7               	movwf	((?_mask))+1
   759  06A4  2EF0               	goto	l737
   760                           	
   761  06A5                     l1240:	
   762  06A5  2EF0               	goto	l737
   763                           	line	18
   764                           ;7seg.h: 18: case 4: return 0x99;
   765                           	
   766  06A6                     l741:	
   767                           	
   768  06A6                     l1242:	
   769  06A6  3099               	movlw	low(099h)
   770  06A7  00F6               	movwf	(?_mask)
   771  06A8  3000               	movlw	high(099h)
   772  06A9  00F7               	movwf	((?_mask))+1
   773  06AA  2EF0               	goto	l737
   774                           	
   775  06AB                     l1244:	
   776  06AB  2EF0               	goto	l737
   777                           	line	19
   778                           ;7seg.h: 19: case 5: return 0x92;
   779                           	
   780  06AC                     l742:	
   781                           	
   782  06AC                     l1246:	
   783  06AC  3092               	movlw	low(092h)
   784  06AD  00F6               	movwf	(?_mask)
   785  06AE  3000               	movlw	high(092h)
   786  06AF  00F7               	movwf	((?_mask))+1
   787  06B0  2EF0               	goto	l737
   788                           	
   789  06B1                     l1248:	
   790  06B1  2EF0               	goto	l737
   791                           	line	20
   792                           ;7seg.h: 20: case 6: return 0x82;
   793                           	
   794  06B2                     l743:	
   795                           	
   796  06B2                     l1250:	
   797  06B2  3082               	movlw	low(082h)
   798  06B3  00F6               	movwf	(?_mask)
   799  06B4  3000               	movlw	high(082h)
   800  06B5  00F7               	movwf	((?_mask))+1
   801  06B6  2EF0               	goto	l737
   802                           	
   803  06B7                     l1252:	
   804  06B7  2EF0               	goto	l737
   805                           	line	21
   806                           ;7seg.h: 21: case 7: return 0xf8;
   807                           	
   808  06B8                     l744:	
   809                           	
   810  06B8                     l1254:	
   811  06B8  30F8               	movlw	low(0F8h)
   812  06B9  00F6               	movwf	(?_mask)
   813  06BA  3000               	movlw	high(0F8h)
   814  06BB  00F7               	movwf	((?_mask))+1
   815  06BC  2EF0               	goto	l737
   816                           	
   817  06BD                     l1256:	
   818  06BD  2EF0               	goto	l737
   819                           	line	22
   820                           ;7seg.h: 22: case 8: return 0x80;
   821                           	
   822  06BE                     l745:	
   823                           	
   824  06BE                     l1258:	
   825  06BE  3080               	movlw	low(080h)
   826  06BF  00F6               	movwf	(?_mask)
   827  06C0  3000               	movlw	high(080h)
   828  06C1  00F7               	movwf	((?_mask))+1
   829  06C2  2EF0               	goto	l737
   830                           	
   831  06C3                     l1260:	
   832  06C3  2EF0               	goto	l737
   833                           	line	23
   834                           ;7seg.h: 23: case 9: return 0x90;
   835                           	
   836  06C4                     l746:	
   837                           	
   838  06C4                     l1262:	
   839  06C4  3090               	movlw	low(090h)
   840  06C5  00F6               	movwf	(?_mask)
   841  06C6  3000               	movlw	high(090h)
   842  06C7  00F7               	movwf	((?_mask))+1
   843  06C8  2EF0               	goto	l737
   844                           	
   845  06C9                     l1264:	
   846  06C9  2EF0               	goto	l737
   847                           	line	24
   848                           	
   849  06CA                     l1266:	
   850                           ;7seg.h: 24: }
   851  06CA  2EF0               	goto	l737
   852                           	line	13
   853                           	
   854  06CB                     l735:	
   855                           	
   856  06CB                     l1268:	
   857                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
   858                           ; Switch size 1, requested type "space"
   859                           ; Number of cases is 1, Range of values is 0 to 0
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte            4     3 (average)
   863                           ; direct_byte           11     8 (fixed)
   864                           ; jumptable            260     6 (fixed)
   865                           ; rangetable             5     6 (fixed)
   866                           ; spacedrange            8     9 (fixed)
   867                           ; locatedrange           1     3 (fixed)
   868                           ;	Chosen strategy is simple_byte
   869                           
   870  06CB  0877               	movf (mask@num+1),w
   871                           	opt asmopt_off
   872  06CC  3A00               	xorlw	0^0	; case 0
   873  06CD  1903               	skipnz
   874  06CE  2ED0               	goto	l2060
   875  06CF  2EF0               	goto	l737
   876                           	opt asmopt_on
   877                           	
   878  06D0                     l2060:	
   879                           ; Switch size 1, requested type "space"
   880                           ; Number of cases is 10, Range of values is 0 to 9
   881                           ; switch strategies available:
   882                           ; Name         Instructions Cycles
   883                           ; simple_byte           31    16 (average)
   884                           ; direct_byte           38     8 (fixed)
   885                           ; jumptable            260     6 (fixed)
   886                           ; rangetable            14     6 (fixed)
   887                           ; spacedrange           26     9 (fixed)
   888                           ; locatedrange          10     3 (fixed)
   889                           ;	Chosen strategy is simple_byte
   890                           
   891  06D0  0876               	movf (mask@num),w
   892                           	opt asmopt_off
   893  06D1  3A00               	xorlw	0^0	; case 0
   894  06D2  1903               	skipnz
   895  06D3  2E8E               	goto	l1226
   896  06D4  3A01               	xorlw	1^0	; case 1
   897  06D5  1903               	skipnz
   898  06D6  2E94               	goto	l1230
   899  06D7  3A03               	xorlw	2^1	; case 2
   900  06D8  1903               	skipnz
   901  06D9  2E9A               	goto	l1234
   902  06DA  3A01               	xorlw	3^2	; case 3
   903  06DB  1903               	skipnz
   904  06DC  2EA0               	goto	l1238
   905  06DD  3A07               	xorlw	4^3	; case 4
   906  06DE  1903               	skipnz
   907  06DF  2EA6               	goto	l1242
   908  06E0  3A01               	xorlw	5^4	; case 5
   909  06E1  1903               	skipnz
   910  06E2  2EAC               	goto	l1246
   911  06E3  3A03               	xorlw	6^5	; case 6
   912  06E4  1903               	skipnz
   913  06E5  2EB2               	goto	l1250
   914  06E6  3A01               	xorlw	7^6	; case 7
   915  06E7  1903               	skipnz
   916  06E8  2EB8               	goto	l1254
   917  06E9  3A0F               	xorlw	8^7	; case 8
   918  06EA  1903               	skipnz
   919  06EB  2EBE               	goto	l1258
   920  06EC  3A01               	xorlw	9^8	; case 9
   921  06ED  1903               	skipnz
   922  06EE  2EC4               	goto	l1262
   923  06EF  2EF0               	goto	l737
   924                           	opt asmopt_on
   925                           
   926                           	line	24
   927                           	
   928  06F0                     l747:	
   929                           	line	25
   930                           	
   931  06F0                     l737:	
   932  06F0  0008               	return
   933                           	opt stack 0
   934                           GLOBAL	__end_of_mask
   935  06F1                     	__end_of_mask:
   936 ;; =============== function _mask ends ============
   937                           
   938                           	signat	_mask,4218
   939                           	global	_key
   940                           psect	text86,local,class=CODE,delta=2
   941                           global __ptext86
   942  06F1                     __ptext86:
   943                           
   944 ;; *************** function _key *****************
   945 ;; Defined at:
   946 ;;		line 56 in file "key.h"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      unsigned char 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          3       0       0       0       0
   963 ;;      Totals:         3       0       0       0       0
   964 ;;Total ram usage:        3 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           psect	text86
   973                           	file	"key.h"
   974                           	line	56
   975                           	global	__size_of_key
   976  010F                     	__size_of_key	equ	__end_of_key-_key
   977                           	
   978  06F1                     _key:	
   979                           	opt	stack 7
   980                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0]
   981                           	line	57
   982                           	
   983  06F1                     l1138:	
   984                           ;key.h: 57: PORTB=0X00;
   985  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
   986  06F2  1303               	bcf	status, 6	;RP1=0, select bank0
   987  06F3  0186               	clrf	(6)	;volatile
   988                           	line	58
   989                           ;key.h: 58: while(RB4&&RB5&&RB6&&RB7);
   990  06F4  2EF5               	goto	l702
   991                           	
   992  06F5                     l703:	
   993                           	
   994  06F5                     l702:	
   995  06F5  1E06               	btfss	(52/8),(52)&7
   996  06F6  2EF8               	goto	u11
   997  06F7  2EF9               	goto	u10
   998  06F8                     u11:
   999  06F8  2F77               	goto	l707
  1000  06F9                     u10:
  1001                           	
  1002  06F9                     l1140:	
  1003  06F9  1E86               	btfss	(53/8),(53)&7
  1004  06FA  2EFC               	goto	u21
  1005  06FB  2EFD               	goto	u20
  1006  06FC                     u21:
  1007  06FC  2F77               	goto	l707
  1008  06FD                     u20:
  1009                           	
  1010  06FD                     l1142:	
  1011  06FD  1F06               	btfss	(54/8),(54)&7
  1012  06FE  2F00               	goto	u31
  1013  06FF  2F01               	goto	u30
  1014  0700                     u31:
  1015  0700  2F77               	goto	l707
  1016  0701                     u30:
  1017                           	
  1018  0701                     l1144:	
  1019  0701  1B86               	btfsc	(55/8),(55)&7
  1020  0702  2F04               	goto	u41
  1021  0703  2F05               	goto	u40
  1022  0704                     u41:
  1023  0704  2EF5               	goto	l702
  1024  0705                     u40:
  1025  0705  2F77               	goto	l707
  1026                           	
  1027  0706                     l705:	
  1028  0706  2F77               	goto	l707
  1029                           	
  1030  0707                     l706:	
  1031                           	line	59
  1032                           ;key.h: 59: while(!RB4||!RB5||!RB6||!RB7) {
  1033  0707  2F77               	goto	l707
  1034                           	
  1035  0708                     l708:	
  1036                           	line	60
  1037                           ;key.h: 60: RB0=0;
  1038  0708  1006               	bcf	(48/8),(48)&7
  1039                           	line	61
  1040                           ;key.h: 61: RB1=RB2=RB3=1;
  1041  0709  1586               	bsf	(51/8),(51)&7
  1042  070A  1986               	btfsc	(51/8),(51)&7
  1043  070B  2F0D               	goto	u51
  1044  070C  2F11               	goto	u50
  1045                           	
  1046  070D                     u51:
  1047  070D  1283               	bcf	status, 5	;RP0=0, select bank0
  1048  070E  1303               	bcf	status, 6	;RP1=0, select bank0
  1049  070F  1506               	bsf	(50/8),(50)&7
  1050  0710  2F14               	goto	u64
  1051  0711                     u50:
  1052  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  1053  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  1054  0713  1106               	bcf	(50/8),(50)&7
  1055  0714                     u64:
  1056  0714  1906               	btfsc	(50/8),(50)&7
  1057  0715  2F17               	goto	u61
  1058  0716  2F1B               	goto	u60
  1059                           	
  1060  0717                     u61:
  1061  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  1062  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  1063  0719  1486               	bsf	(49/8),(49)&7
  1064  071A  2F1E               	goto	u74
  1065  071B                     u60:
  1066  071B  1283               	bcf	status, 5	;RP0=0, select bank0
  1067  071C  1303               	bcf	status, 6	;RP1=0, select bank0
  1068  071D  1086               	bcf	(49/8),(49)&7
  1069  071E                     u74:
  1070                           	line	62
  1071                           ;key.h: 62: if(!RB4||!RB5||!RB6||!RB7) {
  1072  071E  1E06               	btfss	(52/8),(52)&7
  1073  071F  2F21               	goto	u81
  1074  0720  2F22               	goto	u80
  1075  0721                     u81:
  1076  0721  2F2E               	goto	l711
  1077  0722                     u80:
  1078                           	
  1079  0722                     l1146:	
  1080  0722  1E86               	btfss	(53/8),(53)&7
  1081  0723  2F25               	goto	u91
  1082  0724  2F26               	goto	u90
  1083  0725                     u91:
  1084  0725  2F2E               	goto	l711
  1085  0726                     u90:
  1086                           	
  1087  0726                     l1148:	
  1088  0726  1F06               	btfss	(54/8),(54)&7
  1089  0727  2F29               	goto	u101
  1090  0728  2F2A               	goto	u100
  1091  0729                     u101:
  1092  0729  2F2E               	goto	l711
  1093  072A                     u100:
  1094                           	
  1095  072A                     l1150:	
  1096  072A  1B86               	btfsc	(55/8),(55)&7
  1097  072B  2F2D               	goto	u111
  1098  072C  2F2E               	goto	u110
  1099  072D                     u111:
  1100  072D  2F30               	goto	l709
  1101  072E                     u110:
  1102                           	
  1103  072E                     l711:	
  1104                           	line	63
  1105                           ;key.h: 63: rowloc=0;
  1106  072E  01FD               	clrf	(_rowloc)
  1107                           	line	64
  1108                           ;key.h: 64: break;
  1109  072F  2F87               	goto	l712
  1110                           	line	65
  1111                           	
  1112  0730                     l709:	
  1113                           	line	66
  1114                           ;key.h: 65: }
  1115                           ;key.h: 66: RB1=0;RB0=1;
  1116  0730  1086               	bcf	(49/8),(49)&7
  1117  0731  1406               	bsf	(48/8),(48)&7
  1118                           	line	67
  1119                           ;key.h: 67: if(!RB4||!RB5||!RB6||!RB7) {
  1120  0732  1E06               	btfss	(52/8),(52)&7
  1121  0733  2F35               	goto	u121
  1122  0734  2F36               	goto	u120
  1123  0735                     u121:
  1124  0735  2F43               	goto	l1158
  1125  0736                     u120:
  1126                           	
  1127  0736                     l1152:	
  1128  0736  1E86               	btfss	(53/8),(53)&7
  1129  0737  2F39               	goto	u131
  1130  0738  2F3A               	goto	u130
  1131  0739                     u131:
  1132  0739  2F43               	goto	l1158
  1133  073A                     u130:
  1134                           	
  1135  073A                     l1154:	
  1136  073A  1F06               	btfss	(54/8),(54)&7
  1137  073B  2F3D               	goto	u141
  1138  073C  2F3E               	goto	u140
  1139  073D                     u141:
  1140  073D  2F43               	goto	l1158
  1141  073E                     u140:
  1142                           	
  1143  073E                     l1156:	
  1144  073E  1B86               	btfsc	(55/8),(55)&7
  1145  073F  2F41               	goto	u151
  1146  0740  2F42               	goto	u150
  1147  0741                     u151:
  1148  0741  2F47               	goto	l713
  1149  0742                     u150:
  1150  0742  2F43               	goto	l1158
  1151                           	
  1152  0743                     l715:	
  1153                           	line	68
  1154                           	
  1155  0743                     l1158:	
  1156                           ;key.h: 68: rowloc=1;
  1157  0743  01FD               	clrf	(_rowloc)
  1158  0744  1403               	bsf	status,0
  1159  0745  0DFD               	rlf	(_rowloc),f
  1160                           	line	69
  1161                           ;key.h: 69: break;
  1162  0746  2F87               	goto	l712
  1163                           	line	70
  1164                           	
  1165  0747                     l713:	
  1166                           	line	71
  1167                           ;key.h: 70: }
  1168                           ;key.h: 71: RB2=0;RB1=1;
  1169  0747  1106               	bcf	(50/8),(50)&7
  1170  0748  1486               	bsf	(49/8),(49)&7
  1171                           	line	72
  1172                           ;key.h: 72: if(!RB4||!RB5||!RB6||!RB7) {
  1173  0749  1E06               	btfss	(52/8),(52)&7
  1174  074A  2F4C               	goto	u161
  1175  074B  2F4D               	goto	u160
  1176  074C                     u161:
  1177  074C  2F5A               	goto	l1166
  1178  074D                     u160:
  1179                           	
  1180  074D                     l1160:	
  1181  074D  1E86               	btfss	(53/8),(53)&7
  1182  074E  2F50               	goto	u171
  1183  074F  2F51               	goto	u170
  1184  0750                     u171:
  1185  0750  2F5A               	goto	l1166
  1186  0751                     u170:
  1187                           	
  1188  0751                     l1162:	
  1189  0751  1F06               	btfss	(54/8),(54)&7
  1190  0752  2F54               	goto	u181
  1191  0753  2F55               	goto	u180
  1192  0754                     u181:
  1193  0754  2F5A               	goto	l1166
  1194  0755                     u180:
  1195                           	
  1196  0755                     l1164:	
  1197  0755  1B86               	btfsc	(55/8),(55)&7
  1198  0756  2F58               	goto	u191
  1199  0757  2F59               	goto	u190
  1200  0758                     u191:
  1201  0758  2F5F               	goto	l716
  1202  0759                     u190:
  1203  0759  2F5A               	goto	l1166
  1204                           	
  1205  075A                     l718:	
  1206                           	line	73
  1207                           	
  1208  075A                     l1166:	
  1209                           ;key.h: 73: rowloc=2;
  1210  075A  3002               	movlw	(02h)
  1211  075B  00F0               	movwf	(??_key+0)+0
  1212  075C  0870               	movf	(??_key+0)+0,w
  1213  075D  00FD               	movwf	(_rowloc)
  1214                           	line	74
  1215                           ;key.h: 74: break;
  1216  075E  2F87               	goto	l712
  1217                           	line	75
  1218                           	
  1219  075F                     l716:	
  1220                           	line	76
  1221                           ;key.h: 75: }
  1222                           ;key.h: 76: RB3=0; RB2=1;
  1223  075F  1186               	bcf	(51/8),(51)&7
  1224  0760  1506               	bsf	(50/8),(50)&7
  1225                           	line	77
  1226                           ;key.h: 77: if(!RB4||!RB5||!RB6||!RB7){
  1227  0761  1E06               	btfss	(52/8),(52)&7
  1228  0762  2F64               	goto	u201
  1229  0763  2F65               	goto	u200
  1230  0764                     u201:
  1231  0764  2F72               	goto	l1174
  1232  0765                     u200:
  1233                           	
  1234  0765                     l1168:	
  1235  0765  1E86               	btfss	(53/8),(53)&7
  1236  0766  2F68               	goto	u211
  1237  0767  2F69               	goto	u210
  1238  0768                     u211:
  1239  0768  2F72               	goto	l1174
  1240  0769                     u210:
  1241                           	
  1242  0769                     l1170:	
  1243  0769  1F06               	btfss	(54/8),(54)&7
  1244  076A  2F6C               	goto	u221
  1245  076B  2F6D               	goto	u220
  1246  076C                     u221:
  1247  076C  2F72               	goto	l1174
  1248  076D                     u220:
  1249                           	
  1250  076D                     l1172:	
  1251  076D  1B86               	btfsc	(55/8),(55)&7
  1252  076E  2F70               	goto	u231
  1253  076F  2F71               	goto	u230
  1254  0770                     u231:
  1255  0770  2F77               	goto	l707
  1256  0771                     u230:
  1257  0771  2F72               	goto	l1174
  1258                           	
  1259  0772                     l721:	
  1260                           	line	78
  1261                           	
  1262  0772                     l1174:	
  1263                           ;key.h: 78: rowloc=3;
  1264  0772  3003               	movlw	(03h)
  1265  0773  00F0               	movwf	(??_key+0)+0
  1266  0774  0870               	movf	(??_key+0)+0,w
  1267  0775  00FD               	movwf	(_rowloc)
  1268                           	line	79
  1269                           ;key.h: 79: break;
  1270  0776  2F87               	goto	l712
  1271                           	line	80
  1272                           	
  1273  0777                     l719:	
  1274                           	line	81
  1275                           	
  1276  0777                     l707:	
  1277                           	line	59
  1278  0777  1E06               	btfss	(52/8),(52)&7
  1279  0778  2F7A               	goto	u241
  1280  0779  2F7B               	goto	u240
  1281  077A                     u241:
  1282  077A  2F08               	goto	l708
  1283  077B                     u240:
  1284                           	
  1285  077B                     l1176:	
  1286  077B  1E86               	btfss	(53/8),(53)&7
  1287  077C  2F7E               	goto	u251
  1288  077D  2F7F               	goto	u250
  1289  077E                     u251:
  1290  077E  2F08               	goto	l708
  1291  077F                     u250:
  1292                           	
  1293  077F                     l1178:	
  1294  077F  1F06               	btfss	(54/8),(54)&7
  1295  0780  2F82               	goto	u261
  1296  0781  2F83               	goto	u260
  1297  0782                     u261:
  1298  0782  2F08               	goto	l708
  1299  0783                     u260:
  1300                           	
  1301  0783                     l1180:	
  1302  0783  1F86               	btfss	(55/8),(55)&7
  1303  0784  2F86               	goto	u271
  1304  0785  2F87               	goto	u270
  1305  0786                     u271:
  1306  0786  2F08               	goto	l708
  1307  0787                     u270:
  1308                           	
  1309  0787                     l712:	
  1310                           	line	82
  1311                           ;key.h: 80: }
  1312                           ;key.h: 81: }
  1313                           ;key.h: 82: if(RB4==0&&RB5!=0&&RB6!=0&&RB7!=0)
  1314  0787  1A06               	btfsc	(52/8),(52)&7
  1315  0788  2F8A               	goto	u281
  1316  0789  2F8B               	goto	u280
  1317  078A                     u281:
  1318  078A  2F99               	goto	l722
  1319  078B                     u280:
  1320                           	
  1321  078B                     l1182:	
  1322  078B  1E86               	btfss	(53/8),(53)&7
  1323  078C  2F8E               	goto	u291
  1324  078D  2F8F               	goto	u290
  1325  078E                     u291:
  1326  078E  2F99               	goto	l722
  1327  078F                     u290:
  1328                           	
  1329  078F                     l1184:	
  1330  078F  1F06               	btfss	(54/8),(54)&7
  1331  0790  2F92               	goto	u301
  1332  0791  2F93               	goto	u300
  1333  0792                     u301:
  1334  0792  2F99               	goto	l722
  1335  0793                     u300:
  1336                           	
  1337  0793                     l1186:	
  1338  0793  1F86               	btfss	(55/8),(55)&7
  1339  0794  2F96               	goto	u311
  1340  0795  2F97               	goto	u310
  1341  0796                     u311:
  1342  0796  2F99               	goto	l722
  1343  0797                     u310:
  1344                           	line	83
  1345                           	
  1346  0797                     l1188:	
  1347                           ;key.h: 83: colloc=0;
  1348  0797  01FC               	clrf	(_colloc)
  1349  0798  2FDB               	goto	l729
  1350                           	line	84
  1351                           	
  1352  0799                     l722:	
  1353                           ;key.h: 84: else if(RB4!=0&&RB5==0&&RB6!=0&&RB7!=0)
  1354  0799  1E06               	btfss	(52/8),(52)&7
  1355  079A  2F9C               	goto	u321
  1356  079B  2F9D               	goto	u320
  1357  079C                     u321:
  1358  079C  2FAD               	goto	l724
  1359  079D                     u320:
  1360                           	
  1361  079D                     l1190:	
  1362  079D  1A86               	btfsc	(53/8),(53)&7
  1363  079E  2FA0               	goto	u331
  1364  079F  2FA1               	goto	u330
  1365  07A0                     u331:
  1366  07A0  2FAD               	goto	l724
  1367  07A1                     u330:
  1368                           	
  1369  07A1                     l1192:	
  1370  07A1  1F06               	btfss	(54/8),(54)&7
  1371  07A2  2FA4               	goto	u341
  1372  07A3  2FA5               	goto	u340
  1373  07A4                     u341:
  1374  07A4  2FAD               	goto	l724
  1375  07A5                     u340:
  1376                           	
  1377  07A5                     l1194:	
  1378  07A5  1F86               	btfss	(55/8),(55)&7
  1379  07A6  2FA8               	goto	u351
  1380  07A7  2FA9               	goto	u350
  1381  07A8                     u351:
  1382  07A8  2FAD               	goto	l724
  1383  07A9                     u350:
  1384                           	line	85
  1385                           	
  1386  07A9                     l1196:	
  1387                           ;key.h: 85: colloc=1;
  1388  07A9  01FC               	clrf	(_colloc)
  1389  07AA  1403               	bsf	status,0
  1390  07AB  0DFC               	rlf	(_colloc),f
  1391  07AC  2FDB               	goto	l729
  1392                           	line	86
  1393                           	
  1394  07AD                     l724:	
  1395                           ;key.h: 86: else if(RB4!=0&&RB5!=0&&RB6==0&&RB7!=0)
  1396  07AD  1E06               	btfss	(52/8),(52)&7
  1397  07AE  2FB0               	goto	u361
  1398  07AF  2FB1               	goto	u360
  1399  07B0                     u361:
  1400  07B0  2FC2               	goto	l726
  1401  07B1                     u360:
  1402                           	
  1403  07B1                     l1198:	
  1404  07B1  1E86               	btfss	(53/8),(53)&7
  1405  07B2  2FB4               	goto	u371
  1406  07B3  2FB5               	goto	u370
  1407  07B4                     u371:
  1408  07B4  2FC2               	goto	l726
  1409  07B5                     u370:
  1410                           	
  1411  07B5                     l1200:	
  1412  07B5  1B06               	btfsc	(54/8),(54)&7
  1413  07B6  2FB8               	goto	u381
  1414  07B7  2FB9               	goto	u380
  1415  07B8                     u381:
  1416  07B8  2FC2               	goto	l726
  1417  07B9                     u380:
  1418                           	
  1419  07B9                     l1202:	
  1420  07B9  1F86               	btfss	(55/8),(55)&7
  1421  07BA  2FBC               	goto	u391
  1422  07BB  2FBD               	goto	u390
  1423  07BC                     u391:
  1424  07BC  2FC2               	goto	l726
  1425  07BD                     u390:
  1426                           	line	87
  1427                           	
  1428  07BD                     l1204:	
  1429                           ;key.h: 87: colloc=2;
  1430  07BD  3002               	movlw	(02h)
  1431  07BE  00F0               	movwf	(??_key+0)+0
  1432  07BF  0870               	movf	(??_key+0)+0,w
  1433  07C0  00FC               	movwf	(_colloc)
  1434  07C1  2FDB               	goto	l729
  1435                           	line	88
  1436                           	
  1437  07C2                     l726:	
  1438                           ;key.h: 88: else if(RB4!=0&&RB5!=0&&RB6!=0&&RB7==0)
  1439  07C2  1E06               	btfss	(52/8),(52)&7
  1440  07C3  2FC5               	goto	u401
  1441  07C4  2FC6               	goto	u400
  1442  07C5                     u401:
  1443  07C5  2FDB               	goto	l729
  1444  07C6                     u400:
  1445                           	
  1446  07C6                     l1206:	
  1447  07C6  1E86               	btfss	(53/8),(53)&7
  1448  07C7  2FC9               	goto	u411
  1449  07C8  2FCA               	goto	u410
  1450  07C9                     u411:
  1451  07C9  2FDB               	goto	l729
  1452  07CA                     u410:
  1453                           	
  1454  07CA                     l1208:	
  1455  07CA  1F06               	btfss	(54/8),(54)&7
  1456  07CB  2FCD               	goto	u421
  1457  07CC  2FCE               	goto	u420
  1458  07CD                     u421:
  1459  07CD  2FDB               	goto	l729
  1460  07CE                     u420:
  1461                           	
  1462  07CE                     l1210:	
  1463  07CE  1B86               	btfsc	(55/8),(55)&7
  1464  07CF  2FD1               	goto	u431
  1465  07D0  2FD2               	goto	u430
  1466  07D1                     u431:
  1467  07D1  2FDB               	goto	l729
  1468  07D2                     u430:
  1469                           	line	89
  1470                           	
  1471  07D2                     l1212:	
  1472                           ;key.h: 89: colloc=3;
  1473  07D2  3003               	movlw	(03h)
  1474  07D3  00F0               	movwf	(??_key+0)+0
  1475  07D4  0870               	movf	(??_key+0)+0,w
  1476  07D5  00FC               	movwf	(_colloc)
  1477  07D6  2FDB               	goto	l729
  1478                           	
  1479  07D7                     l728:	
  1480  07D7  2FDB               	goto	l729
  1481                           	line	90
  1482                           	
  1483  07D8                     l727:	
  1484  07D8  2FDB               	goto	l729
  1485                           	
  1486  07D9                     l725:	
  1487  07D9  2FDB               	goto	l729
  1488                           	
  1489  07DA                     l723:	
  1490                           ;key.h: 90: while(RB4==0||RB5==0||RB6==0||RB7==0);
  1491  07DA  2FDB               	goto	l729
  1492                           	
  1493  07DB                     l730:	
  1494                           	
  1495  07DB                     l729:	
  1496  07DB  1E06               	btfss	(52/8),(52)&7
  1497  07DC  2FDE               	goto	u441
  1498  07DD  2FDF               	goto	u440
  1499  07DE                     u441:
  1500  07DE  2FDB               	goto	l729
  1501  07DF                     u440:
  1502                           	
  1503  07DF                     l1214:	
  1504  07DF  1E86               	btfss	(53/8),(53)&7
  1505  07E0  2FE2               	goto	u451
  1506  07E1  2FE3               	goto	u450
  1507  07E2                     u451:
  1508  07E2  2FDB               	goto	l729
  1509  07E3                     u450:
  1510                           	
  1511  07E3                     l1216:	
  1512  07E3  1F06               	btfss	(54/8),(54)&7
  1513  07E4  2FE6               	goto	u461
  1514  07E5  2FE7               	goto	u460
  1515  07E6                     u461:
  1516  07E6  2FDB               	goto	l729
  1517  07E7                     u460:
  1518                           	
  1519  07E7                     l1218:	
  1520  07E7  1F86               	btfss	(55/8),(55)&7
  1521  07E8  2FEA               	goto	u471
  1522  07E9  2FEB               	goto	u470
  1523  07EA                     u471:
  1524  07EA  2FDB               	goto	l729
  1525  07EB                     u470:
  1526  07EB  2FEC               	goto	l1220
  1527                           	
  1528  07EC                     l731:	
  1529                           	line	91
  1530                           	
  1531  07EC                     l1220:	
  1532                           ;key.h: 91: return (keypad[rowloc][colloc]);
  1533  07EC  087D               	movf	(_rowloc),w
  1534  07ED  00F0               	movwf	(??_key+0)+0
  1535  07EE  3002               	movlw	02h
  1536  07EF                     u485:
  1537  07EF  1003               	clrc
  1538  07F0  0DF0               	rlf	(??_key+0)+0,f
  1539  07F1  3EFF               	addlw	-1
  1540  07F2  1D03               	skipz
  1541  07F3  2FEF               	goto	u485
  1542  07F4  3020               	movlw	(_keypad)&0ffh
  1543  07F5  0770               	addwf	0+(??_key+0)+0,w
  1544  07F6  00F1               	movwf	(??_key+1)+0
  1545  07F7  087C               	movf	(_colloc),w
  1546  07F8  0771               	addwf	0+(??_key+1)+0,w
  1547  07F9  00F2               	movwf	(??_key+2)+0
  1548  07FA  0872               	movf	0+(??_key+2)+0,w
  1549  07FB  0084               	movwf	fsr0
  1550  07FC  1383               	bcf	status, 7	;select IRP bank0
  1551  07FD  0800               	movf	indf,w
  1552  07FE  2FFF               	goto	l732
  1553                           	
  1554  07FF                     l1222:	
  1555                           	line	92
  1556                           	
  1557  07FF                     l732:	
  1558  07FF  0008               	return
  1559                           	opt stack 0
  1560                           GLOBAL	__end_of_key
  1561  0800                     	__end_of_key:
  1562 ;; =============== function _key ends ============
  1563                           
  1564                           	signat	_key,89
  1565                           	global	_keyinit
  1566                           psect	text87,local,class=CODE,delta=2
  1567                           global __ptext87
  1568  05CB                     __ptext87:
  1569                           
  1570 ;; *************** function _keyinit *****************
  1571 ;; Defined at:
  1572 ;;		line 50 in file "key.h"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          1       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           psect	text87
  1599                           	file	"key.h"
  1600                           	line	50
  1601                           	global	__size_of_keyinit
  1602  0009                     	__size_of_keyinit	equ	__end_of_keyinit-_keyinit
  1603                           	
  1604  05CB                     _keyinit:	
  1605                           	opt	stack 7
  1606                           ; Regs used in _keyinit: [wreg+status,2+status,0]
  1607                           	line	51
  1608                           	
  1609  05CB                     l1134:	
  1610                           ;key.h: 51: TRISB=0XF0;
  1611  05CB  30F0               	movlw	(0F0h)
  1612  05CC  1683               	bsf	status, 5	;RP0=1, select bank1
  1613  05CD  1303               	bcf	status, 6	;RP1=0, select bank1
  1614  05CE  0086               	movwf	(134)^080h	;volatile
  1615                           	line	52
  1616                           	
  1617  05CF                     l1136:	
  1618                           ;key.h: 52: OPTION_REG&=0X7F;
  1619  05CF  307F               	movlw	(07Fh)
  1620  05D0  00F0               	movwf	(??_keyinit+0)+0
  1621  05D1  0870               	movf	(??_keyinit+0)+0,w
  1622  05D2  0581               	andwf	(129)^080h,f	;volatile
  1623                           	line	53
  1624                           	
  1625  05D3                     l699:	
  1626  05D3  0008               	return
  1627                           	opt stack 0
  1628                           GLOBAL	__end_of_keyinit
  1629  05D4                     	__end_of_keyinit:
  1630 ;; =============== function _keyinit ends ============
  1631                           
  1632                           	signat	_keyinit,88
  1633                           psect	text88,local,class=CODE,delta=2
  1634                           global __ptext88
  1635  0000                     __ptext88:
  1636                           	global	btemp
  1637  007E                     	btemp set 07Eh
  1638                           
  1639                           	DABS	1,126,2	;btemp
  1640                           	global	wtemp0
  1641  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Nov 28 09:40:46 2020

                   _i 0032                     _j 0034                     pc 0002                    u10 06F9  
                  u11 06F8                    u20 06FD                    u21 06FC                    u30 0701  
                  u31 0700                    u40 0705                    u41 0704                    u50 0711  
                  u51 070D                    u60 071B                    u61 0717                    u80 0722  
                  u64 0714                    u81 0721                    u90 0726                    u74 071E  
                  u91 0725                    _dk 0030                    fsr 0004                   l702 06F5  
                 l711 072E                   l703 06F5                   l712 0787                   l721 0772  
                 l713 0747                   l705 0706                   l730 07DB                   l722 0799  
                 l706 0707                   l731 07EC                   l723 07DA                   l715 0743  
                 l707 0777                   l732 07FF                   l724 07AD                   l716 075F  
                 l708 0708                   l740 06A0                   l725 07D9                   l709 0730  
                 l741 06A6                   l726 07C2                   l718 075A                   l742 06AC  
                 l750 061B                   l727 07D8                   l719 0777                   l735 06CB  
                 l743 06B2                   l751 0645                   l728 07D7                   l744 06B8  
                 l736 068E                   l752 0646                   l729 07DB                   l745 06BE  
                 l737 06F0                   l753 0646                   l746 06C4                   l738 0694  
                 l747 06F0                   l739 069A                   l780 0653                   l781 0664  
                 l782 0665                   l783 0676                   l784 0684                   l785 068C  
                 l778 0685                   l699 05D3                   l779 065F                   _RB0 0030  
                 _RB1 0031                   _RB2 0032                   _RB3 0033                   _RB4 0034  
                 _RB5 0035                   _RB6 0036                   _RB7 0037                   u100 072A  
                 u101 0729                   u110 072E                   u111 072D                   u200 0765  
                 u120 0736                   u201 0764                   u121 0735                   u210 0769  
                 u130 073A                   u211 0768                   u131 0739                   u300 0793  
                 u220 076D                   u140 073E                   u301 0792                   u221 076C  
                 u141 073D                   u310 0797                   u230 0771                   u150 0742  
                 u311 0796                   u231 0770                   u151 0741                   u400 07C6  
                 u320 079D                   u240 077B                   u160 074D                   u401 07C5  
                 u321 079C                   u241 077A                   u161 074C                   u410 07CA  
                 u330 07A1                   u250 077F                   u170 0751                   u411 07C9  
                 u331 07A0                   u251 077E                   u171 0750                   u420 07CE  
                 u340 07A5                   u260 0783                   u180 0755                   u421 07CD  
                 u341 07A4                   u261 0782                   u181 0754                   u430 07D2  
                 u350 07A9                   u270 0787                   u190 0759                   u431 07D1  
                 u351 07A8                   u271 0786                   u191 0758                   u440 07DF  
                 u360 07B1                   u280 078B                   u441 07DE                   u361 07B0  
                 u281 078A                   u450 07E3                   u370 07B5                   u290 078F  
                 u451 07E2                   u371 07B4                   u291 078E                   u460 07E7  
                 u380 07B9                   u620 064F                   u461 07E6                   u381 07B8  
                 u621 064E                   u470 07EB                   u390 07BD                   u471 07EA  
                 u391 07BC                   u640 0663                   u641 0662                   u650 066F  
                 u651 066E                   u635 0654                   u485 07EF                   u670 0683  
                 u671 0682                   u655 066B                   u665 0677                   _key 06F1  
                 _num 0036                   fsr0 0004                   indf 0000                  l1200 07B5  
                l1210 07CE                  l1202 07B9                  l1220 07EC                  l1212 07D2  
                l1204 07BD                  l1140 06F9                  l1134 05CB                  l1222 07FF  
                l1214 07DF                  l1206 07C6                  l1150 072A                  l1142 06FD  
                l1230 0694                  l1136 05CF                  l1216 07E3                  l1208 07CA  
                l1160 074D                  l1152 0736                  l1144 0701                  l1240 06A5  
                l1232 0699                  l1224 068D                  l1320 065F                  l1312 0649  
                l1218 07E7                  l1170 0769                  l1162 0751                  l1154 073A  
                l1146 0722                  l1138 06F1                  l1250 06B2                  l1242 06A6  
                l1234 069A                  l1226 068E                  l1322 0665                  l1314 064F  
                l1330 0685                  l2042 0611                  l1180 0783                  l1172 076D  
                l1164 0755                  l1156 073E                  l1148 0726                  l2060 06D0  
                l1260 06C3                  l1252 06B7                  l1244 06AB                  l1236 069F  
                l1228 0693                  l1332 068C                  l1324 066F                  l1316 0653  
                l2044 0615                  l1190 079D                  l1182 078B                  l1174 0772  
                l1166 075A                  l1158 0743                  l1262 06C4                  l1254 06B8  
                l1246 06AC                  l1238 06A0                  l1326 0676                  l1318 065A  
                l2046 061B                  l1192 07A1                  l1184 078F                  l1176 077B  
                l1168 0765                  l1264 06C9                  l1256 06BD                  l1248 06B1  
                l1328 067D                  l2048 0626                  l1194 07A5                  l1186 0793  
                l1178 077F                  l1266 06CA                  l1258 06BE                  l1196 07A9  
                l1188 0797                  l1268 06CB                  l1198 07B1                  ?_key 0070  
                _main 0611                  _mask 068D                  btemp 007E                  start 0000  
               ??_key 0070                 ?_main 0070                 ?_mask 0076       __end_of___lwmod 068D  
               _PORTB 0006                 _PORTD 0008                 _TRISB 0086                 _TRISD 0088  
     __end_of_keyinit 05D4                 main@b 007A                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0649          __end_of_mask 06F1                ??_main 0078  
              ??_mask 0078             ??___lwmod 0074                _colloc 007C                _keypad 0020  
              _rowloc 007D             ??_keyinit 0070        __pcstackCOMMON 0070          __pidataBANK0 05D4  
          __pbssBANK0 0030            __pmaintext 0611               ___lwmod 0649          __size_of_key 010F  
             _keyinit 05CB  end_of_initialization 060D               mask@num 0076               init_ram 05E8  
 start_initialization 05F5           __end_of_key 0800           __pdataBANK0 0020           __pbssCOMMON 007C  
            ?___lwmod 0070              ?_keyinit 0070             init_fetch 05E4      __size_of___lwmod 0044  
    __size_of_keyinit 0009              __ptext84 0649              __ptext85 068D              __ptext86 06F1  
            __ptext87 05CB              __ptext88 0000         __size_of_main 0038         __size_of_mask 0064  
    ___lwmod@dividend 0072            _OPTION_REG 0081       ___lwmod@divisor 0070       ___lwmod@counter 0075  
