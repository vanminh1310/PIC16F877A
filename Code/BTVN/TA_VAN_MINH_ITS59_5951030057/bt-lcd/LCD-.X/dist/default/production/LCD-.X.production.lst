

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Jan 21 15:56:42 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_init
    43                           	FNCALL	_main,_len
    44                           	FNCALL	_main,_xuong
    45                           	FNCALL	_xuong,_cmd
    46                           	FNCALL	_xuong,___lwdiv
    47                           	FNCALL	_xuong,_dat
    48                           	FNCALL	_xuong,___lwmod
    49                           	FNCALL	_xuong,_delay
    50                           	FNCALL	_len,_cmd
    51                           	FNCALL	_len,___lwdiv
    52                           	FNCALL	_len,_dat
    53                           	FNCALL	_len,___lwmod
    54                           	FNCALL	_len,_delay
    55                           	FNCALL	_lcd_init,_cmd
    56                           	FNCALL	_dat,_lcd_delay
    57                           	FNCALL	_cmd,_lcd_delay
    58                           	FNROOT	_main
    59                           	global	_a
    60                           	global	_i
    61                           	global	_INTCON
    62                           psect	text114,local,class=CODE,delta=2
    63                           global __ptext114
    64  0000                     __ptext114:
    65  000B                     _INTCON	set	11
    66                           	global	_PORTB
    67  0006                     _PORTB	set	6
    68                           	global	_RC0
    69  0038                     _RC0	set	56
    70                           	global	_RC1
    71  0039                     _RC1	set	57
    72                           	global	_TMR0IF
    73  005A                     _TMR0IF	set	90
    74                           	global	_OPTION_REG
    75  0081                     _OPTION_REG	set	129
    76                           	global	_TRISB
    77  0086                     _TRISB	set	134
    78                           	global	_TRISC0
    79  0438                     _TRISC0	set	1080
    80                           	global	_TRISC1
    81  0439                     _TRISC1	set	1081
    82                           	file	"C:\Users\tamin\AppData\Local\Temp\sc30."
    83                           	line	#
    84                           psect cinit,class=CODE,delta=2
    85                           global start_initialization
    86  05C3                     start_initialization:
    87                           
    88                           psect	bssCOMMON,class=COMMON,space=1
    89                           global __pbssCOMMON
    90  0078                     __pbssCOMMON:
    91  0078                     _a:
    92  0078                            ds      2
    93                           
    94  007A                     _i:
    95  007A                            ds      2
    96                           
    97                           ; Clear objects allocated to COMMON
    98                           psect cinit,class=CODE,delta=2
    99  05C3  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   100  05C4  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   101  05C5  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   102  05C6  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   103                           psect cinit,class=CODE,delta=2
   104                           global end_of_initialization
   105                           
   106                           ;End of C runtime variable initialization code
   107                           
   108  05C7                     end_of_initialization:
   109  05C7  0183               clrf status
   110  05C8  120A  118A  2E23   ljmp _main	;jump to C main() function
   111                           psect	cstackCOMMON,class=COMMON,space=1
   112                           global __pcstackCOMMON
   113  0070                     __pcstackCOMMON:
   114                           	global	?_cmd
   115  0070                     ?_cmd:	; 0 bytes @ 0x0
   116                           	global	?_lcd_delay
   117  0070                     ?_lcd_delay:	; 0 bytes @ 0x0
   118                           	global	??_lcd_delay
   119  0070                     ??_lcd_delay:	; 0 bytes @ 0x0
   120                           	global	?_lcd_init
   121  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   122                           	global	?_dat
   123  0070                     ?_dat:	; 0 bytes @ 0x0
   124                           	global	?_delay
   125  0070                     ?_delay:	; 0 bytes @ 0x0
   126                           	global	?_len
   127  0070                     ?_len:	; 0 bytes @ 0x0
   128                           	global	?_xuong
   129  0070                     ?_xuong:	; 0 bytes @ 0x0
   130                           	global	?_main
   131  0070                     ?_main:	; 0 bytes @ 0x0
   132                           	global	?___lwdiv
   133  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   134                           	global	?___lwmod
   135  0070                     ?___lwmod:	; 2 bytes @ 0x0
   136                           	global	lcd_delay@lcd_delay
   137  0070                     lcd_delay@lcd_delay:	; 2 bytes @ 0x0
   138                           	global	delay@a
   139  0070                     delay@a:	; 2 bytes @ 0x0
   140                           	global	___lwdiv@divisor
   141  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   142                           	global	___lwmod@divisor
   143  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   144  0070                     	ds	2
   145                           	global	??_cmd
   146  0072                     ??_cmd:	; 0 bytes @ 0x2
   147                           	global	??_dat
   148  0072                     ??_dat:	; 0 bytes @ 0x2
   149                           	global	??_delay
   150  0072                     ??_delay:	; 0 bytes @ 0x2
   151                           	global	delay@i
   152  0072                     delay@i:	; 2 bytes @ 0x2
   153                           	global	___lwdiv@dividend
   154  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   155                           	global	___lwmod@dividend
   156  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   157  0072                     	ds	2
   158                           	global	??___lwdiv
   159  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   160                           	global	??___lwmod
   161  0074                     ??___lwmod:	; 0 bytes @ 0x4
   162                           	global	cmd@a
   163  0074                     cmd@a:	; 1 bytes @ 0x4
   164                           	global	dat@b
   165  0074                     dat@b:	; 1 bytes @ 0x4
   166  0074                     	ds	1
   167                           	global	??_lcd_init
   168  0075                     ??_lcd_init:	; 0 bytes @ 0x5
   169                           	global	___lwmod@counter
   170  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   171                           	global	___lwdiv@quotient
   172  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   173  0075                     	ds	2
   174                           	global	___lwdiv@counter
   175  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   176  0077                     	ds	1
   177                           	global	??_len
   178  0078                     ??_len:	; 0 bytes @ 0x8
   179                           	global	??_xuong
   180  0078                     ??_xuong:	; 0 bytes @ 0x8
   181                           	global	??_main
   182  0078                     ??_main:	; 0 bytes @ 0x8
   183 ;;Data sizes: Strings 0, constant 0, data 0, bss 4, persistent 0 stack 0
   184 ;;Auto spaces:   Size  Autos    Used
   185 ;; COMMON          14      8      12
   186 ;; BANK0           80      0       0
   187 ;; BANK1           80      0       0
   188 ;; BANK3           96      0       0
   189 ;; BANK2           96      0       0
   190                           
   191 ;;
   192 ;; Pointer list with targets:
   193                           
   194 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   195 ;;
   196 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   197 ;;
   198                           
   199                           
   200 ;;
   201 ;; Critical Paths under _main in COMMON
   202 ;;
   203 ;;   _xuong->___lwdiv
   204 ;;   _len->___lwdiv
   205 ;;   _lcd_init->_cmd
   206 ;;   _dat->_lcd_delay
   207 ;;   _cmd->_lcd_delay
   208 ;;
   209 ;; Critical Paths under _main in BANK0
   210 ;;
   211 ;;   None.
   212 ;;
   213 ;; Critical Paths under _main in BANK1
   214 ;;
   215 ;;   None.
   216 ;;
   217 ;; Critical Paths under _main in BANK3
   218 ;;
   219 ;;   None.
   220 ;;
   221 ;; Critical Paths under _main in BANK2
   222 ;;
   223 ;;   None.
   224                           
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228                           
   229 ;;
   230 ;;Call Graph Tables:
   231 ;;
   232 ;; ---------------------------------------------------------------------------------
   233 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   234 ;; ---------------------------------------------------------------------------------
   235 ;; (0) _main                                                 2     2      0     780
   236 ;;                           _lcd_init
   237 ;;                                _len
   238 ;;                              _xuong
   239 ;; ---------------------------------------------------------------------------------
   240 ;; (1) _xuong                                                0     0      0     360
   241 ;;                                _cmd
   242 ;;                            ___lwdiv
   243 ;;                                _dat
   244 ;;                            ___lwmod
   245 ;;                              _delay
   246 ;; ---------------------------------------------------------------------------------
   247 ;; (1) _len                                                  0     0      0     360
   248 ;;                                _cmd
   249 ;;                            ___lwdiv
   250 ;;                                _dat
   251 ;;                            ___lwmod
   252 ;;                              _delay
   253 ;; ---------------------------------------------------------------------------------
   254 ;; (1) _lcd_init                                             0     0      0      60
   255 ;;                                _cmd
   256 ;; ---------------------------------------------------------------------------------
   257 ;; (2) _dat                                                  3     3      0      60
   258 ;;                                              2 COMMON     3     3      0
   259 ;;                          _lcd_delay
   260 ;; ---------------------------------------------------------------------------------
   261 ;; (2) _cmd                                                  3     3      0      60
   262 ;;                                              2 COMMON     3     3      0
   263 ;;                          _lcd_delay
   264 ;; ---------------------------------------------------------------------------------
   265 ;; (2) ___lwmod                                              6     2      4     105
   266 ;;                                              0 COMMON     6     2      4
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (2) ___lwdiv                                              8     4      4     105
   269 ;;                                              0 COMMON     8     4      4
   270 ;; ---------------------------------------------------------------------------------
   271 ;; (2) _delay                                                4     2      2      30
   272 ;;                                              0 COMMON     4     2      2
   273 ;; ---------------------------------------------------------------------------------
   274 ;; (3) _lcd_delay                                            2     2      0      30
   275 ;;                                              0 COMMON     2     2      0
   276 ;; ---------------------------------------------------------------------------------
   277 ;; Estimated maximum stack depth 3
   278 ;; ---------------------------------------------------------------------------------
   279                           
   280 ;; Call Graph Graphs:
   281                           
   282 ;; _main (ROOT)
   283 ;;   _lcd_init
   284 ;;     _cmd
   285 ;;       _lcd_delay
   286 ;;   _len
   287 ;;     _cmd
   288 ;;       _lcd_delay
   289 ;;     ___lwdiv
   290 ;;     _dat
   291 ;;       _lcd_delay
   292 ;;     ___lwmod
   293 ;;     _delay
   294 ;;   _xuong
   295 ;;     _cmd
   296 ;;       _lcd_delay
   297 ;;     ___lwdiv
   298 ;;     _dat
   299 ;;       _lcd_delay
   300 ;;     ___lwmod
   301 ;;     _delay
   302 ;;
   303                           
   304 ;; Address spaces:
   305                           
   306 ;;Name               Size   Autos  Total    Cost      Usage
   307 ;;BITCOMMON            E      0       0       0        0.0%
   308 ;;EEDATA             100      0       0       0        0.0%
   309 ;;NULL                 0      0       0       0        0.0%
   310 ;;CODE                 0      0       0       0        0.0%
   311 ;;COMMON               E      8       C       1       85.7%
   312 ;;BITSFR0              0      0       0       1        0.0%
   313 ;;SFR0                 0      0       0       1        0.0%
   314 ;;BITSFR1              0      0       0       2        0.0%
   315 ;;SFR1                 0      0       0       2        0.0%
   316 ;;STACK                0      0       3       2        0.0%
   317 ;;ABS                  0      0       C       3        0.0%
   318 ;;BITBANK0            50      0       0       4        0.0%
   319 ;;BITSFR3              0      0       0       4        0.0%
   320 ;;SFR3                 0      0       0       4        0.0%
   321 ;;BANK0               50      0       0       5        0.0%
   322 ;;BITSFR2              0      0       0       5        0.0%
   323 ;;SFR2                 0      0       0       5        0.0%
   324 ;;BITBANK1            50      0       0       6        0.0%
   325 ;;BANK1               50      0       0       7        0.0%
   326 ;;BITBANK3            60      0       0       8        0.0%
   327 ;;BANK3               60      0       0       9        0.0%
   328 ;;BITBANK2            60      0       0      10        0.0%
   329 ;;BANK2               60      0       0      11        0.0%
   330 ;;DATA                 0      0       F      12        0.0%
   331                           
   332                           	global	_main
   333                           psect	maintext,global,class=CODE,delta=2
   334                           global __pmaintext
   335  0623                     __pmaintext:
   336                           
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 42 in file "newmain.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  i               2    0        unsigned int 
   344 ;; Return value:  Size  Location     Type
   345 ;;		None               void
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 17F/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called:    3
   359 ;; This function calls:
   360 ;;		_lcd_init
   361 ;;		_len
   362 ;;		_xuong
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           psect	maintext
   368                           	file	"newmain.c"
   369                           	line	42
   370                           	global	__size_of_main
   371  0021                     	__size_of_main	equ	__end_of_main-_main
   372                           	
   373  0623                     _main:	
   374                           	opt	stack 5
   375                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   376                           	line	44
   377                           	
   378  0623                     l2012:	
   379                           ;newmain.c: 43: unsigned int i;
   380                           ;newmain.c: 44: TRISB = TRISC0 = TRISC1 = 0;
   381  0623  1683               	bsf	status, 5	;RP0=1, select bank1
   382  0624  1303               	bcf	status, 6	;RP1=0, select bank1
   383  0625  1087               	bcf	(1081/8)^080h,(1081)&7
   384  0626  1007               	bcf	(1080/8)^080h,(1080)&7
   385  0627  3000               	movlw	0
   386  0628  1807               	btfsc	(1080/8)^080h,(1080)&7
   387  0629  3001               	movlw	1
   388  062A  0086               	movwf	(134)^080h	;volatile
   389                           	line	45
   390                           ;newmain.c: 45: OPTION_REG=0X07;
   391  062B  3007               	movlw	(07h)
   392  062C  0081               	movwf	(129)^080h	;volatile
   393                           	line	46
   394                           ;newmain.c: 46: INTCON = 0X0E;
   395  062D  300E               	movlw	(0Eh)
   396  062E  008B               	movwf	(11)	;volatile
   397                           	line	47
   398                           	
   399  062F                     l2014:	
   400                           ;newmain.c: 47: lcd_init();
   401  062F  120A  118A  2604   	fcall	_lcd_init
              120A  118A         
   402  0634  2E35               	goto	l2016
   403                           	line	50
   404                           ;newmain.c: 50: while (1) {
   405                           	
   406  0635                     l732:	
   407                           	line	51
   408                           	
   409  0635                     l2016:	
   410                           ;newmain.c: 51: len();
   411  0635  120A  118A  27A7   	fcall	_len
              120A  118A         
   412                           	line	52
   413                           	
   414  063A                     l2018:	
   415                           ;newmain.c: 52: xuong();
   416  063A  120A  118A  2752   	fcall	_xuong
              120A  118A         
   417  063F  2E35               	goto	l2016
   418                           	line	54
   419                           	
   420  0640                     l733:	
   421                           	line	50
   422  0640  2E35               	goto	l2016
   423                           	
   424  0641                     l734:	
   425                           	line	56
   426                           	
   427  0641                     l735:	
   428                           	global	start
   429  0641  120A  118A  2800   	ljmp	start
   430                           	opt stack 0
   431                           GLOBAL	__end_of_main
   432  0644                     	__end_of_main:
   433 ;; =============== function _main ends ============
   434                           
   435                           	signat	_main,88
   436                           	global	_xuong
   437                           psect	text115,local,class=CODE,delta=2
   438                           global __ptext115
   439  0752                     __ptext115:
   440                           
   441 ;; *************** function _xuong *****************
   442 ;; Defined at:
   443 ;;		line 31 in file "newmain.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    2
   464 ;; This function calls:
   465 ;;		_cmd
   466 ;;		___lwdiv
   467 ;;		_dat
   468 ;;		___lwmod
   469 ;;		_delay
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           psect	text115
   475                           	file	"newmain.c"
   476                           	line	31
   477                           	global	__size_of_xuong
   478  0055                     	__size_of_xuong	equ	__end_of_xuong-_xuong
   479                           	
   480  0752                     _xuong:	
   481                           	opt	stack 5
   482                           ; Regs used in _xuong: [wreg+status,2+status,0+pclath+cstack]
   483                           	line	32
   484                           	
   485  0752                     l2000:	
   486                           ;newmain.c: 32: for (i = 99; i > 0; i--) {
   487  0752  3063               	movlw	low(063h)
   488  0753  00FA               	movwf	(_i)
   489  0754  3000               	movlw	high(063h)
   490  0755  00FB               	movwf	((_i))+1
   491                           	
   492  0756                     l2002:	
   493  0756  087B               	movf	((_i+1)),w
   494  0757  047A               	iorwf	((_i)),w
   495  0758  1D03               	skipz
   496  0759  2F5B               	goto	u2231
   497  075A  2F5C               	goto	u2230
   498  075B                     u2231:
   499  075B  2F5E               	goto	l2006
   500  075C                     u2230:
   501  075C  2FA6               	goto	l729
   502                           	
   503  075D                     l2004:	
   504  075D  2FA6               	goto	l729
   505                           	
   506  075E                     l727:	
   507                           	line	33
   508                           	
   509  075E                     l2006:	
   510                           ;newmain.c: 33: cmd(0xc8);
   511  075E  30C8               	movlw	(0C8h)
   512  075F  120A  118A  2644   	fcall	_cmd
              120A  118A         
   513                           	line	35
   514                           ;newmain.c: 35: dat((i / 10) + 48);
   515  0764  300A               	movlw	low(0Ah)
   516  0765  00F0               	movwf	(?___lwdiv)
   517  0766  3000               	movlw	high(0Ah)
   518  0767  00F1               	movwf	((?___lwdiv))+1
   519  0768  087B               	movf	(_i+1),w
   520  0769  01F3               	clrf	1+(?___lwdiv)+02h
   521  076A  07F3               	addwf	1+(?___lwdiv)+02h
   522  076B  087A               	movf	(_i),w
   523  076C  01F2               	clrf	0+(?___lwdiv)+02h
   524  076D  07F2               	addwf	0+(?___lwdiv)+02h
   525                           
   526  076E  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   527  0773  0870               	movf	(0+(?___lwdiv)),w
   528  0774  3E30               	addlw	030h
   529  0775  120A  118A  2682   	fcall	_dat
              120A  118A         
   530                           	line	36
   531                           ;newmain.c: 36: dat((i % 10) + 48);
   532  077A  300A               	movlw	low(0Ah)
   533  077B  00F0               	movwf	(?___lwmod)
   534  077C  3000               	movlw	high(0Ah)
   535  077D  00F1               	movwf	((?___lwmod))+1
   536  077E  087B               	movf	(_i+1),w
   537  077F  01F3               	clrf	1+(?___lwmod)+02h
   538  0780  07F3               	addwf	1+(?___lwmod)+02h
   539  0781  087A               	movf	(_i),w
   540  0782  01F2               	clrf	0+(?___lwmod)+02h
   541  0783  07F2               	addwf	0+(?___lwmod)+02h
   542                           
   543  0784  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   544  0789  0870               	movf	(0+(?___lwmod)),w
   545  078A  3E30               	addlw	030h
   546  078B  120A  118A  2682   	fcall	_dat
              120A  118A         
   547                           	line	37
   548                           ;newmain.c: 37: delay(42);
   549  0790  302A               	movlw	low(02Ah)
   550  0791  00F0               	movwf	(?_delay)
   551  0792  3000               	movlw	high(02Ah)
   552  0793  00F1               	movwf	((?_delay))+1
   553  0794  120A  118A  25CB   	fcall	_delay
              120A  118A         
   554                           	line	32
   555                           	
   556  0799                     l2008:	
   557  0799  3001               	movlw	low(01h)
   558  079A  02FA               	subwf	(_i),f
   559  079B  3000               	movlw	high(01h)
   560  079C  1C03               	skipc
   561  079D  03FB               	decf	(_i+1),f
   562  079E  02FB               	subwf	(_i+1),f
   563                           	
   564  079F                     l2010:	
   565  079F  087B               	movf	((_i+1)),w
   566  07A0  047A               	iorwf	((_i)),w
   567  07A1  1D03               	skipz
   568  07A2  2FA4               	goto	u2241
   569  07A3  2FA5               	goto	u2240
   570  07A4                     u2241:
   571  07A4  2F5E               	goto	l2006
   572  07A5                     u2240:
   573  07A5  2FA6               	goto	l729
   574                           	
   575  07A6                     l728:	
   576                           	line	41
   577                           	
   578  07A6                     l729:	
   579  07A6  0008               	return
   580                           	opt stack 0
   581                           GLOBAL	__end_of_xuong
   582  07A7                     	__end_of_xuong:
   583 ;; =============== function _xuong ends ============
   584                           
   585                           	signat	_xuong,88
   586                           	global	_len
   587                           psect	text116,local,class=CODE,delta=2
   588                           global __ptext116
   589  07A7                     __ptext116:
   590                           
   591 ;; *************** function _len *****************
   592 ;; Defined at:
   593 ;;		line 21 in file "newmain.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		_cmd
   616 ;;		___lwdiv
   617 ;;		_dat
   618 ;;		___lwmod
   619 ;;		_delay
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           psect	text116
   625                           	file	"newmain.c"
   626                           	line	21
   627                           	global	__size_of_len
   628  0059                     	__size_of_len	equ	__end_of_len-_len
   629                           	
   630  07A7                     _len:	
   631                           	opt	stack 5
   632                           ; Regs used in _len: [wreg+status,2+status,0+pclath+cstack]
   633                           	line	22
   634                           	
   635  07A7                     l1988:	
   636                           ;newmain.c: 22: for (i = 0; i < 100; i++) {
   637  07A7  01FA               	clrf	(_i)
   638  07A8  01FB               	clrf	(_i+1)
   639                           	
   640  07A9                     l1990:	
   641  07A9  3000               	movlw	high(064h)
   642  07AA  027B               	subwf	(_i+1),w
   643  07AB  3064               	movlw	low(064h)
   644  07AC  1903               	skipnz
   645  07AD  027A               	subwf	(_i),w
   646  07AE  1C03               	skipc
   647  07AF  2FB1               	goto	u2211
   648  07B0  2FB2               	goto	u2210
   649  07B1                     u2211:
   650  07B1  2FB4               	goto	l1994
   651  07B2                     u2210:
   652  07B2  2FFF               	goto	l724
   653                           	
   654  07B3                     l1992:	
   655  07B3  2FFF               	goto	l724
   656                           	
   657  07B4                     l722:	
   658                           	line	24
   659                           	
   660  07B4                     l1994:	
   661                           ;newmain.c: 24: cmd(0xc8);
   662  07B4  30C8               	movlw	(0C8h)
   663  07B5  120A  118A  2644   	fcall	_cmd
              120A  118A         
   664                           	line	25
   665                           ;newmain.c: 25: dat((i / 10) + 48);
   666  07BA  300A               	movlw	low(0Ah)
   667  07BB  00F0               	movwf	(?___lwdiv)
   668  07BC  3000               	movlw	high(0Ah)
   669  07BD  00F1               	movwf	((?___lwdiv))+1
   670  07BE  087B               	movf	(_i+1),w
   671  07BF  01F3               	clrf	1+(?___lwdiv)+02h
   672  07C0  07F3               	addwf	1+(?___lwdiv)+02h
   673  07C1  087A               	movf	(_i),w
   674  07C2  01F2               	clrf	0+(?___lwdiv)+02h
   675  07C3  07F2               	addwf	0+(?___lwdiv)+02h
   676                           
   677  07C4  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   678  07C9  0870               	movf	(0+(?___lwdiv)),w
   679  07CA  3E30               	addlw	030h
   680  07CB  120A  118A  2682   	fcall	_dat
              120A  118A         
   681                           	line	26
   682                           ;newmain.c: 26: dat((i % 10) + 48);
   683  07D0  300A               	movlw	low(0Ah)
   684  07D1  00F0               	movwf	(?___lwmod)
   685  07D2  3000               	movlw	high(0Ah)
   686  07D3  00F1               	movwf	((?___lwmod))+1
   687  07D4  087B               	movf	(_i+1),w
   688  07D5  01F3               	clrf	1+(?___lwmod)+02h
   689  07D6  07F3               	addwf	1+(?___lwmod)+02h
   690  07D7  087A               	movf	(_i),w
   691  07D8  01F2               	clrf	0+(?___lwmod)+02h
   692  07D9  07F2               	addwf	0+(?___lwmod)+02h
   693                           
   694  07DA  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   695  07DF  0870               	movf	(0+(?___lwmod)),w
   696  07E0  3E30               	addlw	030h
   697  07E1  120A  118A  2682   	fcall	_dat
              120A  118A         
   698                           	line	27
   699                           ;newmain.c: 27: delay(8);
   700  07E6  3008               	movlw	low(08h)
   701  07E7  00F0               	movwf	(?_delay)
   702  07E8  3000               	movlw	high(08h)
   703  07E9  00F1               	movwf	((?_delay))+1
   704  07EA  120A  118A  25CB   	fcall	_delay
              120A  118A         
   705                           	line	22
   706                           	
   707  07EF                     l1996:	
   708  07EF  3001               	movlw	low(01h)
   709  07F0  07FA               	addwf	(_i),f
   710  07F1  1803               	skipnc
   711  07F2  0AFB               	incf	(_i+1),f
   712  07F3  3000               	movlw	high(01h)
   713  07F4  07FB               	addwf	(_i+1),f
   714                           	
   715  07F5                     l1998:	
   716  07F5  3000               	movlw	high(064h)
   717  07F6  027B               	subwf	(_i+1),w
   718  07F7  3064               	movlw	low(064h)
   719  07F8  1903               	skipnz
   720  07F9  027A               	subwf	(_i),w
   721  07FA  1C03               	skipc
   722  07FB  2FFD               	goto	u2221
   723  07FC  2FFE               	goto	u2220
   724  07FD                     u2221:
   725  07FD  2FB4               	goto	l1994
   726  07FE                     u2220:
   727  07FE  2FFF               	goto	l724
   728                           	
   729  07FF                     l723:	
   730                           	line	29
   731                           	
   732  07FF                     l724:	
   733  07FF  0008               	return
   734                           	opt stack 0
   735                           GLOBAL	__end_of_len
   736  0800                     	__end_of_len:
   737 ;; =============== function _len ends ============
   738                           
   739                           	signat	_len,88
   740                           	global	_lcd_init
   741                           psect	text117,local,class=CODE,delta=2
   742                           global __ptext117
   743  0604                     __ptext117:
   744                           
   745 ;; *************** function _lcd_init *****************
   746 ;; Defined at:
   747 ;;		line 38 in file "lcd4.h"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_cmd
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           psect	text117
   775                           	file	"lcd4.h"
   776                           	line	38
   777                           	global	__size_of_lcd_init
   778  001F                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   779                           	
   780  0604                     _lcd_init:	
   781                           	opt	stack 5
   782                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   783                           	line	40
   784                           	
   785  0604                     l1986:	
   786                           ;lcd4.h: 40: cmd(0x02);
   787  0604  3002               	movlw	(02h)
   788  0605  120A  118A  2644   	fcall	_cmd
              120A  118A         
   789                           	line	42
   790                           ;lcd4.h: 42: cmd(0x28);
   791  060A  3028               	movlw	(028h)
   792  060B  120A  118A  2644   	fcall	_cmd
              120A  118A         
   793                           	line	44
   794                           ;lcd4.h: 44: cmd(0x0e);
   795  0610  300E               	movlw	(0Eh)
   796  0611  120A  118A  2644   	fcall	_cmd
              120A  118A         
   797                           	line	46
   798                           ;lcd4.h: 46: cmd(0x06);
   799  0616  3006               	movlw	(06h)
   800  0617  120A  118A  2644   	fcall	_cmd
              120A  118A         
   801                           	line	48
   802                           ;lcd4.h: 48: cmd(0x80);
   803  061C  3080               	movlw	(080h)
   804  061D  120A  118A  2644   	fcall	_cmd
              120A  118A         
   805                           	line	50
   806                           	
   807  0622                     l693:	
   808  0622  0008               	return
   809                           	opt stack 0
   810                           GLOBAL	__end_of_lcd_init
   811  0623                     	__end_of_lcd_init:
   812 ;; =============== function _lcd_init ends ============
   813                           
   814                           	signat	_lcd_init,88
   815                           	global	_dat
   816                           psect	text118,local,class=CODE,delta=2
   817                           global __ptext118
   818  0682                     __ptext118:
   819                           
   820 ;; *************** function _dat *****************
   821 ;; Defined at:
   822 ;;		line 83 in file "lcd4.h"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  b               1    wreg     unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  b               1    4[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;		None               void
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0
   839 ;;      Totals:         3       0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_lcd_delay
   845 ;; This function is called by:
   846 ;;		_len
   847 ;;		_xuong
   848 ;;		_show
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           psect	text118
   852                           	file	"lcd4.h"
   853                           	line	83
   854                           	global	__size_of_dat
   855  003E                     	__size_of_dat	equ	__end_of_dat-_dat
   856                           	
   857  0682                     _dat:	
   858                           	opt	stack 5
   859                           ; Regs used in _dat: [wreg+status,2+status,0+pclath+cstack]
   860                           ;dat@b stored from wreg
   861                           	line	85
   862  0682  00F4               	movwf	(dat@b)
   863                           	
   864  0683                     l1966:	
   865                           ;lcd4.h: 85: RC0 = 1;
   866  0683  1283               	bcf	status, 5	;RP0=0, select bank0
   867  0684  1303               	bcf	status, 6	;RP1=0, select bank0
   868  0685  1407               	bsf	(56/8),(56)&7
   869                           	line	87
   870                           	
   871  0686                     l1968:	
   872                           ;lcd4.h: 87: PORTB &= 0x0F;
   873  0686  300F               	movlw	(0Fh)
   874  0687  00F2               	movwf	(??_dat+0)+0
   875  0688  0872               	movf	(??_dat+0)+0,w
   876  0689  0586               	andwf	(6),f	;volatile
   877                           	line	89
   878                           ;lcd4.h: 89: PORTB |= (b & 0xf0);
   879  068A  0874               	movf	(dat@b),w
   880  068B  39F0               	andlw	0F0h
   881  068C  00F2               	movwf	(??_dat+0)+0
   882  068D  0872               	movf	(??_dat+0)+0,w
   883  068E  0486               	iorwf	(6),f	;volatile
   884                           	line	91
   885                           	
   886  068F                     l1970:	
   887                           ;lcd4.h: 91: RC1 = 1;
   888  068F  1487               	bsf	(57/8),(57)&7
   889                           	line	93
   890                           	
   891  0690                     l1972:	
   892                           ;lcd4.h: 93: lcd_delay();
   893  0690  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
   894                           	line	95
   895                           	
   896  0695                     l1974:	
   897                           ;lcd4.h: 95: RC1 = 0;
   898  0695  1283               	bcf	status, 5	;RP0=0, select bank0
   899  0696  1303               	bcf	status, 6	;RP1=0, select bank0
   900  0697  1087               	bcf	(57/8),(57)&7
   901                           	line	97
   902                           	
   903  0698                     l1976:	
   904                           ;lcd4.h: 97: lcd_delay();
   905  0698  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
   906                           	line	99
   907                           ;lcd4.h: 99: PORTB &= 0x0f;
   908  069D  300F               	movlw	(0Fh)
   909  069E  00F2               	movwf	(??_dat+0)+0
   910  069F  0872               	movf	(??_dat+0)+0,w
   911  06A0  1283               	bcf	status, 5	;RP0=0, select bank0
   912  06A1  1303               	bcf	status, 6	;RP1=0, select bank0
   913  06A2  0586               	andwf	(6),f	;volatile
   914                           	line	101
   915                           ;lcd4.h: 101: PORTB |= (b << 4 & 0xf0);
   916  06A3  0874               	movf	(dat@b),w
   917  06A4  00F2               	movwf	(??_dat+0)+0
   918  06A5  3003               	movlw	(04h)-1
   919  06A6                     u2205:
   920  06A6  1003               	clrc
   921  06A7  0DF2               	rlf	(??_dat+0)+0,f
   922  06A8  3EFF               	addlw	-1
   923  06A9  1D03               	skipz
   924  06AA  2EA6               	goto	u2205
   925  06AB  1003               	clrc
   926  06AC  0D72               	rlf	(??_dat+0)+0,w
   927  06AD  39F0               	andlw	0F0h
   928  06AE  00F3               	movwf	(??_dat+1)+0
   929  06AF  0873               	movf	(??_dat+1)+0,w
   930  06B0  0486               	iorwf	(6),f	;volatile
   931                           	line	103
   932                           	
   933  06B1                     l1978:	
   934                           ;lcd4.h: 103: RC1 = 1;
   935  06B1  1487               	bsf	(57/8),(57)&7
   936                           	line	105
   937                           	
   938  06B2                     l1980:	
   939                           ;lcd4.h: 105: lcd_delay();
   940  06B2  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
   941                           	line	107
   942                           	
   943  06B7                     l1982:	
   944                           ;lcd4.h: 107: RC1 = 0;
   945  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
   946  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
   947  06B9  1087               	bcf	(57/8),(57)&7
   948                           	line	109
   949                           	
   950  06BA                     l1984:	
   951                           ;lcd4.h: 109: lcd_delay();
   952  06BA  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
   953                           	line	111
   954                           	
   955  06BF                     l699:	
   956  06BF  0008               	return
   957                           	opt stack 0
   958                           GLOBAL	__end_of_dat
   959  06C0                     	__end_of_dat:
   960 ;; =============== function _dat ends ============
   961                           
   962                           	signat	_dat,4216
   963                           	global	_cmd
   964                           psect	text119,local,class=CODE,delta=2
   965                           global __ptext119
   966  0644                     __ptext119:
   967                           
   968 ;; *************** function _cmd *****************
   969 ;; Defined at:
   970 ;;		line 53 in file "lcd4.h"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  a               1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  a               1    4[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;		None               void
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0
   986 ;;      Temps:          2       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    1
   991 ;; This function calls:
   992 ;;		_lcd_delay
   993 ;; This function is called by:
   994 ;;		_lcd_init
   995 ;;		_len
   996 ;;		_xuong
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           psect	text119
  1000                           	file	"lcd4.h"
  1001                           	line	53
  1002                           	global	__size_of_cmd
  1003  003E                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  1004                           	
  1005  0644                     _cmd:	
  1006                           	opt	stack 5
  1007                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
  1008                           ;cmd@a stored from wreg
  1009                           	line	55
  1010  0644  00F4               	movwf	(cmd@a)
  1011                           	
  1012  0645                     l1946:	
  1013                           ;lcd4.h: 55: RC0 = 0;
  1014  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  1015  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  1016  0647  1007               	bcf	(56/8),(56)&7
  1017                           	line	57
  1018                           	
  1019  0648                     l1948:	
  1020                           ;lcd4.h: 57: PORTB &= 0x0F;
  1021  0648  300F               	movlw	(0Fh)
  1022  0649  00F2               	movwf	(??_cmd+0)+0
  1023  064A  0872               	movf	(??_cmd+0)+0,w
  1024  064B  0586               	andwf	(6),f	;volatile
  1025                           	line	59
  1026                           ;lcd4.h: 59: PORTB |= (a & 0xf0);
  1027  064C  0874               	movf	(cmd@a),w
  1028  064D  39F0               	andlw	0F0h
  1029  064E  00F2               	movwf	(??_cmd+0)+0
  1030  064F  0872               	movf	(??_cmd+0)+0,w
  1031  0650  0486               	iorwf	(6),f	;volatile
  1032                           	line	61
  1033                           	
  1034  0651                     l1950:	
  1035                           ;lcd4.h: 61: RC1 = 1;
  1036  0651  1487               	bsf	(57/8),(57)&7
  1037                           	line	63
  1038                           	
  1039  0652                     l1952:	
  1040                           ;lcd4.h: 63: lcd_delay();
  1041  0652  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
  1042                           	line	65
  1043                           	
  1044  0657                     l1954:	
  1045                           ;lcd4.h: 65: RC1 = 0;
  1046  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  1047  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  1048  0659  1087               	bcf	(57/8),(57)&7
  1049                           	line	66
  1050                           	
  1051  065A                     l1956:	
  1052                           ;lcd4.h: 66: lcd_delay();
  1053  065A  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
  1054                           	line	68
  1055                           ;lcd4.h: 68: PORTB &= 0x0f;
  1056  065F  300F               	movlw	(0Fh)
  1057  0660  00F2               	movwf	(??_cmd+0)+0
  1058  0661  0872               	movf	(??_cmd+0)+0,w
  1059  0662  1283               	bcf	status, 5	;RP0=0, select bank0
  1060  0663  1303               	bcf	status, 6	;RP1=0, select bank0
  1061  0664  0586               	andwf	(6),f	;volatile
  1062                           	line	70
  1063                           ;lcd4.h: 70: PORTB |= (a << 4 & 0xf0);
  1064  0665  0874               	movf	(cmd@a),w
  1065  0666  00F2               	movwf	(??_cmd+0)+0
  1066  0667  3003               	movlw	(04h)-1
  1067  0668                     u2195:
  1068  0668  1003               	clrc
  1069  0669  0DF2               	rlf	(??_cmd+0)+0,f
  1070  066A  3EFF               	addlw	-1
  1071  066B  1D03               	skipz
  1072  066C  2E68               	goto	u2195
  1073  066D  1003               	clrc
  1074  066E  0D72               	rlf	(??_cmd+0)+0,w
  1075  066F  39F0               	andlw	0F0h
  1076  0670  00F3               	movwf	(??_cmd+1)+0
  1077  0671  0873               	movf	(??_cmd+1)+0,w
  1078  0672  0486               	iorwf	(6),f	;volatile
  1079                           	line	72
  1080                           	
  1081  0673                     l1958:	
  1082                           ;lcd4.h: 72: RC1 = 1;
  1083  0673  1487               	bsf	(57/8),(57)&7
  1084                           	line	74
  1085                           	
  1086  0674                     l1960:	
  1087                           ;lcd4.h: 74: lcd_delay();
  1088  0674  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
  1089                           	line	76
  1090                           	
  1091  0679                     l1962:	
  1092                           ;lcd4.h: 76: RC1 = 0;
  1093  0679  1283               	bcf	status, 5	;RP0=0, select bank0
  1094  067A  1303               	bcf	status, 6	;RP1=0, select bank0
  1095  067B  1087               	bcf	(57/8),(57)&7
  1096                           	line	78
  1097                           	
  1098  067C                     l1964:	
  1099                           ;lcd4.h: 78: lcd_delay();
  1100  067C  120A  118A  25E6   	fcall	_lcd_delay
              120A  118A         
  1101                           	line	80
  1102                           	
  1103  0681                     l696:	
  1104  0681  0008               	return
  1105                           	opt stack 0
  1106                           GLOBAL	__end_of_cmd
  1107  0682                     	__end_of_cmd:
  1108 ;; =============== function _cmd ends ============
  1109                           
  1110                           	signat	_cmd,4216
  1111                           	global	___lwmod
  1112                           psect	text120,local,class=CODE,delta=2
  1113                           global __ptext120
  1114  06C0                     __ptext120:
  1115                           
  1116 ;; *************** function ___lwmod *****************
  1117 ;; Defined at:
  1118 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwmod.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  divisor         2    0[COMMON] unsigned int 
  1121 ;;  dividend        2    2[COMMON] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  counter         1    5[COMMON] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2    0[COMMON] unsigned int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         4       0       0       0       0
  1134 ;;      Locals:         1       0       0       0       0
  1135 ;;      Temps:          1       0       0       0       0
  1136 ;;      Totals:         6       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_len
  1143 ;;		_xuong
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           psect	text120
  1147                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwmod.c"
  1148                           	line	5
  1149                           	global	__size_of___lwmod
  1150  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1151                           	
  1152  06C0                     ___lwmod:	
  1153                           	opt	stack 6
  1154                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1155                           	line	8
  1156                           	
  1157  06C0                     l1216:	
  1158  06C0  0871               	movf	(___lwmod@divisor+1),w
  1159  06C1  0470               	iorwf	(___lwmod@divisor),w
  1160  06C2  1903               	skipnz
  1161  06C3  2EC5               	goto	u191
  1162  06C4  2EC6               	goto	u190
  1163  06C5                     u191:
  1164  06C5  2EFC               	goto	l1234
  1165  06C6                     u190:
  1166                           	line	9
  1167                           	
  1168  06C6                     l1218:	
  1169  06C6  01F5               	clrf	(___lwmod@counter)
  1170  06C7  1403               	bsf	status,0
  1171  06C8  0DF5               	rlf	(___lwmod@counter),f
  1172                           	line	10
  1173  06C9  2ED6               	goto	l1224
  1174                           	
  1175  06CA                     l762:	
  1176                           	line	11
  1177                           	
  1178  06CA                     l1220:	
  1179  06CA  3001               	movlw	01h
  1180                           	
  1181  06CB                     u205:
  1182  06CB  1003               	clrc
  1183  06CC  0DF0               	rlf	(___lwmod@divisor),f
  1184  06CD  0DF1               	rlf	(___lwmod@divisor+1),f
  1185  06CE  3EFF               	addlw	-1
  1186  06CF  1D03               	skipz
  1187  06D0  2ECB               	goto	u205
  1188                           	line	12
  1189                           	
  1190  06D1                     l1222:	
  1191  06D1  3001               	movlw	(01h)
  1192  06D2  00F4               	movwf	(??___lwmod+0)+0
  1193  06D3  0874               	movf	(??___lwmod+0)+0,w
  1194  06D4  07F5               	addwf	(___lwmod@counter),f
  1195  06D5  2ED6               	goto	l1224
  1196                           	line	13
  1197                           	
  1198  06D6                     l761:	
  1199                           	line	10
  1200                           	
  1201  06D6                     l1224:	
  1202  06D6  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  1203  06D7  2ED9               	goto	u211
  1204  06D8  2EDA               	goto	u210
  1205  06D9                     u211:
  1206  06D9  2ECA               	goto	l1220
  1207  06DA                     u210:
  1208  06DA  2EDC               	goto	l1226
  1209                           	
  1210  06DB                     l763:	
  1211  06DB  2EDC               	goto	l1226
  1212                           	line	14
  1213                           	
  1214  06DC                     l764:	
  1215                           	line	15
  1216                           	
  1217  06DC                     l1226:	
  1218  06DC  0871               	movf	(___lwmod@divisor+1),w
  1219  06DD  0273               	subwf	(___lwmod@dividend+1),w
  1220  06DE  1D03               	skipz
  1221  06DF  2EE2               	goto	u225
  1222  06E0  0870               	movf	(___lwmod@divisor),w
  1223  06E1  0272               	subwf	(___lwmod@dividend),w
  1224  06E2                     u225:
  1225  06E2  1C03               	skipc
  1226  06E3  2EE5               	goto	u221
  1227  06E4  2EE6               	goto	u220
  1228  06E5                     u221:
  1229  06E5  2EED               	goto	l1230
  1230  06E6                     u220:
  1231                           	line	16
  1232                           	
  1233  06E6                     l1228:	
  1234  06E6  0870               	movf	(___lwmod@divisor),w
  1235  06E7  02F2               	subwf	(___lwmod@dividend),f
  1236  06E8  0871               	movf	(___lwmod@divisor+1),w
  1237  06E9  1C03               	skipc
  1238  06EA  03F3               	decf	(___lwmod@dividend+1),f
  1239  06EB  02F3               	subwf	(___lwmod@dividend+1),f
  1240  06EC  2EED               	goto	l1230
  1241                           	
  1242  06ED                     l765:	
  1243                           	line	17
  1244                           	
  1245  06ED                     l1230:	
  1246  06ED  3001               	movlw	01h
  1247                           	
  1248  06EE                     u235:
  1249  06EE  1003               	clrc
  1250  06EF  0CF1               	rrf	(___lwmod@divisor+1),f
  1251  06F0  0CF0               	rrf	(___lwmod@divisor),f
  1252  06F1  3EFF               	addlw	-1
  1253  06F2  1D03               	skipz
  1254  06F3  2EEE               	goto	u235
  1255                           	line	18
  1256                           	
  1257  06F4                     l1232:	
  1258  06F4  3001               	movlw	low(01h)
  1259  06F5  02F5               	subwf	(___lwmod@counter),f
  1260  06F6  1D03               	btfss	status,2
  1261  06F7  2EF9               	goto	u241
  1262  06F8  2EFA               	goto	u240
  1263  06F9                     u241:
  1264  06F9  2EDC               	goto	l1226
  1265  06FA                     u240:
  1266  06FA  2EFC               	goto	l1234
  1267                           	
  1268  06FB                     l766:	
  1269  06FB  2EFC               	goto	l1234
  1270                           	line	19
  1271                           	
  1272  06FC                     l760:	
  1273                           	line	20
  1274                           	
  1275  06FC                     l1234:	
  1276  06FC  0873               	movf	(___lwmod@dividend+1),w
  1277  06FD  01F1               	clrf	(?___lwmod+1)
  1278  06FE  07F1               	addwf	(?___lwmod+1)
  1279  06FF  0872               	movf	(___lwmod@dividend),w
  1280  0700  01F0               	clrf	(?___lwmod)
  1281  0701  07F0               	addwf	(?___lwmod)
  1282                           
  1283  0702  2F03               	goto	l767
  1284                           	
  1285  0703                     l1236:	
  1286                           	line	21
  1287                           	
  1288  0703                     l767:	
  1289  0703  0008               	return
  1290                           	opt stack 0
  1291                           GLOBAL	__end_of___lwmod
  1292  0704                     	__end_of___lwmod:
  1293 ;; =============== function ___lwmod ends ============
  1294                           
  1295                           	signat	___lwmod,8314
  1296                           	global	___lwdiv
  1297                           psect	text121,local,class=CODE,delta=2
  1298                           global __ptext121
  1299  0704                     __ptext121:
  1300                           
  1301 ;; *************** function ___lwdiv *****************
  1302 ;; Defined at:
  1303 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwdiv.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  divisor         2    0[COMMON] unsigned int 
  1306 ;;  dividend        2    2[COMMON] unsigned int 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  quotient        2    5[COMMON] unsigned int 
  1309 ;;  counter         1    7[COMMON] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  2    0[COMMON] unsigned int 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         4       0       0       0       0
  1320 ;;      Locals:         3       0       0       0       0
  1321 ;;      Temps:          1       0       0       0       0
  1322 ;;      Totals:         8       0       0       0       0
  1323 ;;Total ram usage:        8 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_len
  1329 ;;		_xuong
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           psect	text121
  1333                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\sources\lwdiv.c"
  1334                           	line	5
  1335                           	global	__size_of___lwdiv
  1336  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1337                           	
  1338  0704                     ___lwdiv:	
  1339                           	opt	stack 6
  1340                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1341                           	line	9
  1342                           	
  1343  0704                     l1190:	
  1344  0704  01F5               	clrf	(___lwdiv@quotient)
  1345  0705  01F6               	clrf	(___lwdiv@quotient+1)
  1346                           	line	10
  1347                           	
  1348  0706                     l1192:	
  1349  0706  0871               	movf	(___lwdiv@divisor+1),w
  1350  0707  0470               	iorwf	(___lwdiv@divisor),w
  1351  0708  1903               	skipnz
  1352  0709  2F0B               	goto	u121
  1353  070A  2F0C               	goto	u120
  1354  070B                     u121:
  1355  070B  2F4A               	goto	l1212
  1356  070C                     u120:
  1357                           	line	11
  1358                           	
  1359  070C                     l1194:	
  1360  070C  01F7               	clrf	(___lwdiv@counter)
  1361  070D  1403               	bsf	status,0
  1362  070E  0DF7               	rlf	(___lwdiv@counter),f
  1363                           	line	12
  1364  070F  2F1C               	goto	l1200
  1365                           	
  1366  0710                     l752:	
  1367                           	line	13
  1368                           	
  1369  0710                     l1196:	
  1370  0710  3001               	movlw	01h
  1371                           	
  1372  0711                     u135:
  1373  0711  1003               	clrc
  1374  0712  0DF0               	rlf	(___lwdiv@divisor),f
  1375  0713  0DF1               	rlf	(___lwdiv@divisor+1),f
  1376  0714  3EFF               	addlw	-1
  1377  0715  1D03               	skipz
  1378  0716  2F11               	goto	u135
  1379                           	line	14
  1380                           	
  1381  0717                     l1198:	
  1382  0717  3001               	movlw	(01h)
  1383  0718  00F4               	movwf	(??___lwdiv+0)+0
  1384  0719  0874               	movf	(??___lwdiv+0)+0,w
  1385  071A  07F7               	addwf	(___lwdiv@counter),f
  1386  071B  2F1C               	goto	l1200
  1387                           	line	15
  1388                           	
  1389  071C                     l751:	
  1390                           	line	12
  1391                           	
  1392  071C                     l1200:	
  1393  071C  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  1394  071D  2F1F               	goto	u141
  1395  071E  2F20               	goto	u140
  1396  071F                     u141:
  1397  071F  2F10               	goto	l1196
  1398  0720                     u140:
  1399  0720  2F22               	goto	l1202
  1400                           	
  1401  0721                     l753:	
  1402  0721  2F22               	goto	l1202
  1403                           	line	16
  1404                           	
  1405  0722                     l754:	
  1406                           	line	17
  1407                           	
  1408  0722                     l1202:	
  1409  0722  3001               	movlw	01h
  1410                           	
  1411  0723                     u155:
  1412  0723  1003               	clrc
  1413  0724  0DF5               	rlf	(___lwdiv@quotient),f
  1414  0725  0DF6               	rlf	(___lwdiv@quotient+1),f
  1415  0726  3EFF               	addlw	-1
  1416  0727  1D03               	skipz
  1417  0728  2F23               	goto	u155
  1418                           	line	18
  1419  0729  0871               	movf	(___lwdiv@divisor+1),w
  1420  072A  0273               	subwf	(___lwdiv@dividend+1),w
  1421  072B  1D03               	skipz
  1422  072C  2F2F               	goto	u165
  1423  072D  0870               	movf	(___lwdiv@divisor),w
  1424  072E  0272               	subwf	(___lwdiv@dividend),w
  1425  072F                     u165:
  1426  072F  1C03               	skipc
  1427  0730  2F32               	goto	u161
  1428  0731  2F33               	goto	u160
  1429  0732                     u161:
  1430  0732  2F3B               	goto	l1208
  1431  0733                     u160:
  1432                           	line	19
  1433                           	
  1434  0733                     l1204:	
  1435  0733  0870               	movf	(___lwdiv@divisor),w
  1436  0734  02F2               	subwf	(___lwdiv@dividend),f
  1437  0735  0871               	movf	(___lwdiv@divisor+1),w
  1438  0736  1C03               	skipc
  1439  0737  03F3               	decf	(___lwdiv@dividend+1),f
  1440  0738  02F3               	subwf	(___lwdiv@dividend+1),f
  1441                           	line	20
  1442                           	
  1443  0739                     l1206:	
  1444  0739  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1445  073A  2F3B               	goto	l1208
  1446                           	line	21
  1447                           	
  1448  073B                     l755:	
  1449                           	line	22
  1450                           	
  1451  073B                     l1208:	
  1452  073B  3001               	movlw	01h
  1453                           	
  1454  073C                     u175:
  1455  073C  1003               	clrc
  1456  073D  0CF1               	rrf	(___lwdiv@divisor+1),f
  1457  073E  0CF0               	rrf	(___lwdiv@divisor),f
  1458  073F  3EFF               	addlw	-1
  1459  0740  1D03               	skipz
  1460  0741  2F3C               	goto	u175
  1461                           	line	23
  1462                           	
  1463  0742                     l1210:	
  1464  0742  3001               	movlw	low(01h)
  1465  0743  02F7               	subwf	(___lwdiv@counter),f
  1466  0744  1D03               	btfss	status,2
  1467  0745  2F47               	goto	u181
  1468  0746  2F48               	goto	u180
  1469  0747                     u181:
  1470  0747  2F22               	goto	l1202
  1471  0748                     u180:
  1472  0748  2F4A               	goto	l1212
  1473                           	
  1474  0749                     l756:	
  1475  0749  2F4A               	goto	l1212
  1476                           	line	24
  1477                           	
  1478  074A                     l750:	
  1479                           	line	25
  1480                           	
  1481  074A                     l1212:	
  1482  074A  0876               	movf	(___lwdiv@quotient+1),w
  1483  074B  01F1               	clrf	(?___lwdiv+1)
  1484  074C  07F1               	addwf	(?___lwdiv+1)
  1485  074D  0875               	movf	(___lwdiv@quotient),w
  1486  074E  01F0               	clrf	(?___lwdiv)
  1487  074F  07F0               	addwf	(?___lwdiv)
  1488                           
  1489  0750  2F51               	goto	l757
  1490                           	
  1491  0751                     l1214:	
  1492                           	line	26
  1493                           	
  1494  0751                     l757:	
  1495  0751  0008               	return
  1496                           	opt stack 0
  1497                           GLOBAL	__end_of___lwdiv
  1498  0752                     	__end_of___lwdiv:
  1499 ;; =============== function ___lwdiv ends ============
  1500                           
  1501                           	signat	___lwdiv,8314
  1502                           	global	_delay
  1503                           psect	text122,local,class=CODE,delta=2
  1504                           global __ptext122
  1505  05CB                     __ptext122:
  1506                           
  1507 ;; *************** function _delay *****************
  1508 ;; Defined at:
  1509 ;;		line 12 in file "newmain.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  a               2    0[COMMON] unsigned int 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  i               2    2[COMMON] unsigned int 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		wreg, status,2
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         2       0       0       0       0
  1524 ;;      Locals:         2       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0
  1526 ;;      Totals:         4       0       0       0       0
  1527 ;;Total ram usage:        4 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_len
  1533 ;;		_xuong
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           psect	text122
  1537                           	file	"newmain.c"
  1538                           	line	12
  1539                           	global	__size_of_delay
  1540  001B                     	__size_of_delay	equ	__end_of_delay-_delay
  1541                           	
  1542  05CB                     _delay:	
  1543                           	opt	stack 6
  1544                           ; Regs used in _delay: [wreg+status,2]
  1545                           	line	14
  1546                           	
  1547  05CB                     l1168:	
  1548                           ;newmain.c: 13: unsigned int i;
  1549                           ;newmain.c: 14: for (i=0; i<a ;i++){
  1550  05CB  01F2               	clrf	(delay@i)
  1551  05CC  01F3               	clrf	(delay@i+1)
  1552  05CD  2DDA               	goto	l713
  1553                           	
  1554  05CE                     l714:	
  1555                           	line	15
  1556                           ;newmain.c: 15: while(!TMR0IF);
  1557  05CE  2DCF               	goto	l715
  1558                           	
  1559  05CF                     l716:	
  1560                           	
  1561  05CF                     l715:	
  1562  05CF  1D0B               	btfss	(90/8),(90)&7
  1563  05D0  2DD2               	goto	u41
  1564  05D1  2DD3               	goto	u40
  1565  05D2                     u41:
  1566  05D2  2DCF               	goto	l715
  1567  05D3                     u40:
  1568                           	
  1569  05D3                     l717:	
  1570                           	line	16
  1571                           ;newmain.c: 16: TMR0IF=0;
  1572  05D3  110B               	bcf	(90/8),(90)&7
  1573                           	line	14
  1574                           	
  1575  05D4                     l1170:	
  1576  05D4  3001               	movlw	low(01h)
  1577  05D5  07F2               	addwf	(delay@i),f
  1578  05D6  1803               	skipnc
  1579  05D7  0AF3               	incf	(delay@i+1),f
  1580  05D8  3000               	movlw	high(01h)
  1581  05D9  07F3               	addwf	(delay@i+1),f
  1582                           	
  1583  05DA                     l713:	
  1584  05DA  0871               	movf	(delay@a+1),w
  1585  05DB  0273               	subwf	(delay@i+1),w
  1586  05DC  1D03               	skipz
  1587  05DD  2DE0               	goto	u55
  1588  05DE  0870               	movf	(delay@a),w
  1589  05DF  0272               	subwf	(delay@i),w
  1590  05E0                     u55:
  1591  05E0  1C03               	skipc
  1592  05E1  2DE3               	goto	u51
  1593  05E2  2DE4               	goto	u50
  1594  05E3                     u51:
  1595  05E3  2DCF               	goto	l715
  1596  05E4                     u50:
  1597  05E4  2DE5               	goto	l719
  1598                           	
  1599  05E5                     l718:	
  1600                           	line	18
  1601                           	
  1602  05E5                     l719:	
  1603  05E5  0008               	return
  1604                           	opt stack 0
  1605                           GLOBAL	__end_of_delay
  1606  05E6                     	__end_of_delay:
  1607 ;; =============== function _delay ends ============
  1608                           
  1609                           	signat	_delay,4216
  1610                           	global	_lcd_delay
  1611                           psect	text123,local,class=CODE,delta=2
  1612                           global __ptext123
  1613  05E6                     __ptext123:
  1614                           
  1615 ;; *************** function _lcd_delay *****************
  1616 ;; Defined at:
  1617 ;;		line 125 in file "lcd4.h"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  lcd_delay       2    0[COMMON] unsigned int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;		None               void
  1624 ;; Registers used:
  1625 ;;		wreg, status,2
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         2       0       0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_cmd
  1641 ;;		_dat
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           psect	text123
  1645                           	file	"lcd4.h"
  1646                           	line	125
  1647                           	global	__size_of_lcd_delay
  1648  001E                     	__size_of_lcd_delay	equ	__end_of_lcd_delay-_lcd_delay
  1649                           	
  1650  05E6                     _lcd_delay:	
  1651                           	opt	stack 5
  1652                           ; Regs used in _lcd_delay: [wreg+status,2]
  1653                           	line	129
  1654                           	
  1655  05E6                     l1152:	
  1656                           ;lcd4.h: 127: unsigned int lcd_delay;
  1657                           ;lcd4.h: 129: for (lcd_delay = 0; lcd_delay <= 1000; lcd_delay++);
  1658  05E6  01F0               	clrf	(lcd_delay@lcd_delay)
  1659  05E7  01F1               	clrf	(lcd_delay@lcd_delay+1)
  1660                           	
  1661  05E8                     l1154:	
  1662  05E8  3003               	movlw	high(03E9h)
  1663  05E9  0271               	subwf	(lcd_delay@lcd_delay+1),w
  1664  05EA  30E9               	movlw	low(03E9h)
  1665  05EB  1903               	skipnz
  1666  05EC  0270               	subwf	(lcd_delay@lcd_delay),w
  1667  05ED  1C03               	skipc
  1668  05EE  2DF0               	goto	u11
  1669  05EF  2DF1               	goto	u10
  1670  05F0                     u11:
  1671  05F0  2DF3               	goto	l1158
  1672  05F1                     u10:
  1673  05F1  2E03               	goto	l710
  1674                           	
  1675  05F2                     l1156:	
  1676  05F2  2E03               	goto	l710
  1677                           	
  1678  05F3                     l708:	
  1679                           	
  1680  05F3                     l1158:	
  1681  05F3  3001               	movlw	low(01h)
  1682  05F4  07F0               	addwf	(lcd_delay@lcd_delay),f
  1683  05F5  1803               	skipnc
  1684  05F6  0AF1               	incf	(lcd_delay@lcd_delay+1),f
  1685  05F7  3000               	movlw	high(01h)
  1686  05F8  07F1               	addwf	(lcd_delay@lcd_delay+1),f
  1687  05F9  3003               	movlw	high(03E9h)
  1688  05FA  0271               	subwf	(lcd_delay@lcd_delay+1),w
  1689  05FB  30E9               	movlw	low(03E9h)
  1690  05FC  1903               	skipnz
  1691  05FD  0270               	subwf	(lcd_delay@lcd_delay),w
  1692  05FE  1C03               	skipc
  1693  05FF  2E01               	goto	u21
  1694  0600  2E02               	goto	u20
  1695  0601                     u21:
  1696  0601  2DF3               	goto	l1158
  1697  0602                     u20:
  1698  0602  2E03               	goto	l710
  1699                           	
  1700  0603                     l709:	
  1701                           	line	131
  1702                           	
  1703  0603                     l710:	
  1704  0603  0008               	return
  1705                           	opt stack 0
  1706                           GLOBAL	__end_of_lcd_delay
  1707  0604                     	__end_of_lcd_delay:
  1708 ;; =============== function _lcd_delay ends ============
  1709                           
  1710                           	signat	_lcd_delay,88
  1711                           psect	text124,local,class=CODE,delta=2
  1712                           global __ptext124
  1713  0000                     __ptext124:
  1714                           	global	btemp
  1715  007E                     	btemp set 07Eh
  1716                           
  1717                           	DABS	1,126,2	;btemp
  1718                           	global	wtemp0
  1719  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Jan 21 15:56:42 2021

                   _a 0078                     _i 007A                    u10 05F1                    u11 05F0  
                  u20 0602                    u21 0601                    u40 05D3                    u41 05D2  
                  u50 05E4                    u51 05E3                    u55 05E0                   l710 0603  
                 l713 05DA                   l714 05CE                   l722 07B4                   l715 05CF  
                 l723 07FF                   l708 05F3                   l716 05CF                   l724 07FF  
                 l732 0635                   l709 0603                   l717 05D3                   l733 0640  
                 l718 05E5                   l750 074A                   l734 0641                   l719 05E5  
                 l751 071C                   l727 075E                   l735 0641                   l752 0710  
                 l760 06FC                   l728 07A6                   l753 0721                   l761 06D6  
                 l729 07A6                   l754 0722                   l762 06CA                   l755 073B  
                 l763 06DB                   l756 0749                   l764 06DC                   l757 0751  
                 l765 06ED                   l693 0622                   l766 06FB                   l767 0703  
                 l696 0681                   l699 06BF                   _RC0 0038                   _RC1 0039  
                 u120 070C                   u121 070B                   u210 06DA                   u211 06D9  
                 u140 0720                   u220 06E6                   u141 071F                   u221 06E5  
                 u205 06CB                   u135 0711                   u160 0733                   u240 06FA  
                 u161 0732                   u241 06F9                   u225 06E2                   u155 0723  
                 u235 06EE                   u180 0748                   u181 0747                   u165 072F  
                 u190 06C6                   u175 073C                   u191 06C5                   _dat 0682  
                 _cmd 0644                   _len 07A7                  l1200 071C                  l2000 0752  
                l1210 0742                  l1202 0722                  l2010 079F                  l2002 0756  
                l1204 0733                  l1212 074A                  l1220 06CA                  l2004 075D  
                l2012 0623                  l1214 0751                  l1206 0739                  l1230 06ED  
                l1222 06D1                  l2006 075E                  l2014 062F                  l1152 05E6  
                l1208 073B                  l1232 06F4                  l1224 06D6                  l1216 06C0  
                l2008 0799                  l2016 0635                  l1154 05E8                  l1170 05D4  
                l1226 06DC                  l1218 06C6                  l1234 06FC                  l2018 063A  
                l1156 05F2                  l1236 0703                  l1228 06E6                  l1158 05F3  
                l1190 0704                  ?_dat 0070                  l1168 05CB                  l1192 0706  
                l1194 070C                  ?_cmd 0070                  l1196 0710                  l1198 0717  
                l1950 0651                  l1960 0674                  l1952 0652                  l1962 0679  
                l1954 0657                  l1946 0645                  l1970 068F                  l1964 067C  
                l1956 065A                  l1948 0648                  l1980 06B2                  l1972 0690  
                l1958 0673                  l1982 06B7                  l1974 0695                  l1966 0683  
                l1990 07A9                  l1984 06BA                  l1976 0698                  l1968 0686  
                l1992 07B3                  ?_len 0070                  l1978 06B1                  l1986 0604  
                l1994 07B4                  l1996 07EF                  l1988 07A7                  l1998 07F5  
                u2210 07B2                  u2211 07B1                  u2220 07FE                  u2205 06A6  
                u2221 07FD                  u2230 075C                  u2231 075B                  u2240 07A5  
                u2241 07A4                  u2195 0668                  dat@b 0074                  cmd@a 0074  
                _main 0623                  btemp 007E                  start 0000                 ??_dat 0072  
               ??_cmd 0072                 ??_len 0078                 ?_main 0070       __end_of___lwdiv 0752  
     __end_of___lwmod 0704                 _PORTB 0006                 _TRISB 0086                 _delay 05CB  
               _xuong 0752                 status 0003                 wtemp0 007E          __end_of_main 0644  
  lcd_delay@lcd_delay 0070                ??_main 0078                ?_delay 0070                ?_xuong 0070  
              _INTCON 000B                _TMR0IF 005A                _TRISC0 0438                _TRISC1 0439  
    __end_of_lcd_init 0623             ??___lwdiv 0074             ??___lwmod 0074                delay@a 0070  
              delay@i 0072        __pcstackCOMMON 0070         __end_of_delay 05E6         __end_of_xuong 07A7  
  __size_of_lcd_delay 001E               ??_delay 0072               ??_xuong 0078            __pmaintext 0623  
           ?_lcd_init 0070     __end_of_lcd_delay 0604               ___lwdiv 0704               ___lwmod 06C0  
        __size_of_dat 003E          __size_of_cmd 003E          __size_of_len 0059            ??_lcd_init 0075  
end_of_initialization 05C7   start_initialization 05C3           __end_of_dat 06C0           __end_of_cmd 0682  
         __end_of_len 0800           __pbssCOMMON 0078     __size_of_lcd_init 001F      ___lwdiv@dividend 0072  
           __ptext120 06C0             __ptext121 0704             __ptext122 05CB             __ptext114 0000  
           __ptext123 05E6             __ptext115 0752             __ptext124 0000             __ptext116 07A7  
           __ptext117 0604             __ptext118 0682             __ptext119 0644              ?___lwdiv 0070  
            ?___lwmod 0070             _lcd_delay 05E6      ___lwdiv@quotient 0075        __size_of_delay 001B  
      __size_of_xuong 0055            ?_lcd_delay 0070      __size_of___lwdiv 004E      __size_of___lwmod 0044  
     ___lwdiv@divisor 0070       ___lwdiv@counter 0077              _lcd_init 0604         __size_of_main 0021  
         ??_lcd_delay 0070      ___lwmod@dividend 0072            _OPTION_REG 0081       ___lwmod@divisor 0070  
     ___lwmod@counter 0075  
