

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed Nov 25 17:05:08 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 13 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 13 "newmain.c"
    45  2007  FF7A               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_timer_init
    48                           	FNCALL	_main,_intr_init
    49                           	FNCALL	_main,_cmd
    50                           	FNCALL	_lcd_init,_cmd
    51                           	FNCALL	_cmd,_lcd_delay
    52                           	FNROOT	_main
    53                           	FNCALL	_tmr0,i1_cmd
    54                           	FNCALL	_tmr0,_show
    55                           	FNCALL	_show,_dat
    56                           	FNCALL	i1_cmd,i1_lcd_delay
    57                           	FNCALL	_dat,i1_lcd_delay
    58                           	FNCALL	intlevel1,_tmr0
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	_a
    62                           	global	_b
    63                           	global	_c
    64                           	global	_z
    65                           	global	_INTCON
    66                           psect	text268,local,class=CODE,delta=2
    67                           global __ptext268
    68  0000                     __ptext268:
    69  000B                     _INTCON	set	11
    70                           	global	_PORTB
    71  0006                     _PORTB	set	6
    72                           	global	_T1CON
    73  0010                     _T1CON	set	16
    74                           	global	_T2CON
    75  0012                     _T2CON	set	18
    76                           	global	_TMR1H
    77  000F                     _TMR1H	set	15
    78                           	global	_TMR1L
    79  000E                     _TMR1L	set	14
    80                           	global	_RC0
    81  0038                     _RC0	set	56
    82                           	global	_RC1
    83  0039                     _RC1	set	57
    84                           	global	_RD0
    85  0040                     _RD0	set	64
    86                           	global	_RD1
    87  0041                     _RD1	set	65
    88                           	global	_RD2
    89  0042                     _RD2	set	66
    90                           	global	_TMR0IF
    91  005A                     _TMR0IF	set	90
    92                           	global	_TMR1IF
    93  0060                     _TMR1IF	set	96
    94                           	global	_TMR2IF
    95  0061                     _TMR2IF	set	97
    96                           	global	_OPTION_REG
    97  0081                     _OPTION_REG	set	129
    98                           	global	_PIE1
    99  008C                     _PIE1	set	140
   100                           	global	_TRISB4
   101  0434                     _TRISB4	set	1076
   102                           	global	_TRISB5
   103  0435                     _TRISB5	set	1077
   104                           	global	_TRISB6
   105  0436                     _TRISB6	set	1078
   106                           	global	_TRISB7
   107  0437                     _TRISB7	set	1079
   108                           	global	_TRISC0
   109  0438                     _TRISC0	set	1080
   110                           	global	_TRISC1
   111  0439                     _TRISC1	set	1081
   112                           	global	_TRISD0
   113  0440                     _TRISD0	set	1088
   114                           	global	_TRISD1
   115  0441                     _TRISD1	set	1089
   116                           	global	_TRISD2
   117  0442                     _TRISD2	set	1090
   118                           psect	strings,class=STRING,delta=2
   119                           global __pstrings
   120  0015                     __pstrings:
   121                           ;	global	stringdir,stringtab,__stringbase
   122  0015                     stringtab:
   123                           ;	String table - string pointers are 1 byte each
   124  0015                     stringcode:stringdir:
      + 0015                     stringdir:	
   125  0015  3000               movlw high(stringdir)
   126  0016  008A               movwf pclath
   127  0017  0804               movf fsr,w
   128  0018  0A84               incf fsr
   129  0019  0782               	addwf pc
   130  001A                     __stringbase:
   131  001A  3400               	retlw	0
   132                           psect	strings
   133                           	
   134  001B                     STR_1:	
   135  001B  3454               	retlw	84	;'T'
   136  001C  3469               	retlw	105	;'i'
   137  001D  346D               	retlw	109	;'m'
   138  001E  3465               	retlw	101	;'e'
   139  001F  3472               	retlw	114	;'r'
   140  0020  3420               	retlw	32	;' '
   141  0021  3430               	retlw	48	;'0'
   142  0022  3420               	retlw	32	;' '
   143  0023  3469               	retlw	105	;'i'
   144  0024  346E               	retlw	110	;'n'
   145  0025  3474               	retlw	116	;'t'
   146  0026  3465               	retlw	101	;'e'
   147  0027  3472               	retlw	114	;'r'
   148  0028  3475               	retlw	117	;'u'
   149  0029  3470               	retlw	112	;'p'
   150  002A  3474               	retlw	116	;'t'
   151  002B  3400               	retlw	0
   152                           psect	strings
   153                           	
   154  002C                     STR_2:	
   155  002C  3454               	retlw	84	;'T'
   156  002D  3469               	retlw	105	;'i'
   157  002E  346D               	retlw	109	;'m'
   158  002F  3465               	retlw	101	;'e'
   159  0030  3472               	retlw	114	;'r'
   160  0031  3420               	retlw	32	;' '
   161  0032  3431               	retlw	49	;'1'
   162  0033  3420               	retlw	32	;' '
   163  0034  3469               	retlw	105	;'i'
   164  0035  346E               	retlw	110	;'n'
   165  0036  3474               	retlw	116	;'t'
   166  0037  3465               	retlw	101	;'e'
   167  0038  3472               	retlw	114	;'r'
   168  0039  3475               	retlw	117	;'u'
   169  003A  3470               	retlw	112	;'p'
   170  003B  3474               	retlw	116	;'t'
   171  003C  3400               	retlw	0
   172                           psect	strings
   173                           	
   174  003D                     STR_3:	
   175  003D  3454               	retlw	84	;'T'
   176  003E  3469               	retlw	105	;'i'
   177  003F  346D               	retlw	109	;'m'
   178  0040  3465               	retlw	101	;'e'
   179  0041  3472               	retlw	114	;'r'
   180  0042  3420               	retlw	32	;' '
   181  0043  3432               	retlw	50	;'2'
   182  0044  3420               	retlw	32	;' '
   183  0045  3469               	retlw	105	;'i'
   184  0046  346E               	retlw	110	;'n'
   185  0047  3474               	retlw	116	;'t'
   186  0048  3465               	retlw	101	;'e'
   187  0049  3472               	retlw	114	;'r'
   188  004A  3475               	retlw	117	;'u'
   189  004B  3470               	retlw	112	;'p'
   190  004C  3474               	retlw	116	;'t'
   191  004D  3400               	retlw	0
   192                           psect	strings
   193                           	file	"C:\Users\tamin\AppData\Local\Temp\s7p0."
   194                           	line	#
   195                           psect cinit,class=CODE,delta=2
   196                           global start_initialization
   197  02BE                     start_initialization:
   198                           
   199                           psect	bssCOMMON,class=COMMON,space=1
   200                           global __pbssCOMMON
   201  007B                     __pbssCOMMON:
   202  007B                     _z:
   203  007B                            ds      2
   204                           
   205                           psect	bssBANK0,class=BANK0,space=1
   206                           global __pbssBANK0
   207  0020                     __pbssBANK0:
   208  0020                     _a:
   209  0020                            ds      2
   210                           
   211  0022                     _b:
   212  0022                            ds      2
   213                           
   214  0024                     _c:
   215  0024                            ds      2
   216                           
   217                           ; Clear objects allocated to COMMON
   218                           psect cinit,class=CODE,delta=2
   219  02BE  01FB               	clrf	((__pbssCOMMON)+0)&07Fh
   220  02BF  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   221                           ; Clear objects allocated to BANK0
   222                           psect cinit,class=CODE,delta=2
   223  02C0  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   224  02C1  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   225  02C2  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   226  02C3  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   227  02C4  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   228  02C5  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   229                           psect cinit,class=CODE,delta=2
   230                           global end_of_initialization
   231                           
   232                           ;End of C runtime variable initialization code
   233                           
   234  02C6                     end_of_initialization:
   235  02C6  0183               clrf status
   236  02C7  120A  118A  2926   ljmp _main	;jump to C main() function
   237                           psect	cstackCOMMON,class=COMMON,space=1
   238                           global __pcstackCOMMON
   239  0070                     __pcstackCOMMON:
   240                           	global	?_cmd
   241  0070                     ?_cmd:	; 0 bytes @ 0x0
   242                           	global	?_lcd_delay
   243  0070                     ?_lcd_delay:	; 0 bytes @ 0x0
   244                           	global	?_lcd_init
   245  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   246                           	global	?_dat
   247  0070                     ?_dat:	; 0 bytes @ 0x0
   248                           	global	?_show
   249  0070                     ?_show:	; 0 bytes @ 0x0
   250                           	global	?_tmr0
   251  0070                     ?_tmr0:	; 0 bytes @ 0x0
   252                           	global	?_intr_init
   253  0070                     ?_intr_init:	; 0 bytes @ 0x0
   254                           	global	?_timer_init
   255  0070                     ?_timer_init:	; 0 bytes @ 0x0
   256                           	global	?_main
   257  0070                     ?_main:	; 0 bytes @ 0x0
   258                           	global	?i1_cmd
   259  0070                     ?i1_cmd:	; 0 bytes @ 0x0
   260                           	global	?i1_lcd_delay
   261  0070                     ?i1_lcd_delay:	; 0 bytes @ 0x0
   262                           	global	??i1_lcd_delay
   263  0070                     ??i1_lcd_delay:	; 0 bytes @ 0x0
   264                           	global	i1lcd_delay@lcd_delay
   265  0070                     i1lcd_delay@lcd_delay:	; 2 bytes @ 0x0
   266  0070                     	ds	2
   267                           	global	??_dat
   268  0072                     ??_dat:	; 0 bytes @ 0x2
   269                           	global	??i1_cmd
   270  0072                     ??i1_cmd:	; 0 bytes @ 0x2
   271  0072                     	ds	2
   272                           	global	dat@b
   273  0074                     dat@b:	; 1 bytes @ 0x4
   274                           	global	i1cmd@a
   275  0074                     i1cmd@a:	; 1 bytes @ 0x4
   276  0074                     	ds	1
   277                           	global	??_show
   278  0075                     ??_show:	; 0 bytes @ 0x5
   279  0075                     	ds	1
   280                           	global	show@s
   281  0076                     show@s:	; 1 bytes @ 0x6
   282  0076                     	ds	1
   283                           	global	??_tmr0
   284  0077                     ??_tmr0:	; 0 bytes @ 0x7
   285  0077                     	ds	4
   286                           psect	cstackBANK0,class=BANK0,space=1
   287                           global __pcstackBANK0
   288  0026                     __pcstackBANK0:
   289                           	global	??_lcd_delay
   290  0026                     ??_lcd_delay:	; 0 bytes @ 0x0
   291                           	global	??_intr_init
   292  0026                     ??_intr_init:	; 0 bytes @ 0x0
   293                           	global	??_timer_init
   294  0026                     ??_timer_init:	; 0 bytes @ 0x0
   295                           	global	lcd_delay@lcd_delay
   296  0026                     lcd_delay@lcd_delay:	; 2 bytes @ 0x0
   297  0026                     	ds	2
   298                           	global	??_cmd
   299  0028                     ??_cmd:	; 0 bytes @ 0x2
   300  0028                     	ds	2
   301                           	global	cmd@a
   302  002A                     cmd@a:	; 1 bytes @ 0x4
   303  002A                     	ds	1
   304                           	global	??_lcd_init
   305  002B                     ??_lcd_init:	; 0 bytes @ 0x5
   306                           	global	??_main
   307  002B                     ??_main:	; 0 bytes @ 0x5
   308 ;;Data sizes: Strings 51, constant 0, data 0, bss 8, persistent 0 stack 0
   309 ;;Auto spaces:   Size  Autos    Used
   310 ;; COMMON          14     11      13
   311 ;; BANK0           80      5      11
   312 ;; BANK1           80      0       0
   313 ;; BANK3           96      0       0
   314 ;; BANK2           96      0       0
   315                           
   316 ;;
   317 ;; Pointer list with targets:
   318                           
   319 ;; show@s	PTR unsigned char  size(1) Largest target is 17
   320 ;;		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 
   321 ;;
   322                           
   323                           
   324 ;;
   325 ;; Critical Paths under _main in COMMON
   326 ;;
   327 ;;   None.
   328 ;;
   329 ;; Critical Paths under _tmr0 in COMMON
   330 ;;
   331 ;;   _tmr0->_show
   332 ;;   _show->_dat
   333 ;;   i1_cmd->i1_lcd_delay
   334 ;;   _dat->i1_lcd_delay
   335 ;;
   336 ;; Critical Paths under _main in BANK0
   337 ;;
   338 ;;   _main->_cmd
   339 ;;   _lcd_init->_cmd
   340 ;;   _cmd->_lcd_delay
   341 ;;
   342 ;; Critical Paths under _tmr0 in BANK0
   343 ;;
   344 ;;   None.
   345 ;;
   346 ;; Critical Paths under _main in BANK1
   347 ;;
   348 ;;   None.
   349 ;;
   350 ;; Critical Paths under _tmr0 in BANK1
   351 ;;
   352 ;;   None.
   353 ;;
   354 ;; Critical Paths under _main in BANK3
   355 ;;
   356 ;;   None.
   357 ;;
   358 ;; Critical Paths under _tmr0 in BANK3
   359 ;;
   360 ;;   None.
   361 ;;
   362 ;; Critical Paths under _main in BANK2
   363 ;;
   364 ;;   None.
   365 ;;
   366 ;; Critical Paths under _tmr0 in BANK2
   367 ;;
   368 ;;   None.
   369                           
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   372 ;;
   373                           
   374 ;;
   375 ;;Call Graph Tables:
   376 ;;
   377 ;; ---------------------------------------------------------------------------------
   378 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   379 ;; ---------------------------------------------------------------------------------
   380 ;; (0) _main                                                 0     0      0     180
   381 ;;                           _lcd_init
   382 ;;                         _timer_init
   383 ;;                          _intr_init
   384 ;;                                _cmd
   385 ;; ---------------------------------------------------------------------------------
   386 ;; (1) _lcd_init                                             0     0      0      90
   387 ;;                                _cmd
   388 ;; ---------------------------------------------------------------------------------
   389 ;; (1) _cmd                                                  3     3      0      90
   390 ;;                                              2 BANK0      3     3      0
   391 ;;                          _lcd_delay
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (1) _timer_init                                           0     0      0       0
   394 ;; ---------------------------------------------------------------------------------
   395 ;; (1) _intr_init                                            0     0      0       0
   396 ;; ---------------------------------------------------------------------------------
   397 ;; (2) _lcd_delay                                            2     2      0      46
   398 ;;                                              0 BANK0      2     2      0
   399 ;; ---------------------------------------------------------------------------------
   400 ;; Estimated maximum stack depth 2
   401 ;; ---------------------------------------------------------------------------------
   402 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (4) _tmr0                                                 4     4      0     535
   405 ;;                                              7 COMMON     4     4      0
   406 ;;                              i1_cmd
   407 ;;                               _show
   408 ;; ---------------------------------------------------------------------------------
   409 ;; (5) _show                                                 2     2      0     239
   410 ;;                                              5 COMMON     2     2      0
   411 ;;                                _dat
   412 ;; ---------------------------------------------------------------------------------
   413 ;; (5) i1_cmd                                                3     3      0     296
   414 ;;                                              2 COMMON     3     3      0
   415 ;;                        i1_lcd_delay
   416 ;; ---------------------------------------------------------------------------------
   417 ;; (6) _dat                                                  3     3      0     194
   418 ;;                                              2 COMMON     3     3      0
   419 ;;                        i1_lcd_delay
   420 ;; ---------------------------------------------------------------------------------
   421 ;; (7) i1_lcd_delay                                          2     2      0     150
   422 ;;                                              0 COMMON     2     2      0
   423 ;; ---------------------------------------------------------------------------------
   424 ;; Estimated maximum stack depth 7
   425 ;; ---------------------------------------------------------------------------------
   426                           
   427 ;; Call Graph Graphs:
   428                           
   429 ;; _main (ROOT)
   430 ;;   _lcd_init
   431 ;;     _cmd
   432 ;;       _lcd_delay
   433 ;;   _timer_init
   434 ;;   _intr_init
   435 ;;   _cmd
   436 ;;     _lcd_delay
   437 ;;
   438 ;; _tmr0 (ROOT)
   439 ;;   i1_cmd
   440 ;;     i1_lcd_delay
   441 ;;   _show
   442 ;;     _dat
   443 ;;       i1_lcd_delay
   444 ;;
   445                           
   446 ;; Address spaces:
   447                           
   448 ;;Name               Size   Autos  Total    Cost      Usage
   449 ;;BITCOMMON            E      0       0       0        0.0%
   450 ;;EEDATA             100      0       0       0        0.0%
   451 ;;NULL                 0      0       0       0        0.0%
   452 ;;CODE                 0      0       0       0        0.0%
   453 ;;COMMON               E      B       D       1       92.9%
   454 ;;BITSFR0              0      0       0       1        0.0%
   455 ;;SFR0                 0      0       0       1        0.0%
   456 ;;BITSFR1              0      0       0       2        0.0%
   457 ;;SFR1                 0      0       0       2        0.0%
   458 ;;STACK                0      0       B       2        0.0%
   459 ;;ABS                  0      0      18       3        0.0%
   460 ;;BITBANK0            50      0       0       4        0.0%
   461 ;;BITSFR3              0      0       0       4        0.0%
   462 ;;SFR3                 0      0       0       4        0.0%
   463 ;;BANK0               50      5       B       5       13.8%
   464 ;;BITSFR2              0      0       0       5        0.0%
   465 ;;SFR2                 0      0       0       5        0.0%
   466 ;;BITBANK1            50      0       0       6        0.0%
   467 ;;BANK1               50      0       0       7        0.0%
   468 ;;BITBANK3            60      0       0       8        0.0%
   469 ;;BANK3               60      0       0       9        0.0%
   470 ;;BITBANK2            60      0       0      10        0.0%
   471 ;;BANK2               60      0       0      11        0.0%
   472 ;;DATA                 0      0      23      12        0.0%
   473                           
   474                           	global	_main
   475                           psect	maintext,global,class=CODE,delta=2
   476                           global __pmaintext
   477  0126                     __pmaintext:
   478                           
   479 ;; *************** function _main *****************
   480 ;; Defined at:
   481 ;;		line 83 in file "newmain.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;		None               void
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 17F/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels required when called:    7
   501 ;; This function calls:
   502 ;;		_lcd_init
   503 ;;		_timer_init
   504 ;;		_intr_init
   505 ;;		_cmd
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           psect	maintext
   511                           	file	"newmain.c"
   512                           	line	83
   513                           	global	__size_of_main
   514  0060                     	__size_of_main	equ	__end_of_main-_main
   515                           	
   516  0126                     _main:	
   517                           	opt	stack 1
   518                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   519                           	line	85
   520                           	
   521  0126                     l2302:	
   522                           ;newmain.c: 85: TRISD0=TRISD1=TRISD2= TRISB4= TRISB5 = TRISB6 = TRISB7 = TRISC0 = TRISC1
                                  = 0;
   523  0126  1683               	bsf	status, 5	;RP0=1, select bank1
   524  0127  1303               	bcf	status, 6	;RP1=0, select bank1
   525  0128  1087               	bcf	(1081/8)^080h,(1081)&7
   526  0129  1007               	bcf	(1080/8)^080h,(1080)&7
   527  012A  1386               	bcf	(1079/8)^080h,(1079)&7
   528  012B  1306               	bcf	(1078/8)^080h,(1078)&7
   529  012C  1286               	bcf	(1077/8)^080h,(1077)&7
   530  012D  1206               	bcf	(1076/8)^080h,(1076)&7
   531  012E  1108               	bcf	(1090/8)^080h,(1090)&7
   532  012F  1088               	bcf	(1089/8)^080h,(1089)&7
   533  0130  1008               	bcf	(1088/8)^080h,(1088)&7
   534                           	line	87
   535                           	
   536  0131                     l2304:	
   537                           ;newmain.c: 87: lcd_init();
   538  0131  120A  118A  2281   	fcall	_lcd_init
              120A  118A         
   539                           	line	89
   540                           ;newmain.c: 89: timer_init();
   541  0136  120A  118A  22CA   	fcall	_timer_init
              120A  118A         
   542                           	line	90
   543                           ;newmain.c: 90: intr_init();
   544  013B  120A  118A  22D5   	fcall	_intr_init
              120A  118A         
   545  0140  2941               	goto	l2306
   546                           	line	94
   547                           ;newmain.c: 94: while(1) {
   548                           	
   549  0141                     l770:	
   550                           	line	96
   551                           	
   552  0141                     l2306:	
   553                           ;newmain.c: 96: for(z=0;z<=50000;z++);
   554  0141  01FB               	clrf	(_z)
   555  0142  01FC               	clrf	(_z+1)
   556                           	
   557  0143                     l2308:	
   558  0143  30C3               	movlw	high(0C351h)
   559  0144  027C               	subwf	(_z+1),w
   560  0145  3051               	movlw	low(0C351h)
   561  0146  1903               	skipnz
   562  0147  027B               	subwf	(_z),w
   563  0148  1C03               	skipc
   564  0149  294B               	goto	u2671
   565  014A  294C               	goto	u2670
   566  014B                     u2671:
   567  014B  294E               	goto	l2312
   568  014C                     u2670:
   569  014C  295E               	goto	l2314
   570                           	
   571  014D                     l2310:	
   572  014D  295E               	goto	l2314
   573                           	
   574  014E                     l771:	
   575                           	
   576  014E                     l2312:	
   577  014E  3001               	movlw	low(01h)
   578  014F  07FB               	addwf	(_z),f
   579  0150  1803               	skipnc
   580  0151  0AFC               	incf	(_z+1),f
   581  0152  3000               	movlw	high(01h)
   582  0153  07FC               	addwf	(_z+1),f
   583  0154  30C3               	movlw	high(0C351h)
   584  0155  027C               	subwf	(_z+1),w
   585  0156  3051               	movlw	low(0C351h)
   586  0157  1903               	skipnz
   587  0158  027B               	subwf	(_z),w
   588  0159  1C03               	skipc
   589  015A  295C               	goto	u2681
   590  015B  295D               	goto	u2680
   591  015C                     u2681:
   592  015C  294E               	goto	l2312
   593  015D                     u2680:
   594  015D  295E               	goto	l2314
   595                           	
   596  015E                     l772:	
   597                           	line	97
   598                           	
   599  015E                     l2314:	
   600                           ;newmain.c: 97: cmd(0x01);
   601  015E  3001               	movlw	(01h)
   602  015F  120A  118A  2186   	fcall	_cmd
              120A  118A         
   603                           	line	98
   604                           	
   605  0164                     l2316:	
   606                           ;newmain.c: 98: for(z=0;z<=50000;z++);
   607  0164  01FB               	clrf	(_z)
   608  0165  01FC               	clrf	(_z+1)
   609                           	
   610  0166                     l2318:	
   611  0166  30C3               	movlw	high(0C351h)
   612  0167  027C               	subwf	(_z+1),w
   613  0168  3051               	movlw	low(0C351h)
   614  0169  1903               	skipnz
   615  016A  027B               	subwf	(_z),w
   616  016B  1C03               	skipc
   617  016C  296E               	goto	u2691
   618  016D  296F               	goto	u2690
   619  016E                     u2691:
   620  016E  2971               	goto	l2322
   621  016F                     u2690:
   622  016F  2941               	goto	l2306
   623                           	
   624  0170                     l2320:	
   625  0170  2941               	goto	l2306
   626                           	
   627  0171                     l773:	
   628                           	
   629  0171                     l2322:	
   630  0171  3001               	movlw	low(01h)
   631  0172  07FB               	addwf	(_z),f
   632  0173  1803               	skipnc
   633  0174  0AFC               	incf	(_z+1),f
   634  0175  3000               	movlw	high(01h)
   635  0176  07FC               	addwf	(_z+1),f
   636  0177  30C3               	movlw	high(0C351h)
   637  0178  027C               	subwf	(_z+1),w
   638  0179  3051               	movlw	low(0C351h)
   639  017A  1903               	skipnz
   640  017B  027B               	subwf	(_z),w
   641  017C  1C03               	skipc
   642  017D  297F               	goto	u2701
   643  017E  2980               	goto	u2700
   644  017F                     u2701:
   645  017F  2971               	goto	l2322
   646  0180                     u2700:
   647  0180  2941               	goto	l2306
   648                           	
   649  0181                     l774:	
   650  0181  2941               	goto	l2306
   651                           	line	101
   652                           	
   653  0182                     l775:	
   654                           	line	94
   655  0182  2941               	goto	l2306
   656                           	
   657  0183                     l776:	
   658                           	line	102
   659                           	
   660  0183                     l777:	
   661                           	global	start
   662  0183  120A  118A  2812   	ljmp	start
   663                           	opt stack 0
   664                           GLOBAL	__end_of_main
   665  0186                     	__end_of_main:
   666 ;; =============== function _main ends ============
   667                           
   668                           	signat	_main,88
   669                           	global	_lcd_init
   670                           psect	text269,local,class=CODE,delta=2
   671                           global __ptext269
   672  0281                     __ptext269:
   673                           
   674 ;; *************** function _lcd_init *****************
   675 ;; Defined at:
   676 ;;		line 38 in file "lcd4.h"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;		None               void
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    6
   697 ;; This function calls:
   698 ;;		_cmd
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           psect	text269
   704                           	file	"lcd4.h"
   705                           	line	38
   706                           	global	__size_of_lcd_init
   707  001F                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   708                           	
   709  0281                     _lcd_init:	
   710                           	opt	stack 1
   711                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   712                           	line	40
   713                           	
   714  0281                     l2300:	
   715                           ;lcd4.h: 40: cmd(0x02);
   716  0281  3002               	movlw	(02h)
   717  0282  120A  118A  2186   	fcall	_cmd
              120A  118A         
   718                           	line	42
   719                           ;lcd4.h: 42: cmd(0x28);
   720  0287  3028               	movlw	(028h)
   721  0288  120A  118A  2186   	fcall	_cmd
              120A  118A         
   722                           	line	44
   723                           ;lcd4.h: 44: cmd(0x0e);
   724  028D  300E               	movlw	(0Eh)
   725  028E  120A  118A  2186   	fcall	_cmd
              120A  118A         
   726                           	line	46
   727                           ;lcd4.h: 46: cmd(0x06);
   728  0293  3006               	movlw	(06h)
   729  0294  120A  118A  2186   	fcall	_cmd
              120A  118A         
   730                           	line	48
   731                           ;lcd4.h: 48: cmd(0x80);
   732  0299  3080               	movlw	(080h)
   733  029A  120A  118A  2186   	fcall	_cmd
              120A  118A         
   734                           	line	50
   735                           	
   736  029F                     l697:	
   737  029F  0008               	return
   738                           	opt stack 0
   739                           GLOBAL	__end_of_lcd_init
   740  02A0                     	__end_of_lcd_init:
   741 ;; =============== function _lcd_init ends ============
   742                           
   743                           	signat	_lcd_init,88
   744                           	global	_cmd
   745                           psect	text270,local,class=CODE,delta=2
   746                           global __ptext270
   747  0186                     __ptext270:
   748                           
   749 ;; *************** function _cmd *****************
   750 ;; Defined at:
   751 ;;		line 53 in file "lcd4.h"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  a               1    wreg     unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  a               1    4[BANK0 ] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;		None               void
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       1       0       0       0
   767 ;;      Temps:          0       2       0       0       0
   768 ;;      Totals:         0       3       0       0       0
   769 ;;Total ram usage:        3 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		_lcd_delay
   774 ;; This function is called by:
   775 ;;		_lcd_init
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           psect	text270
   780                           	file	"lcd4.h"
   781                           	line	53
   782                           	global	__size_of_cmd
   783  003E                     	__size_of_cmd	equ	__end_of_cmd-_cmd
   784                           	
   785  0186                     _cmd:	
   786                           	opt	stack 2
   787                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
   788                           ;cmd@a stored from wreg
   789                           	line	55
   790  0186  1283               	bcf	status, 5	;RP0=0, select bank0
   791  0187  1303               	bcf	status, 6	;RP1=0, select bank0
   792  0188  00AA               	movwf	(cmd@a)
   793                           	
   794  0189                     l2280:	
   795                           ;lcd4.h: 55: RC0 = 0;
   796  0189  1007               	bcf	(56/8),(56)&7
   797                           	line	57
   798                           	
   799  018A                     l2282:	
   800                           ;lcd4.h: 57: PORTB &= 0x0F;
   801  018A  300F               	movlw	(0Fh)
   802  018B  00A8               	movwf	(??_cmd+0)+0
   803  018C  0828               	movf	(??_cmd+0)+0,w
   804  018D  0586               	andwf	(6),f	;volatile
   805                           	line	59
   806                           ;lcd4.h: 59: PORTB |= (a & 0xf0);
   807  018E  082A               	movf	(cmd@a),w
   808  018F  39F0               	andlw	0F0h
   809  0190  00A8               	movwf	(??_cmd+0)+0
   810  0191  0828               	movf	(??_cmd+0)+0,w
   811  0192  0486               	iorwf	(6),f	;volatile
   812                           	line	61
   813                           	
   814  0193                     l2284:	
   815                           ;lcd4.h: 61: RC1 = 1;
   816  0193  1487               	bsf	(57/8),(57)&7
   817                           	line	63
   818                           	
   819  0194                     l2286:	
   820                           ;lcd4.h: 63: lcd_delay();
   821  0194  120A  118A  2261   	fcall	_lcd_delay
              120A  118A         
   822                           	line	65
   823                           	
   824  0199                     l2288:	
   825                           ;lcd4.h: 65: RC1 = 0;
   826  0199  1283               	bcf	status, 5	;RP0=0, select bank0
   827  019A  1303               	bcf	status, 6	;RP1=0, select bank0
   828  019B  1087               	bcf	(57/8),(57)&7
   829                           	line	66
   830                           	
   831  019C                     l2290:	
   832                           ;lcd4.h: 66: lcd_delay();
   833  019C  120A  118A  2261   	fcall	_lcd_delay
              120A  118A         
   834                           	line	68
   835                           ;lcd4.h: 68: PORTB &= 0x0f;
   836  01A1  300F               	movlw	(0Fh)
   837  01A2  1283               	bcf	status, 5	;RP0=0, select bank0
   838  01A3  1303               	bcf	status, 6	;RP1=0, select bank0
   839  01A4  00A8               	movwf	(??_cmd+0)+0
   840  01A5  0828               	movf	(??_cmd+0)+0,w
   841  01A6  0586               	andwf	(6),f	;volatile
   842                           	line	70
   843                           ;lcd4.h: 70: PORTB |= (a << 4 & 0xf0);
   844  01A7  082A               	movf	(cmd@a),w
   845  01A8  00A8               	movwf	(??_cmd+0)+0
   846  01A9  3003               	movlw	(04h)-1
   847  01AA                     u2665:
   848  01AA  1003               	clrc
   849  01AB  0DA8               	rlf	(??_cmd+0)+0,f
   850  01AC  3EFF               	addlw	-1
   851  01AD  1D03               	skipz
   852  01AE  29AA               	goto	u2665
   853  01AF  1003               	clrc
   854  01B0  0D28               	rlf	(??_cmd+0)+0,w
   855  01B1  39F0               	andlw	0F0h
   856  01B2  00A9               	movwf	(??_cmd+1)+0
   857  01B3  0829               	movf	(??_cmd+1)+0,w
   858  01B4  0486               	iorwf	(6),f	;volatile
   859                           	line	72
   860                           	
   861  01B5                     l2292:	
   862                           ;lcd4.h: 72: RC1 = 1;
   863  01B5  1487               	bsf	(57/8),(57)&7
   864                           	line	74
   865                           	
   866  01B6                     l2294:	
   867                           ;lcd4.h: 74: lcd_delay();
   868  01B6  120A  118A  2261   	fcall	_lcd_delay
              120A  118A         
   869                           	line	76
   870                           	
   871  01BB                     l2296:	
   872                           ;lcd4.h: 76: RC1 = 0;
   873  01BB  1283               	bcf	status, 5	;RP0=0, select bank0
   874  01BC  1303               	bcf	status, 6	;RP1=0, select bank0
   875  01BD  1087               	bcf	(57/8),(57)&7
   876                           	line	78
   877                           	
   878  01BE                     l2298:	
   879                           ;lcd4.h: 78: lcd_delay();
   880  01BE  120A  118A  2261   	fcall	_lcd_delay
              120A  118A         
   881                           	line	80
   882                           	
   883  01C3                     l700:	
   884  01C3  0008               	return
   885                           	opt stack 0
   886                           GLOBAL	__end_of_cmd
   887  01C4                     	__end_of_cmd:
   888 ;; =============== function _cmd ends ============
   889                           
   890                           	signat	_cmd,4216
   891                           	global	_timer_init
   892                           psect	text271,local,class=CODE,delta=2
   893                           global __ptext271
   894  02CA                     __ptext271:
   895                           
   896 ;; *************** function _timer_init *****************
   897 ;; Defined at:
   898 ;;		line 69 in file "newmain.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    4
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           psect	text271
   926                           	file	"newmain.c"
   927                           	line	69
   928                           	global	__size_of_timer_init
   929  000B                     	__size_of_timer_init	equ	__end_of_timer_init-_timer_init
   930                           	
   931  02CA                     _timer_init:	
   932                           	opt	stack 3
   933                           ; Regs used in _timer_init: [wreg]
   934                           	line	70
   935                           	
   936  02CA                     l2250:	
   937                           ;newmain.c: 70: OPTION_REG=0b00000111;
   938  02CA  3007               	movlw	(07h)
   939  02CB  1683               	bsf	status, 5	;RP0=1, select bank1
   940  02CC  1303               	bcf	status, 6	;RP1=0, select bank1
   941  02CD  0081               	movwf	(129)^080h	;volatile
   942                           	line	71
   943                           ;newmain.c: 71: T1CON=0b00000001;
   944  02CE  3001               	movlw	(01h)
   945  02CF  1283               	bcf	status, 5	;RP0=0, select bank0
   946  02D0  1303               	bcf	status, 6	;RP1=0, select bank0
   947  02D1  0090               	movwf	(16)	;volatile
   948                           	line	72
   949                           ;newmain.c: 72: T2CON=0b01111100;
   950  02D2  307C               	movlw	(07Ch)
   951  02D3  0092               	movwf	(18)	;volatile
   952                           	line	73
   953                           	
   954  02D4                     l767:	
   955  02D4  0008               	return
   956                           	opt stack 0
   957                           GLOBAL	__end_of_timer_init
   958  02D5                     	__end_of_timer_init:
   959 ;; =============== function _timer_init ends ============
   960                           
   961                           	signat	_timer_init,88
   962                           	global	_intr_init
   963                           psect	text272,local,class=CODE,delta=2
   964                           global __ptext272
   965  02D5                     __ptext272:
   966                           
   967 ;; *************** function _intr_init *****************
   968 ;; Defined at:
   969 ;;		line 63 in file "newmain.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    4
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           psect	text272
   997                           	file	"newmain.c"
   998                           	line	63
   999                           	global	__size_of_intr_init
  1000  0007                     	__size_of_intr_init	equ	__end_of_intr_init-_intr_init
  1001                           	
  1002  02D5                     _intr_init:	
  1003                           	opt	stack 3
  1004                           ; Regs used in _intr_init: [wreg]
  1005                           	line	64
  1006                           	
  1007  02D5                     l2248:	
  1008                           ;newmain.c: 64: INTCON=0xe0;
  1009  02D5  30E0               	movlw	(0E0h)
  1010  02D6  008B               	movwf	(11)	;volatile
  1011                           	line	65
  1012                           ;newmain.c: 65: PIE1=0x03;
  1013  02D7  3003               	movlw	(03h)
  1014  02D8  1683               	bsf	status, 5	;RP0=1, select bank1
  1015  02D9  1303               	bcf	status, 6	;RP1=0, select bank1
  1016  02DA  008C               	movwf	(140)^080h	;volatile
  1017                           	line	66
  1018                           	
  1019  02DB                     l764:	
  1020  02DB  0008               	return
  1021                           	opt stack 0
  1022                           GLOBAL	__end_of_intr_init
  1023  02DC                     	__end_of_intr_init:
  1024 ;; =============== function _intr_init ends ============
  1025                           
  1026                           	signat	_intr_init,88
  1027                           	global	_lcd_delay
  1028                           psect	text273,local,class=CODE,delta=2
  1029                           global __ptext273
  1030  0261                     __ptext273:
  1031                           
  1032 ;; *************** function _lcd_delay *****************
  1033 ;; Defined at:
  1034 ;;		line 125 in file "lcd4.h"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  lcd_delay       2    0[BANK0 ] unsigned int 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, status,2
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       2       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         0       2       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    4
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_cmd
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           psect	text273
  1062                           	file	"lcd4.h"
  1063                           	line	125
  1064                           	global	__size_of_lcd_delay
  1065  0020                     	__size_of_lcd_delay	equ	__end_of_lcd_delay-_lcd_delay
  1066                           	
  1067  0261                     _lcd_delay:	
  1068                           	opt	stack 2
  1069                           ; Regs used in _lcd_delay: [wreg+status,2]
  1070                           	line	129
  1071                           	
  1072  0261                     l2146:	
  1073                           ;lcd4.h: 127: unsigned int lcd_delay;
  1074                           ;lcd4.h: 129: for (lcd_delay = 0; lcd_delay <= 1000; lcd_delay++);
  1075  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  1076  0262  1303               	bcf	status, 6	;RP1=0, select bank0
  1077  0263  01A6               	clrf	(lcd_delay@lcd_delay)
  1078  0264  01A7               	clrf	(lcd_delay@lcd_delay+1)
  1079                           	
  1080  0265                     l2148:	
  1081  0265  3003               	movlw	high(03E9h)
  1082  0266  0227               	subwf	(lcd_delay@lcd_delay+1),w
  1083  0267  30E9               	movlw	low(03E9h)
  1084  0268  1903               	skipnz
  1085  0269  0226               	subwf	(lcd_delay@lcd_delay),w
  1086  026A  1C03               	skipc
  1087  026B  2A6D               	goto	u2471
  1088  026C  2A6E               	goto	u2470
  1089  026D                     u2471:
  1090  026D  2A70               	goto	l2152
  1091  026E                     u2470:
  1092  026E  2A80               	goto	l714
  1093                           	
  1094  026F                     l2150:	
  1095  026F  2A80               	goto	l714
  1096                           	
  1097  0270                     l712:	
  1098                           	
  1099  0270                     l2152:	
  1100  0270  3001               	movlw	low(01h)
  1101  0271  07A6               	addwf	(lcd_delay@lcd_delay),f
  1102  0272  1803               	skipnc
  1103  0273  0AA7               	incf	(lcd_delay@lcd_delay+1),f
  1104  0274  3000               	movlw	high(01h)
  1105  0275  07A7               	addwf	(lcd_delay@lcd_delay+1),f
  1106  0276  3003               	movlw	high(03E9h)
  1107  0277  0227               	subwf	(lcd_delay@lcd_delay+1),w
  1108  0278  30E9               	movlw	low(03E9h)
  1109  0279  1903               	skipnz
  1110  027A  0226               	subwf	(lcd_delay@lcd_delay),w
  1111  027B  1C03               	skipc
  1112  027C  2A7E               	goto	u2481
  1113  027D  2A7F               	goto	u2480
  1114  027E                     u2481:
  1115  027E  2A70               	goto	l2152
  1116  027F                     u2480:
  1117  027F  2A80               	goto	l714
  1118                           	
  1119  0280                     l713:	
  1120                           	line	131
  1121                           	
  1122  0280                     l714:	
  1123  0280  0008               	return
  1124                           	opt stack 0
  1125                           GLOBAL	__end_of_lcd_delay
  1126  0281                     	__end_of_lcd_delay:
  1127 ;; =============== function _lcd_delay ends ============
  1128                           
  1129                           	signat	_lcd_delay,88
  1130                           	global	_tmr0
  1131                           psect	text274,local,class=CODE,delta=2
  1132                           global __ptext274
  1133  004E                     __ptext274:
  1134                           
  1135 ;; *************** function _tmr0 *****************
  1136 ;; Defined at:
  1137 ;;		line 19 in file "newmain.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0
  1153 ;;      Temps:          4       0       0       0       0
  1154 ;;      Totals:         4       0       0       0       0
  1155 ;;Total ram usage:        4 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    3
  1158 ;; This function calls:
  1159 ;;		i1_cmd
  1160 ;;		_show
  1161 ;; This function is called by:
  1162 ;;		Interrupt level 1
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           psect	text274
  1166                           	file	"newmain.c"
  1167                           	line	19
  1168                           	global	__size_of_tmr0
  1169  00D8                     	__size_of_tmr0	equ	__end_of_tmr0-_tmr0
  1170                           	
  1171  004E                     _tmr0:	
  1172                           	opt	stack 1
  1173                           ; Regs used in _tmr0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1174                           psect	intentry,class=CODE,delta=2
  1175                           global __pintentry
  1176  0004                     __pintentry:
  1177                           global interrupt_function
  1178  0004                     interrupt_function:
  1179                           	global saved_w
  1180  007E                     	saved_w	set	btemp+0
  1181  0004  00FE               	movwf	saved_w
  1182  0005  0E03               	swapf	status,w
  1183  0006  00F7               	movwf	(??_tmr0+0)
  1184  0007  0804               	movf	fsr0,w
  1185  0008  00F8               	movwf	(??_tmr0+1)
  1186  0009  080A               	movf	pclath,w
  1187  000A  00F9               	movwf	(??_tmr0+2)
  1188  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1189  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1190  000D  087F               	movf	btemp+1,w
  1191  000E  00FA               	movwf	(??_tmr0+3)
  1192  000F  120A  118A  284E   	ljmp	_tmr0
  1193                           psect	text274
  1194                           	line	20
  1195                           	
  1196  004E                     i1l2182:	
  1197                           ;newmain.c: 20: if(TMR0IF) {
  1198  004E  1D0B               	btfss	(90/8),(90)&7
  1199  004F  2851               	goto	u251_21
  1200  0050  2852               	goto	u251_20
  1201  0051                     u251_21:
  1202  0051  2891               	goto	i1l747
  1203  0052                     u251_20:
  1204                           	line	21
  1205                           	
  1206  0052                     i1l2184:	
  1207                           ;newmain.c: 21: a++;
  1208  0052  3001               	movlw	low(01h)
  1209  0053  07A0               	addwf	(_a),f
  1210  0054  1803               	skipnc
  1211  0055  0AA1               	incf	(_a+1),f
  1212  0056  3000               	movlw	high(01h)
  1213  0057  07A1               	addwf	(_a+1),f
  1214                           	line	22
  1215                           ;newmain.c: 22: if(a==42)
  1216  0058  302A               	movlw	02Ah
  1217  0059  0620               	xorwf	(_a),w
  1218  005A  0421               	iorwf	(_a+1),w
  1219  005B  1D03               	skipz
  1220  005C  285E               	goto	u252_21
  1221  005D  285F               	goto	u252_20
  1222  005E                     u252_21:
  1223  005E  288F               	goto	i1l748
  1224  005F                     u252_20:
  1225                           	line	24
  1226                           	
  1227  005F                     i1l2186:	
  1228                           ;newmain.c: 23: {
  1229                           ;newmain.c: 24: cmd(0x80);
  1230  005F  3080               	movlw	(080h)
  1231  0060  120A  118A  21C4   	fcall	i1_cmd
              120A  118A         
  1232                           	line	25
  1233                           	
  1234  0065                     i1l2188:	
  1235                           ;newmain.c: 25: show("Timer 0 interupt");
  1236  0065  3001               	movlw	((STR_1-__stringbase))&0ffh
  1237  0066  120A  118A  2240   	fcall	_show
              120A  118A         
  1238                           	line	26
  1239                           	
  1240  006B                     i1l2190:	
  1241                           ;newmain.c: 26: RD0= 1;
  1242  006B  1283               	bcf	status, 5	;RP0=0, select bank0
  1243  006C  1303               	bcf	status, 6	;RP1=0, select bank0
  1244  006D  1408               	bsf	(64/8),(64)&7
  1245                           	line	27
  1246                           	
  1247  006E                     i1l2192:	
  1248                           ;newmain.c: 27: RD1= 0;
  1249  006E  1088               	bcf	(65/8),(65)&7
  1250                           	line	28
  1251                           	
  1252  006F                     i1l2194:	
  1253                           ;newmain.c: 28: RD2= 0;
  1254  006F  1108               	bcf	(66/8),(66)&7
  1255                           	line	29
  1256                           	
  1257  0070                     i1l2196:	
  1258                           ;newmain.c: 29: a=0;
  1259  0070  01A0               	clrf	(_a)
  1260  0071  01A1               	clrf	(_a+1)
  1261                           	line	30
  1262                           	
  1263  0072                     i1l2198:	
  1264                           ;newmain.c: 30: for(z=0;z<=50000;z++);
  1265  0072  01FB               	clrf	(_z)
  1266  0073  01FC               	clrf	(_z+1)
  1267                           	
  1268  0074                     i1l2200:	
  1269  0074  30C3               	movlw	high(0C351h)
  1270  0075  027C               	subwf	(_z+1),w
  1271  0076  3051               	movlw	low(0C351h)
  1272  0077  1903               	skipnz
  1273  0078  027B               	subwf	(_z),w
  1274  0079  1C03               	skipc
  1275  007A  287C               	goto	u253_21
  1276  007B  287D               	goto	u253_20
  1277  007C                     u253_21:
  1278  007C  287F               	goto	i1l2204
  1279  007D                     u253_20:
  1280  007D  288F               	goto	i1l748
  1281                           	
  1282  007E                     i1l2202:	
  1283  007E  288F               	goto	i1l748
  1284                           	
  1285  007F                     i1l749:	
  1286                           	
  1287  007F                     i1l2204:	
  1288  007F  3001               	movlw	low(01h)
  1289  0080  07FB               	addwf	(_z),f
  1290  0081  1803               	skipnc
  1291  0082  0AFC               	incf	(_z+1),f
  1292  0083  3000               	movlw	high(01h)
  1293  0084  07FC               	addwf	(_z+1),f
  1294  0085  30C3               	movlw	high(0C351h)
  1295  0086  027C               	subwf	(_z+1),w
  1296  0087  3051               	movlw	low(0C351h)
  1297  0088  1903               	skipnz
  1298  0089  027B               	subwf	(_z),w
  1299  008A  1C03               	skipc
  1300  008B  288D               	goto	u254_21
  1301  008C  288E               	goto	u254_20
  1302  008D                     u254_21:
  1303  008D  287F               	goto	i1l2204
  1304  008E                     u254_20:
  1305  008E  288F               	goto	i1l748
  1306                           	
  1307  008F                     i1l750:	
  1308                           	line	31
  1309                           	
  1310  008F                     i1l748:	
  1311                           	line	32
  1312                           ;newmain.c: 31: }
  1313                           ;newmain.c: 32: TMR0IF=0;
  1314  008F  110B               	bcf	(90/8),(90)&7
  1315                           	line	33
  1316                           ;newmain.c: 33: } else if(TMR1IF) {
  1317  0090  291B               	goto	i1l761
  1318                           	
  1319  0091                     i1l747:	
  1320  0091  1C0C               	btfss	(96/8),(96)&7
  1321  0092  2894               	goto	u255_21
  1322  0093  2895               	goto	u255_20
  1323  0094                     u255_21:
  1324  0094  28D3               	goto	i1l752
  1325  0095                     u255_20:
  1326                           	line	34
  1327                           	
  1328  0095                     i1l2206:	
  1329                           ;newmain.c: 34: b++;
  1330  0095  3001               	movlw	low(01h)
  1331  0096  07A2               	addwf	(_b),f
  1332  0097  1803               	skipnc
  1333  0098  0AA3               	incf	(_b+1),f
  1334  0099  3000               	movlw	high(01h)
  1335  009A  07A3               	addwf	(_b+1),f
  1336                           	line	35
  1337                           ;newmain.c: 35: if(b==84)
  1338  009B  3054               	movlw	054h
  1339  009C  0622               	xorwf	(_b),w
  1340  009D  0423               	iorwf	(_b+1),w
  1341  009E  1D03               	skipz
  1342  009F  28A1               	goto	u256_21
  1343  00A0  28A2               	goto	u256_20
  1344  00A1                     u256_21:
  1345  00A1  28D1               	goto	i1l753
  1346  00A2                     u256_20:
  1347                           	line	37
  1348                           	
  1349  00A2                     i1l2208:	
  1350                           ;newmain.c: 36: {
  1351                           ;newmain.c: 37: cmd(0xc0);
  1352  00A2  30C0               	movlw	(0C0h)
  1353  00A3  120A  118A  21C4   	fcall	i1_cmd
              120A  118A         
  1354                           	line	38
  1355                           	
  1356  00A8                     i1l2210:	
  1357                           ;newmain.c: 38: show("Timer 1 interupt");
  1358  00A8  3012               	movlw	((STR_2-__stringbase))&0ffh
  1359  00A9  120A  118A  2240   	fcall	_show
              120A  118A         
  1360                           	line	39
  1361                           	
  1362  00AE                     i1l2212:	
  1363                           ;newmain.c: 39: RD0 = 0;
  1364  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1365  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1366  00B0  1008               	bcf	(64/8),(64)&7
  1367                           	line	40
  1368                           	
  1369  00B1                     i1l2214:	
  1370                           ;newmain.c: 40: RD1 = 1;
  1371  00B1  1488               	bsf	(65/8),(65)&7
  1372                           	line	41
  1373                           	
  1374  00B2                     i1l2216:	
  1375                           ;newmain.c: 41: b=0;
  1376  00B2  01A2               	clrf	(_b)
  1377  00B3  01A3               	clrf	(_b+1)
  1378                           	line	42
  1379                           	
  1380  00B4                     i1l2218:	
  1381                           ;newmain.c: 42: for(z=0;z<=50000;z++);
  1382  00B4  01FB               	clrf	(_z)
  1383  00B5  01FC               	clrf	(_z+1)
  1384                           	
  1385  00B6                     i1l2220:	
  1386  00B6  30C3               	movlw	high(0C351h)
  1387  00B7  027C               	subwf	(_z+1),w
  1388  00B8  3051               	movlw	low(0C351h)
  1389  00B9  1903               	skipnz
  1390  00BA  027B               	subwf	(_z),w
  1391  00BB  1C03               	skipc
  1392  00BC  28BE               	goto	u257_21
  1393  00BD  28BF               	goto	u257_20
  1394  00BE                     u257_21:
  1395  00BE  28C1               	goto	i1l2224
  1396  00BF                     u257_20:
  1397  00BF  28D1               	goto	i1l753
  1398                           	
  1399  00C0                     i1l2222:	
  1400  00C0  28D1               	goto	i1l753
  1401                           	
  1402  00C1                     i1l754:	
  1403                           	
  1404  00C1                     i1l2224:	
  1405  00C1  3001               	movlw	low(01h)
  1406  00C2  07FB               	addwf	(_z),f
  1407  00C3  1803               	skipnc
  1408  00C4  0AFC               	incf	(_z+1),f
  1409  00C5  3000               	movlw	high(01h)
  1410  00C6  07FC               	addwf	(_z+1),f
  1411  00C7  30C3               	movlw	high(0C351h)
  1412  00C8  027C               	subwf	(_z+1),w
  1413  00C9  3051               	movlw	low(0C351h)
  1414  00CA  1903               	skipnz
  1415  00CB  027B               	subwf	(_z),w
  1416  00CC  1C03               	skipc
  1417  00CD  28CF               	goto	u258_21
  1418  00CE  28D0               	goto	u258_20
  1419  00CF                     u258_21:
  1420  00CF  28C1               	goto	i1l2224
  1421  00D0                     u258_20:
  1422  00D0  28D1               	goto	i1l753
  1423                           	
  1424  00D1                     i1l755:	
  1425                           	line	43
  1426                           	
  1427  00D1                     i1l753:	
  1428                           	line	44
  1429                           ;newmain.c: 43: }
  1430                           ;newmain.c: 44: TMR1IF=0;
  1431  00D1  100C               	bcf	(96/8),(96)&7
  1432                           	line	45
  1433                           ;newmain.c: 45: } else if(TMR2IF) {
  1434  00D2  291B               	goto	i1l761
  1435                           	
  1436  00D3                     i1l752:	
  1437  00D3  1C8C               	btfss	(97/8),(97)&7
  1438  00D4  28D6               	goto	u259_21
  1439  00D5  28D7               	goto	u259_20
  1440  00D6                     u259_21:
  1441  00D6  291B               	goto	i1l761
  1442  00D7                     u259_20:
  1443                           	line	46
  1444                           	
  1445  00D7                     i1l2226:	
  1446                           ;newmain.c: 46: c++;
  1447  00D7  3001               	movlw	low(01h)
  1448  00D8  07A4               	addwf	(_c),f
  1449  00D9  1803               	skipnc
  1450  00DA  0AA5               	incf	(_c+1),f
  1451  00DB  3000               	movlw	high(01h)
  1452  00DC  07A5               	addwf	(_c+1),f
  1453                           	line	47
  1454                           ;newmain.c: 47: if(c==2025)
  1455  00DD  3007               	movlw	high(07E9h)
  1456  00DE  0625               	xorwf	(_c+1),w
  1457  00DF  1D03               	skipz
  1458  00E0  28E3               	goto	u260_25
  1459  00E1  30E9               	movlw	low(07E9h)
  1460  00E2  0624               	xorwf	(_c),w
  1461  00E3                     u260_25:
  1462                           
  1463  00E3  1D03               	skipz
  1464  00E4  28E6               	goto	u260_21
  1465  00E5  28E7               	goto	u260_20
  1466  00E6                     u260_21:
  1467  00E6  2917               	goto	i1l758
  1468  00E7                     u260_20:
  1469                           	line	49
  1470                           	
  1471  00E7                     i1l2228:	
  1472                           ;newmain.c: 48: {
  1473                           ;newmain.c: 49: cmd(0x80);
  1474  00E7  3080               	movlw	(080h)
  1475  00E8  120A  118A  21C4   	fcall	i1_cmd
              120A  118A         
  1476                           	line	50
  1477                           	
  1478  00ED                     i1l2230:	
  1479                           ;newmain.c: 50: show("Timer 2 interupt");
  1480  00ED  3023               	movlw	((STR_3-__stringbase))&0ffh
  1481  00EE  120A  118A  2240   	fcall	_show
              120A  118A         
  1482                           	line	51
  1483                           	
  1484  00F3                     i1l2232:	
  1485                           ;newmain.c: 51: RD0 = 0;
  1486  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  1487  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  1488  00F5  1008               	bcf	(64/8),(64)&7
  1489                           	line	52
  1490                           	
  1491  00F6                     i1l2234:	
  1492                           ;newmain.c: 52: RD1 = 0;
  1493  00F6  1088               	bcf	(65/8),(65)&7
  1494                           	line	53
  1495                           	
  1496  00F7                     i1l2236:	
  1497                           ;newmain.c: 53: RD2 = 1;
  1498  00F7  1508               	bsf	(66/8),(66)&7
  1499                           	line	54
  1500                           	
  1501  00F8                     i1l2238:	
  1502                           ;newmain.c: 54: c=0;
  1503  00F8  01A4               	clrf	(_c)
  1504  00F9  01A5               	clrf	(_c+1)
  1505                           	line	55
  1506                           	
  1507  00FA                     i1l2240:	
  1508                           ;newmain.c: 55: for(z=0;z<=50000;z++);
  1509  00FA  01FB               	clrf	(_z)
  1510  00FB  01FC               	clrf	(_z+1)
  1511                           	
  1512  00FC                     i1l2242:	
  1513  00FC  30C3               	movlw	high(0C351h)
  1514  00FD  027C               	subwf	(_z+1),w
  1515  00FE  3051               	movlw	low(0C351h)
  1516  00FF  1903               	skipnz
  1517  0100  027B               	subwf	(_z),w
  1518  0101  1C03               	skipc
  1519  0102  2904               	goto	u261_21
  1520  0103  2905               	goto	u261_20
  1521  0104                     u261_21:
  1522  0104  2907               	goto	i1l2246
  1523  0105                     u261_20:
  1524  0105  2917               	goto	i1l758
  1525                           	
  1526  0106                     i1l2244:	
  1527  0106  2917               	goto	i1l758
  1528                           	
  1529  0107                     i1l759:	
  1530                           	
  1531  0107                     i1l2246:	
  1532  0107  3001               	movlw	low(01h)
  1533  0108  07FB               	addwf	(_z),f
  1534  0109  1803               	skipnc
  1535  010A  0AFC               	incf	(_z+1),f
  1536  010B  3000               	movlw	high(01h)
  1537  010C  07FC               	addwf	(_z+1),f
  1538  010D  30C3               	movlw	high(0C351h)
  1539  010E  027C               	subwf	(_z+1),w
  1540  010F  3051               	movlw	low(0C351h)
  1541  0110  1903               	skipnz
  1542  0111  027B               	subwf	(_z),w
  1543  0112  1C03               	skipc
  1544  0113  2915               	goto	u262_21
  1545  0114  2916               	goto	u262_20
  1546  0115                     u262_21:
  1547  0115  2907               	goto	i1l2246
  1548  0116                     u262_20:
  1549  0116  2917               	goto	i1l758
  1550                           	
  1551  0117                     i1l760:	
  1552                           	line	56
  1553                           	
  1554  0117                     i1l758:	
  1555                           	line	57
  1556                           ;newmain.c: 56: }
  1557                           ;newmain.c: 57: TMR2IF=0;
  1558  0117  108C               	bcf	(97/8),(97)&7
  1559  0118  291B               	goto	i1l761
  1560                           	line	58
  1561                           	
  1562  0119                     i1l757:	
  1563  0119  291B               	goto	i1l761
  1564                           	line	60
  1565                           	
  1566  011A                     i1l756:	
  1567  011A  291B               	goto	i1l761
  1568                           	
  1569  011B                     i1l751:	
  1570                           	
  1571  011B                     i1l761:	
  1572  011B  087A               	movf	(??_tmr0+3),w
  1573  011C  00FF               	movwf	btemp+1
  1574  011D  0879               	movf	(??_tmr0+2),w
  1575  011E  008A               	movwf	pclath
  1576  011F  0878               	movf	(??_tmr0+1),w
  1577  0120  0084               	movwf	fsr0
  1578  0121  0E77               	swapf	(??_tmr0+0)^0FFFFFF80h,w
  1579  0122  0083               	movwf	status
  1580  0123  0EFE               	swapf	saved_w,f
  1581  0124  0E7E               	swapf	saved_w,w
  1582  0125  0009               	retfie
  1583                           	opt stack 0
  1584                           GLOBAL	__end_of_tmr0
  1585  0126                     	__end_of_tmr0:
  1586 ;; =============== function _tmr0 ends ============
  1587                           
  1588                           	signat	_tmr0,88
  1589                           	global	_show
  1590                           psect	text275,local,class=CODE,delta=2
  1591                           global __ptext275
  1592  0240                     __ptext275:
  1593                           
  1594 ;; *************** function _show *****************
  1595 ;; Defined at:
  1596 ;;		line 114 in file "lcd4.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  s               1    wreg     PTR unsigned char 
  1599 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  s               1    6[COMMON] PTR unsigned char 
  1602 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;		None               void
  1605 ;; Registers used:
  1606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         1       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         2       0       0       0       0
  1616 ;;Total ram usage:        2 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    2
  1619 ;; This function calls:
  1620 ;;		_dat
  1621 ;; This function is called by:
  1622 ;;		_tmr0
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           psect	text275
  1626                           	file	"lcd4.h"
  1627                           	line	114
  1628                           	global	__size_of_show
  1629  0021                     	__size_of_show	equ	__end_of_show-_show
  1630                           	
  1631  0240                     _show:	
  1632                           	opt	stack 1
  1633                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1634                           ;show@s stored from wreg
  1635  0240  00F6               	movwf	(show@s)
  1636                           	line	116
  1637                           	
  1638  0241                     i1l2174:	
  1639                           ;lcd4.h: 116: while (*s) {
  1640  0241  2A53               	goto	i1l2180
  1641                           	
  1642  0242                     i1l707:	
  1643                           	line	118
  1644                           	
  1645  0242                     i1l2176:	
  1646                           ;lcd4.h: 118: dat(*s++);
  1647  0242  0876               	movf	(show@s),w
  1648  0243  0084               	movwf	fsr0
  1649  0244  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1650  0249  120A  118A  2202   	fcall	_dat
              120A  118A         
  1651                           	
  1652  024E                     i1l2178:	
  1653  024E  3001               	movlw	(01h)
  1654  024F  00F5               	movwf	(??_show+0)+0
  1655  0250  0875               	movf	(??_show+0)+0,w
  1656  0251  07F6               	addwf	(show@s),f
  1657  0252  2A53               	goto	i1l2180
  1658                           	line	120
  1659                           	
  1660  0253                     i1l706:	
  1661                           	line	116
  1662                           	
  1663  0253                     i1l2180:	
  1664  0253  0876               	movf	(show@s),w
  1665  0254  0084               	movwf	fsr0
  1666  0255  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1667  025A  3800               	iorlw	0
  1668  025B  1D03               	skipz
  1669  025C  2A5E               	goto	u250_21
  1670  025D  2A5F               	goto	u250_20
  1671  025E                     u250_21:
  1672  025E  2A42               	goto	i1l2176
  1673  025F                     u250_20:
  1674  025F  2A60               	goto	i1l709
  1675                           	
  1676  0260                     i1l708:	
  1677                           	line	122
  1678                           	
  1679  0260                     i1l709:	
  1680  0260  0008               	return
  1681                           	opt stack 0
  1682                           GLOBAL	__end_of_show
  1683  0261                     	__end_of_show:
  1684 ;; =============== function _show ends ============
  1685                           
  1686                           	signat	_show,4216
  1687                           	global	i1_cmd
  1688                           psect	text276,local,class=CODE,delta=2
  1689                           global __ptext276
  1690  01C4                     __ptext276:
  1691                           
  1692 ;; *************** function i1_cmd *****************
  1693 ;; Defined at:
  1694 ;;		line 53 in file "lcd4.h"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  cmd             1    wreg     unsigned char 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  cmd             1    4[COMMON] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;		None               void
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, pclath, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         0       0       0       0       0
  1709 ;;      Locals:         1       0       0       0       0
  1710 ;;      Temps:          2       0       0       0       0
  1711 ;;      Totals:         3       0       0       0       0
  1712 ;;Total ram usage:        3 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    1
  1715 ;; This function calls:
  1716 ;;		i1_lcd_delay
  1717 ;; This function is called by:
  1718 ;;		_tmr0
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           psect	text276
  1722                           	file	"lcd4.h"
  1723                           	line	53
  1724                           	global	__size_ofi1_cmd
  1725  003E                     	__size_ofi1_cmd	equ	__end_ofi1_cmd-i1_cmd
  1726                           	
  1727  01C4                     i1_cmd:	
  1728                           	opt	stack 2
  1729                           ; Regs used in i1_cmd: [wreg+status,2+status,0+pclath+cstack]
  1730                           ;i1cmd@a stored from wreg
  1731                           	line	55
  1732  01C4  00F4               	movwf	(i1cmd@a)
  1733                           	
  1734  01C5                     i1l2252:	
  1735                           ;lcd4.h: 55: RC0 = 0;
  1736  01C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1737  01C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1738  01C7  1007               	bcf	(56/8),(56)&7
  1739                           	line	57
  1740                           	
  1741  01C8                     i1l2254:	
  1742                           ;lcd4.h: 57: PORTB &= 0x0F;
  1743  01C8  300F               	movlw	(0Fh)
  1744  01C9  00F2               	movwf	(??i1_cmd+0)+0
  1745  01CA  0872               	movf	(??i1_cmd+0)+0,w
  1746  01CB  0586               	andwf	(6),f	;volatile
  1747                           	line	59
  1748                           ;lcd4.h: 59: PORTB |= (a & 0xf0);
  1749  01CC  0874               	movf	(i1cmd@a),w
  1750  01CD  39F0               	andlw	0F0h
  1751  01CE  00F2               	movwf	(??i1_cmd+0)+0
  1752  01CF  0872               	movf	(??i1_cmd+0)+0,w
  1753  01D0  0486               	iorwf	(6),f	;volatile
  1754                           	line	61
  1755                           	
  1756  01D1                     i1l2256:	
  1757                           ;lcd4.h: 61: RC1 = 1;
  1758  01D1  1487               	bsf	(57/8),(57)&7
  1759                           	line	63
  1760                           	
  1761  01D2                     i1l2258:	
  1762                           ;lcd4.h: 63: lcd_delay();
  1763  01D2  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1764                           	line	65
  1765                           	
  1766  01D7                     i1l2260:	
  1767                           ;lcd4.h: 65: RC1 = 0;
  1768  01D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1769  01D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1770  01D9  1087               	bcf	(57/8),(57)&7
  1771                           	line	66
  1772                           	
  1773  01DA                     i1l2262:	
  1774                           ;lcd4.h: 66: lcd_delay();
  1775  01DA  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1776                           	line	68
  1777                           ;lcd4.h: 68: PORTB &= 0x0f;
  1778  01DF  300F               	movlw	(0Fh)
  1779  01E0  00F2               	movwf	(??i1_cmd+0)+0
  1780  01E1  0872               	movf	(??i1_cmd+0)+0,w
  1781  01E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1782  01E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1783  01E4  0586               	andwf	(6),f	;volatile
  1784                           	line	70
  1785                           ;lcd4.h: 70: PORTB |= (a << 4 & 0xf0);
  1786  01E5  0874               	movf	(i1cmd@a),w
  1787  01E6  00F2               	movwf	(??i1_cmd+0)+0
  1788  01E7  3003               	movlw	(04h)-1
  1789  01E8                     u263_25:
  1790  01E8  1003               	clrc
  1791  01E9  0DF2               	rlf	(??i1_cmd+0)+0,f
  1792  01EA  3EFF               	addlw	-1
  1793  01EB  1D03               	skipz
  1794  01EC  29E8               	goto	u263_25
  1795  01ED  1003               	clrc
  1796  01EE  0D72               	rlf	(??i1_cmd+0)+0,w
  1797  01EF  39F0               	andlw	0F0h
  1798  01F0  00F3               	movwf	(??i1_cmd+1)+0
  1799  01F1  0873               	movf	(??i1_cmd+1)+0,w
  1800  01F2  0486               	iorwf	(6),f	;volatile
  1801                           	line	72
  1802                           	
  1803  01F3                     i1l2264:	
  1804                           ;lcd4.h: 72: RC1 = 1;
  1805  01F3  1487               	bsf	(57/8),(57)&7
  1806                           	line	74
  1807                           	
  1808  01F4                     i1l2266:	
  1809                           ;lcd4.h: 74: lcd_delay();
  1810  01F4  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1811                           	line	76
  1812                           	
  1813  01F9                     i1l2268:	
  1814                           ;lcd4.h: 76: RC1 = 0;
  1815  01F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1816  01FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1817  01FB  1087               	bcf	(57/8),(57)&7
  1818                           	line	78
  1819                           	
  1820  01FC                     i1l2270:	
  1821                           ;lcd4.h: 78: lcd_delay();
  1822  01FC  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1823                           	line	80
  1824                           	
  1825  0201                     i1l700:	
  1826  0201  0008               	return
  1827                           	opt stack 0
  1828                           GLOBAL	__end_ofi1_cmd
  1829  0202                     	__end_ofi1_cmd:
  1830 ;; =============== function i1_cmd ends ============
  1831                           
  1832                           	signat	i1_cmd,88
  1833                           	global	_dat
  1834                           psect	text277,local,class=CODE,delta=2
  1835                           global __ptext277
  1836  0202                     __ptext277:
  1837                           
  1838 ;; *************** function _dat *****************
  1839 ;; Defined at:
  1840 ;;		line 83 in file "lcd4.h"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  b               1    wreg     unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  b               1    4[COMMON] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0
  1856 ;;      Temps:          2       0       0       0       0
  1857 ;;      Totals:         3       0       0       0       0
  1858 ;;Total ram usage:        3 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		i1_lcd_delay
  1863 ;; This function is called by:
  1864 ;;		_show
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           psect	text277
  1868                           	file	"lcd4.h"
  1869                           	line	83
  1870                           	global	__size_of_dat
  1871  003E                     	__size_of_dat	equ	__end_of_dat-_dat
  1872                           	
  1873  0202                     _dat:	
  1874                           	opt	stack 1
  1875                           ; Regs used in _dat: [wreg+status,2+status,0+pclath+cstack]
  1876                           ;dat@b stored from wreg
  1877                           	line	85
  1878  0202  00F4               	movwf	(dat@b)
  1879                           	
  1880  0203                     i1l2154:	
  1881                           ;lcd4.h: 85: RC0 = 1;
  1882  0203  1283               	bcf	status, 5	;RP0=0, select bank0
  1883  0204  1303               	bcf	status, 6	;RP1=0, select bank0
  1884  0205  1407               	bsf	(56/8),(56)&7
  1885                           	line	87
  1886                           	
  1887  0206                     i1l2156:	
  1888                           ;lcd4.h: 87: PORTB &= 0x0F;
  1889  0206  300F               	movlw	(0Fh)
  1890  0207  00F2               	movwf	(??_dat+0)+0
  1891  0208  0872               	movf	(??_dat+0)+0,w
  1892  0209  0586               	andwf	(6),f	;volatile
  1893                           	line	89
  1894                           ;lcd4.h: 89: PORTB |= (b & 0xf0);
  1895  020A  0874               	movf	(dat@b),w
  1896  020B  39F0               	andlw	0F0h
  1897  020C  00F2               	movwf	(??_dat+0)+0
  1898  020D  0872               	movf	(??_dat+0)+0,w
  1899  020E  0486               	iorwf	(6),f	;volatile
  1900                           	line	91
  1901                           	
  1902  020F                     i1l2158:	
  1903                           ;lcd4.h: 91: RC1 = 1;
  1904  020F  1487               	bsf	(57/8),(57)&7
  1905                           	line	93
  1906                           	
  1907  0210                     i1l2160:	
  1908                           ;lcd4.h: 93: lcd_delay();
  1909  0210  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1910                           	line	95
  1911                           	
  1912  0215                     i1l2162:	
  1913                           ;lcd4.h: 95: RC1 = 0;
  1914  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  1915  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  1916  0217  1087               	bcf	(57/8),(57)&7
  1917                           	line	97
  1918                           	
  1919  0218                     i1l2164:	
  1920                           ;lcd4.h: 97: lcd_delay();
  1921  0218  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1922                           	line	99
  1923                           ;lcd4.h: 99: PORTB &= 0x0f;
  1924  021D  300F               	movlw	(0Fh)
  1925  021E  00F2               	movwf	(??_dat+0)+0
  1926  021F  0872               	movf	(??_dat+0)+0,w
  1927  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  1928  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  1929  0222  0586               	andwf	(6),f	;volatile
  1930                           	line	101
  1931                           ;lcd4.h: 101: PORTB |= (b << 4 & 0xf0);
  1932  0223  0874               	movf	(dat@b),w
  1933  0224  00F2               	movwf	(??_dat+0)+0
  1934  0225  3003               	movlw	(04h)-1
  1935  0226                     u249_25:
  1936  0226  1003               	clrc
  1937  0227  0DF2               	rlf	(??_dat+0)+0,f
  1938  0228  3EFF               	addlw	-1
  1939  0229  1D03               	skipz
  1940  022A  2A26               	goto	u249_25
  1941  022B  1003               	clrc
  1942  022C  0D72               	rlf	(??_dat+0)+0,w
  1943  022D  39F0               	andlw	0F0h
  1944  022E  00F3               	movwf	(??_dat+1)+0
  1945  022F  0873               	movf	(??_dat+1)+0,w
  1946  0230  0486               	iorwf	(6),f	;volatile
  1947                           	line	103
  1948                           	
  1949  0231                     i1l2166:	
  1950                           ;lcd4.h: 103: RC1 = 1;
  1951  0231  1487               	bsf	(57/8),(57)&7
  1952                           	line	105
  1953                           	
  1954  0232                     i1l2168:	
  1955                           ;lcd4.h: 105: lcd_delay();
  1956  0232  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1957                           	line	107
  1958                           	
  1959  0237                     i1l2170:	
  1960                           ;lcd4.h: 107: RC1 = 0;
  1961  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  1962  0238  1303               	bcf	status, 6	;RP1=0, select bank0
  1963  0239  1087               	bcf	(57/8),(57)&7
  1964                           	line	109
  1965                           	
  1966  023A                     i1l2172:	
  1967                           ;lcd4.h: 109: lcd_delay();
  1968  023A  120A  118A  22A0   	fcall	i1_lcd_delay
              120A  118A         
  1969                           	line	111
  1970                           	
  1971  023F                     i1l703:	
  1972  023F  0008               	return
  1973                           	opt stack 0
  1974                           GLOBAL	__end_of_dat
  1975  0240                     	__end_of_dat:
  1976 ;; =============== function _dat ends ============
  1977                           
  1978                           	signat	_dat,4216
  1979                           	global	i1_lcd_delay
  1980                           psect	text278,local,class=CODE,delta=2
  1981                           global __ptext278
  1982  02A0                     __ptext278:
  1983                           
  1984 ;; *************** function i1_lcd_delay *****************
  1985 ;; Defined at:
  1986 ;;		line 125 in file "lcd4.h"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  lcd_delay       2    0[COMMON] unsigned int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;		None               void
  1993 ;; Registers used:
  1994 ;;		wreg, status,2
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       0       0       0       0
  2001 ;;      Locals:         2       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0
  2003 ;;      Totals:         2       0       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_dat
  2010 ;;		i1_cmd
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           psect	text278
  2014                           	file	"lcd4.h"
  2015                           	line	125
  2016                           	global	__size_ofi1_lcd_delay
  2017  001E                     	__size_ofi1_lcd_delay	equ	__end_ofi1_lcd_delay-i1_lcd_delay
  2018                           	
  2019  02A0                     i1_lcd_delay:	
  2020                           	opt	stack 1
  2021                           ; Regs used in i1_lcd_delay: [wreg+status,2]
  2022                           	line	129
  2023                           	
  2024  02A0                     i1l2272:	
  2025                           ;lcd4.h: 127: unsigned int lcd_delay;
  2026                           ;lcd4.h: 129: for (lcd_delay = 0; lcd_delay <= 1000; lcd_delay++);
  2027  02A0  01F0               	clrf	(i1lcd_delay@lcd_delay)
  2028  02A1  01F1               	clrf	(i1lcd_delay@lcd_delay+1)
  2029                           	
  2030  02A2                     i1l2274:	
  2031  02A2  3003               	movlw	high(03E9h)
  2032  02A3  0271               	subwf	(i1lcd_delay@lcd_delay+1),w
  2033  02A4  30E9               	movlw	low(03E9h)
  2034  02A5  1903               	skipnz
  2035  02A6  0270               	subwf	(i1lcd_delay@lcd_delay),w
  2036  02A7  1C03               	skipc
  2037  02A8  2AAA               	goto	u264_21
  2038  02A9  2AAB               	goto	u264_20
  2039  02AA                     u264_21:
  2040  02AA  2AAD               	goto	i1l2278
  2041  02AB                     u264_20:
  2042  02AB  2ABD               	goto	i1l714
  2043                           	
  2044  02AC                     i1l2276:	
  2045  02AC  2ABD               	goto	i1l714
  2046                           	
  2047  02AD                     i1l712:	
  2048                           	
  2049  02AD                     i1l2278:	
  2050  02AD  3001               	movlw	low(01h)
  2051  02AE  07F0               	addwf	(i1lcd_delay@lcd_delay),f
  2052  02AF  1803               	skipnc
  2053  02B0  0AF1               	incf	(i1lcd_delay@lcd_delay+1),f
  2054  02B1  3000               	movlw	high(01h)
  2055  02B2  07F1               	addwf	(i1lcd_delay@lcd_delay+1),f
  2056  02B3  3003               	movlw	high(03E9h)
  2057  02B4  0271               	subwf	(i1lcd_delay@lcd_delay+1),w
  2058  02B5  30E9               	movlw	low(03E9h)
  2059  02B6  1903               	skipnz
  2060  02B7  0270               	subwf	(i1lcd_delay@lcd_delay),w
  2061  02B8  1C03               	skipc
  2062  02B9  2ABB               	goto	u265_21
  2063  02BA  2ABC               	goto	u265_20
  2064  02BB                     u265_21:
  2065  02BB  2AAD               	goto	i1l2278
  2066  02BC                     u265_20:
  2067  02BC  2ABD               	goto	i1l714
  2068                           	
  2069  02BD                     i1l713:	
  2070                           	line	131
  2071                           	
  2072  02BD                     i1l714:	
  2073  02BD  0008               	return
  2074                           	opt stack 0
  2075                           GLOBAL	__end_ofi1_lcd_delay
  2076  02BE                     	__end_ofi1_lcd_delay:
  2077 ;; =============== function i1_lcd_delay ends ============
  2078                           
  2079                           	signat	i1_lcd_delay,88
  2080                           psect	text279,local,class=CODE,delta=2
  2081                           global __ptext279
  2082  0000                     __ptext279:
  2083                           	global	btemp
  2084  007E                     	btemp set 07Eh
  2085                           
  2086                           	DABS	1,126,2	;btemp
  2087                           	global	wtemp0
  2088  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed Nov 25 17:05:08 2020

                   _a 0020                     _b 0022                     _c 0024                     _z 007B  
                   pc 0002                    fsr 0004                   l700 01C3                   l712 0270  
                 l713 0280                   l714 0280                   l770 0141                   l771 014E  
                 l764 02DB                   l772 015E                   l773 0171                   l774 0181  
                 l767 02D4                   l775 0182                   l776 0183                   l697 029F  
                 l777 0183                   _RC0 0038                   _RC1 0039                   _RD0 0040  
                 _RD1 0041                   _RD2 0042                   _dat 0202                   _cmd 0186  
                 fsr0 0004                  l2300 0281                  l2150 026F                  l2310 014D  
                l2302 0126                  ?_dat 0070                  l2152 0270                  l2320 0170  
                l2312 014E                  l2304 0131                  l2146 0261                  l2250 02CA  
                l2322 0171                  l2314 015E                  l2306 0141                  ?_cmd 0070  
                l2148 0265                  l2316 0164                  l2308 0143                  l2318 0166  
                l2248 02D5                  l2280 0189                  l2290 019C                  l2282 018A  
                l2292 01B5                  l2284 0193                  l2294 01B6                  l2286 0194  
                l2296 01BB                  l2288 0199                  l2298 01BE                  STR_1 001B  
                STR_2 002C                  STR_3 003D                  u2700 0180                  u2701 017F  
                u2470 026E                  u2471 026D                  _PIE1 008C                  u2480 027F  
                u2481 027E                  u2670 014C                  u2671 014B                  u2680 015D  
                u2665 01AA                  u2681 015C                  u2690 016F                  u2691 016E  
                dat@b 0074                  cmd@a 002A                  _main 0126                  _tmr0 004E  
                _show 0240                  btemp 007E                  start 0012           i1_lcd_delay 02A0  
               ??_dat 0072                 ??_cmd 0028                 ?_main 0070                 ?_tmr0 0070  
               ?_show 0070                 _T1CON 0010                 _T2CON 0012                 i1l700 0201  
               i1l703 023F                 i1l712 02AD                 i1l713 02BD                 i1l714 02BD  
               i1l706 0253                 i1l707 0242                 i1l708 0260                 i1l709 0260  
               i1l750 008F                 i1l751 011B                 i1l760 0117                 i1l752 00D3  
               i1l753 00D1                 i1l761 011B                 i1l754 00C1                 i1l755 00D1  
               i1l747 0091                 i1l756 011A                 i1l748 008F                 i1l757 0119  
               i1l749 007F                 i1l758 0117                 i1l759 0107                 _TMR1H 000F  
               _TMR1L 000E                 _PORTB 0006                 i1_cmd 01C4                 pclath 000A  
               show@s 0076                 status 0003                 wtemp0 007E          __end_of_main 0186  
        __end_of_tmr0 0126          __end_of_show 0261    lcd_delay@lcd_delay 0026                ??_main 002B  
              ??_tmr0 0077                ??_show 0075                ?i1_cmd 0070                i1l2200 0074  
              i1l2210 00A8                i1l2202 007E                i1l2220 00B6                i1l2212 00AE  
              i1l2204 007F                i1l2230 00ED                i1l2222 00C0                i1l2214 00B1  
              i1l2206 0095                i1l2160 0210                i1l2240 00FA                i1l2232 00F3  
              i1l2224 00C1                i1l2216 00B2                i1l2208 00A2                i1l2170 0237  
              i1l2162 0215                i1l2154 0203                i1l2242 00FC                i1l2234 00F6  
              i1l2226 00D7                i1l2218 00B4                i1l2172 023A                i1l2164 0218  
              i1l2156 0206                i1l2260 01D7                i1l2252 01C5                i1l2180 0253  
              i1l2244 0106                i1l2236 00F7                i1l2228 00E7                i1l2166 0231  
              i1l2158 020F                i1l2270 01FC                i1l2262 01DA                i1l2254 01C8  
              i1l2174 0241                i1l2246 0107                i1l2238 00F8                i1l2190 006B  
              i1l2182 004E                i1l2272 02A0                i1l2168 0232                i1l2264 01F3  
              i1l2256 01D1                i1l2176 0242                i1l2192 006E                i1l2184 0052  
              i1l2274 02A2                i1l2266 01F4                i1l2258 01D2                i1l2178 024E  
              i1l2194 006F                i1l2186 005F                i1l2276 02AC                i1l2268 01F9  
              i1l2196 0070                i1l2188 0065                i1l2278 02AD                i1l2198 0072  
              _INTCON 000B                u250_20 025F                u250_21 025E                u251_20 0052  
              u251_21 0051                u260_20 00E7                u252_20 005F                u260_21 00E6  
              u252_21 005E                u260_25 00E3                u261_20 0105                u253_20 007D  
              u261_21 0104                u253_21 007C                u262_20 0116                u254_20 008E  
              u262_21 0115                u254_21 008D                u255_20 0095                u255_21 0094  
              u263_25 01E8                u264_20 02AB                u256_20 00A2                u264_21 02AA  
              u256_21 00A1                u265_20 02BC                u257_20 00BF                u265_21 02BB  
              u257_21 00BE                u249_25 0226                u258_20 00D0                u258_21 00CF  
              u259_20 00D7                u259_21 00D6                _TMR0IF 005A                _TMR1IF 0060  
              _TMR2IF 0061                _TRISC0 0438                _TRISC1 0439                _TRISD0 0440  
              _TRISB4 0434                _TRISD1 0441                _TRISB5 0435                _TRISD2 0442  
              _TRISB6 0436                _TRISB7 0437                i1cmd@a 0074      __end_of_lcd_init 02A0  
              saved_w 007E         __end_ofi1_cmd 0202        __pcstackCOMMON 0070               ??i1_cmd 0072  
  __size_of_lcd_delay 0020            __pbssBANK0 0020          ?i1_lcd_delay 0070            __pmaintext 0126  
  __size_of_intr_init 0007            __pintentry 0004             ?_lcd_init 0070     __end_of_lcd_delay 0281  
        __size_of_dat 003E          __size_of_cmd 003E     __end_of_intr_init 02DC            ??_lcd_init 002B  
end_of_initialization 02C6            _timer_init 02CA  __size_ofi1_lcd_delay 001E   start_initialization 02BE  
         __end_of_dat 0240           __end_of_cmd 01C4           ?_timer_init 0070           __pbssCOMMON 007B  
       __pcstackBANK0 0026     __size_of_lcd_init 001F             __ptext270 0186             __ptext271 02CA  
           __ptext272 02D5             __ptext273 0261             __ptext274 004E             __ptext275 0240  
           __ptext276 01C4             __ptext268 0000             __ptext277 0202             __ptext269 0281  
           __ptext278 02A0             __ptext279 0000             _lcd_delay 0261             __pstrings 0015  
      __size_ofi1_cmd 003E             _intr_init 02D5     interrupt_function 0004   __size_of_timer_init 000B  
          ?_lcd_delay 0070           __stringbase 001A            ?_intr_init 0070              _lcd_init 0281  
       __size_of_main 0060         __size_of_tmr0 00D8         __size_of_show 0021         ??i1_lcd_delay 0070  
i1lcd_delay@lcd_delay 0070           ??_lcd_delay 0026          ??_timer_init 0026              intlevel1 0000  
         ??_intr_init 0026    __end_of_timer_init 02D5             stringcode 0015   __end_ofi1_lcd_delay 02BE  
          _OPTION_REG 0081              stringdir 0015              stringtab 0015  
