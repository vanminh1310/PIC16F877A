

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 07 22:04:17 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75                           
    76                           	psect	strings
    77  0003                     __pstrings:	
    78  0003                     stringtab:	
    79  0003                     __stringtab:	
    80  0003                     stringcode:	
    81                           ;	String table - string pointers are 1 byte each
    82                           
    83  0003                     stringdir:	
    84  0003  3000               	movlw	high stringdir
    85  0004  008A               	movwf	10
    86  0005  0804               	movf	4,w
    87  0006  0A84               	incf	4,f
    88  0007  0782               	addwf	2,f
    89  0008                     __stringbase:	
    90  0008  3400               	retlw	0
    91  0009                     __end_of__stringtab:	
    92  0009                     _maled:	
    93  0009  343F               	retlw	63
    94  000A  3406               	retlw	6
    95  000B  345B               	retlw	91
    96  000C  344F               	retlw	79
    97  000D  3466               	retlw	102
    98  000E  346D               	retlw	109
    99  000F  347D               	retlw	125
   100  0010  3407               	retlw	7
   101  0011  347F               	retlw	127
   102  0012  346F               	retlw	111
   103  0013                     __end_of_maled:	
   104                           
   105                           	psect	nvBANK0
   106  0020                     __pnvBANK0:	
   107  0020                     _chuc:	
   108  0020                     	ds	2
   109  0022                     _donvi:	
   110  0022                     	ds	2
   111  0024                     _nghin:	
   112  0024                     	ds	2
   113  0026                     _tram:	
   114  0026                     	ds	2
   115  000E                     _TMR1	set	14
   116  0006                     _PORTB	set	6
   117  0008                     _PORTD	set	8
   118  0010                     _T1CONbits	set	16
   119  0040                     _RD0	set	64
   120  0041                     _RD1	set	65
   121  0042                     _RD2	set	66
   122  0043                     _RD3	set	67
   123  0086                     _TRISB	set	134
   124  0088                     _TRISDbits	set	136
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  07FA                     start_initialization:	
   130  07FA                     __initialization:	
   131                           
   132                           ; Clear objects allocated to BANK0
   133  07FA  01AE               	clrf	__pbssBANK0& (0+127)
   134  07FB  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   135  07FC                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  07FC                     __end_of__initialization:	
   139  07FC  0183               	clrf	3
   140  07FD  120A  118A  2E64   	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssBANK0
   143  002E                     __pbssBANK0:	
   144  002E                     _dem:	
   145  002E                     	ds	2
   146                           
   147                           	psect	cstackCOMMON
   148  0070                     __pcstackCOMMON:	
   149  0070                     ?_display:	
   150  0070                     ?_main:	
   151                           ; 0 bytes @ 0x0
   152                           
   153  0070                     ?___wmul:	
   154                           ; 0 bytes @ 0x0
   155                           
   156  0070                     ___wmul@multiplier:	
   157                           ; 2 bytes @ 0x0
   158                           
   159                           
   160                           ; 2 bytes @ 0x0
   161  0070                     	ds	2
   162  0072                     ___wmul@multiplicand:	
   163                           
   164                           ; 2 bytes @ 0x2
   165  0072                     	ds	2
   166  0074                     ??___wmul:	
   167  0074                     ___wmul@product:	
   168                           ; 0 bytes @ 0x4
   169                           
   170                           
   171                           ; 2 bytes @ 0x4
   172  0074                     	ds	2
   173  0076                     ?___lwdiv:	
   174  0076                     ___lwdiv@divisor:	
   175                           ; 2 bytes @ 0x6
   176                           
   177                           
   178                           ; 2 bytes @ 0x6
   179  0076                     	ds	2
   180  0078                     ___lwdiv@dividend:	
   181                           
   182                           ; 2 bytes @ 0x8
   183  0078                     	ds	2
   184  007A                     ??___lwdiv:	
   185                           
   186                           ; 0 bytes @ 0xA
   187  007A                     	ds	1
   188  007B                     ___lwdiv@quotient:	
   189                           
   190                           ; 2 bytes @ 0xB
   191  007B                     	ds	2
   192  007D                     ___lwdiv@counter:	
   193                           
   194                           ; 1 bytes @ 0xD
   195  007D                     	ds	1
   196  007E                     ??_main:	
   197                           
   198                           	psect	cstackBANK0
   199  0028                     __pcstackBANK0:	
   200                           ; 0 bytes @ 0xE
   201                           
   202  0028                     ??_display:	
   203                           
   204                           ; 0 bytes @ 0x0
   205  0028                     	ds	6
   206                           
   207                           	psect	maintext
   208  0664                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 24 in file "Counter_T1.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;		None               void
   221 ;; Registers used:
   222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels required when called:    2
   234 ;; This function calls:
   235 ;;		_display
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           
   242                           ;psect for function _main
   243  0664                     _main:	
   244                           
   245                           ;Counter_T1.c: 26: T1CONbits.TMR1CS = 1;
   246                           
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   249  0664  1283               	bcf	3,5	;RP0=0, select bank0
   250  0665  1303               	bcf	3,6	;RP1=0, select bank0
   251  0666  1490               	bsf	16,1	;volatile
   252                           
   253                           ;Counter_T1.c: 27: T1CONbits.T1SYNC = 0;
   254  0667  1110               	bcf	16,2	;volatile
   255                           
   256                           ;Counter_T1.c: 28: T1CONbits.TMR1ON = 1;
   257  0668  1410               	bsf	16,0	;volatile
   258                           
   259                           ;Counter_T1.c: 29: TRISB = 0;
   260  0669  1683               	bsf	3,5	;RP0=1, select bank1
   261  066A  1303               	bcf	3,6	;RP1=0, select bank1
   262  066B  0186               	clrf	6	;volatile
   263                           
   264                           ;Counter_T1.c: 30: PORTB = 0;
   265  066C  1283               	bcf	3,5	;RP0=0, select bank0
   266  066D  1303               	bcf	3,6	;RP1=0, select bank0
   267  066E  0186               	clrf	6	;volatile
   268                           
   269                           ;Counter_T1.c: 31: TRISDbits.TRISD0 = 0;
   270  066F  1683               	bsf	3,5	;RP0=1, select bank1
   271  0670  1303               	bcf	3,6	;RP1=0, select bank1
   272  0671  1008               	bcf	8,0	;volatile
   273                           
   274                           ;Counter_T1.c: 32: TRISDbits.TRISD1 = 0;
   275  0672  1088               	bcf	8,1	;volatile
   276                           
   277                           ;Counter_T1.c: 33: TRISDbits.TRISD2 = 0;
   278  0673  1108               	bcf	8,2	;volatile
   279                           
   280                           ;Counter_T1.c: 34: TRISDbits.TRISD3 = 0;
   281  0674  1188               	bcf	8,3	;volatile
   282                           
   283                           ;Counter_T1.c: 35: PORTD = 0;
   284  0675  1283               	bcf	3,5	;RP0=0, select bank0
   285  0676  1303               	bcf	3,6	;RP1=0, select bank0
   286  0677  0188               	clrf	8	;volatile
   287  0678                     l686:	
   288                           ;Counter_T1.c: 36: while (1)
   289                           
   290                           
   291                           ;Counter_T1.c: 37: {
   292                           ;Counter_T1.c: 38: display();
   293  0678  120A  118A  26CB  120A  118A  	fcall	_display
   294                           
   295                           ;Counter_T1.c: 39: dem=TMR1;
   296  067D  1283               	bcf	3,5	;RP0=0, select bank0
   297  067E  1303               	bcf	3,6	;RP1=0, select bank0
   298  067F  080F               	movf	15,w	;volatile
   299  0680  00AF               	movwf	_dem+1
   300  0681  080E               	movf	14,w	;volatile
   301  0682  00AE               	movwf	_dem
   302                           
   303                           ;Counter_T1.c: 40: if(dem>=1500)
   304  0683  3005               	movlw	5
   305  0684  022F               	subwf	_dem+1,w
   306  0685  30DC               	movlw	220
   307  0686  1903               	skipnz
   308  0687  022E               	subwf	_dem,w
   309  0688  1C03               	skipc
   310  0689  2E78               	goto	l686
   311                           
   312                           ;Counter_T1.c: 41: {
   313                           ;Counter_T1.c: 42: TMR1=0;
   314  068A  018E               	clrf	14	;volatile
   315  068B  018F               	clrf	15	;volatile
   316                           
   317                           ;Counter_T1.c: 43: dem=0;
   318  068C  01AE               	clrf	_dem
   319  068D  01AF               	clrf	_dem+1
   320  068E  2E78               	goto	l686
   321  068F                     __end_of_main:	
   322                           
   323                           	psect	text1
   324  06CB                     __ptext1:	
   325 ;; *************** function _display *****************
   326 ;; Defined at:
   327 ;;		line 47 in file "Counter_T1.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;		None               void
   334 ;; Registers used:
   335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   341 ;;      Params:         0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0
   343 ;;      Temps:          0       6       0       0       0
   344 ;;      Totals:         0       6       0       0       0
   345 ;;Total ram usage:        6 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    1
   348 ;; This function calls:
   349 ;;		___lwdiv
   350 ;;		___wmul
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _display
   358  06CB                     _display:	
   359                           
   360                           ;Counter_T1.c: 49: nghin = dem/1000;
   361                           
   362                           ;incstack = 0
   363                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   364  06CB  30E8               	movlw	232
   365  06CC  00F6               	movwf	___lwdiv@divisor
   366  06CD  3003               	movlw	3
   367  06CE  00F7               	movwf	___lwdiv@divisor+1
   368  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   369  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   370  06D1  082F               	movf	_dem+1,w
   371  06D2  00F9               	movwf	___lwdiv@dividend+1
   372  06D3  082E               	movf	_dem,w
   373  06D4  00F8               	movwf	___lwdiv@dividend
   374  06D5  120A  118A  268F  120A  118A  	fcall	___lwdiv
   375  06DA  0877               	movf	?___lwdiv+1,w
   376  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   377  06DC  1303               	bcf	3,6	;RP1=0, select bank0
   378  06DD  00A5               	movwf	_nghin+1
   379  06DE  0876               	movf	?___lwdiv,w
   380  06DF  00A4               	movwf	_nghin
   381                           
   382                           ;Counter_T1.c: 50: tram = (dem - nghin*1000)/100;
   383  06E0  3064               	movlw	100
   384  06E1  00F6               	movwf	___lwdiv@divisor
   385  06E2  3000               	movlw	0
   386  06E3  00F7               	movwf	___lwdiv@divisor+1
   387  06E4  0825               	movf	_nghin+1,w
   388  06E5  00F1               	movwf	___wmul@multiplier+1
   389  06E6  0824               	movf	_nghin,w
   390  06E7  00F0               	movwf	___wmul@multiplier
   391  06E8  30E8               	movlw	232
   392  06E9  00F2               	movwf	___wmul@multiplicand
   393  06EA  3003               	movlw	3
   394  06EB  00F3               	movwf	___wmul@multiplicand+1
   395  06EC  120A  118A  2643  120A  118A  	fcall	___wmul
   396  06F1  0970               	comf	?___wmul,w
   397  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   398  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   399  06F4  00A8               	movwf	??_display
   400  06F5  0971               	comf	?___wmul+1,w
   401  06F6  00A9               	movwf	??_display+1
   402  06F7  0AA8               	incf	??_display,f
   403  06F8  1903               	skipnz
   404  06F9  0AA9               	incf	??_display+1,f
   405  06FA  082E               	movf	_dem,w
   406  06FB  0728               	addwf	??_display,w
   407  06FC  00F8               	movwf	___lwdiv@dividend
   408  06FD  082F               	movf	_dem+1,w
   409  06FE  1803               	skipnc
   410  06FF  0A2F               	incf	_dem+1,w
   411  0700  0729               	addwf	??_display+1,w
   412  0701  00F9               	movwf	___lwdiv@dividend+1
   413  0702  120A  118A  268F  120A  118A  	fcall	___lwdiv
   414  0707  0877               	movf	?___lwdiv+1,w
   415  0708  1283               	bcf	3,5	;RP0=0, select bank0
   416  0709  1303               	bcf	3,6	;RP1=0, select bank0
   417  070A  00A7               	movwf	_tram+1
   418  070B  0876               	movf	?___lwdiv,w
   419  070C  00A6               	movwf	_tram
   420                           
   421                           ;Counter_T1.c: 51: chuc = (dem - nghin*1000 - tram*100)/10;
   422  070D  300A               	movlw	10
   423  070E  00F6               	movwf	___lwdiv@divisor
   424  070F  3000               	movlw	0
   425  0710  00F7               	movwf	___lwdiv@divisor+1
   426  0711  0825               	movf	_nghin+1,w
   427  0712  00F1               	movwf	___wmul@multiplier+1
   428  0713  0824               	movf	_nghin,w
   429  0714  00F0               	movwf	___wmul@multiplier
   430  0715  30E8               	movlw	232
   431  0716  00F2               	movwf	___wmul@multiplicand
   432  0717  3003               	movlw	3
   433  0718  00F3               	movwf	___wmul@multiplicand+1
   434  0719  120A  118A  2643  120A  118A  	fcall	___wmul
   435  071E  0870               	movf	?___wmul,w
   436  071F  1283               	bcf	3,5	;RP0=0, select bank0
   437  0720  1303               	bcf	3,6	;RP1=0, select bank0
   438  0721  00A8               	movwf	??_display
   439  0722  0871               	movf	?___wmul+1,w
   440  0723  00A9               	movwf	??_display+1
   441  0724  0827               	movf	_tram+1,w
   442  0725  00F1               	movwf	___wmul@multiplier+1
   443  0726  0826               	movf	_tram,w
   444  0727  00F0               	movwf	___wmul@multiplier
   445  0728  3064               	movlw	100
   446  0729  00F2               	movwf	___wmul@multiplicand
   447  072A  3000               	movlw	0
   448  072B  00F3               	movwf	___wmul@multiplicand+1
   449  072C  120A  118A  2643  120A  118A  	fcall	___wmul
   450  0731  0870               	movf	?___wmul,w
   451  0732  1283               	bcf	3,5	;RP0=0, select bank0
   452  0733  1303               	bcf	3,6	;RP1=0, select bank0
   453  0734  0728               	addwf	??_display,w
   454  0735  00AA               	movwf	??_display+2
   455  0736  0871               	movf	?___wmul+1,w
   456  0737  1803               	skipnc
   457  0738  0A71               	incf	?___wmul+1,w
   458  0739  0729               	addwf	??_display+1,w
   459  073A  00AB               	movwf	??_display+3
   460  073B  09AA               	comf	??_display+2,f
   461  073C  09AB               	comf	??_display+3,f
   462  073D  0AAA               	incf	??_display+2,f
   463  073E  1903               	skipnz
   464  073F  0AAB               	incf	??_display+3,f
   465  0740  082E               	movf	_dem,w
   466  0741  072A               	addwf	??_display+2,w
   467  0742  00F8               	movwf	___lwdiv@dividend
   468  0743  082F               	movf	_dem+1,w
   469  0744  1803               	skipnc
   470  0745  0A2F               	incf	_dem+1,w
   471  0746  072B               	addwf	??_display+3,w
   472  0747  00F9               	movwf	___lwdiv@dividend+1
   473  0748  120A  118A  268F  120A  118A  	fcall	___lwdiv
   474  074D  0877               	movf	?___lwdiv+1,w
   475  074E  1283               	bcf	3,5	;RP0=0, select bank0
   476  074F  1303               	bcf	3,6	;RP1=0, select bank0
   477  0750  00A1               	movwf	_chuc+1
   478  0751  0876               	movf	?___lwdiv,w
   479  0752  00A0               	movwf	_chuc
   480                           
   481                           ;Counter_T1.c: 52: donvi = dem - nghin*1000 - tram*100 - chuc*10;
   482  0753  0825               	movf	_nghin+1,w
   483  0754  00F1               	movwf	___wmul@multiplier+1
   484  0755  0824               	movf	_nghin,w
   485  0756  00F0               	movwf	___wmul@multiplier
   486  0757  30E8               	movlw	232
   487  0758  00F2               	movwf	___wmul@multiplicand
   488  0759  3003               	movlw	3
   489  075A  00F3               	movwf	___wmul@multiplicand+1
   490  075B  120A  118A  2643  120A  118A  	fcall	___wmul
   491  0760  0870               	movf	?___wmul,w
   492  0761  1283               	bcf	3,5	;RP0=0, select bank0
   493  0762  1303               	bcf	3,6	;RP1=0, select bank0
   494  0763  00A8               	movwf	??_display
   495  0764  0871               	movf	?___wmul+1,w
   496  0765  00A9               	movwf	??_display+1
   497  0766  0827               	movf	_tram+1,w
   498  0767  00F1               	movwf	___wmul@multiplier+1
   499  0768  0826               	movf	_tram,w
   500  0769  00F0               	movwf	___wmul@multiplier
   501  076A  3064               	movlw	100
   502  076B  00F2               	movwf	___wmul@multiplicand
   503  076C  3000               	movlw	0
   504  076D  00F3               	movwf	___wmul@multiplicand+1
   505  076E  120A  118A  2643  120A  118A  	fcall	___wmul
   506  0773  0870               	movf	?___wmul,w
   507  0774  1283               	bcf	3,5	;RP0=0, select bank0
   508  0775  1303               	bcf	3,6	;RP1=0, select bank0
   509  0776  0728               	addwf	??_display,w
   510  0777  00AA               	movwf	??_display+2
   511  0778  0871               	movf	?___wmul+1,w
   512  0779  1803               	skipnc
   513  077A  0A71               	incf	?___wmul+1,w
   514  077B  0729               	addwf	??_display+1,w
   515  077C  00AB               	movwf	??_display+3
   516  077D  0821               	movf	_chuc+1,w
   517  077E  00F1               	movwf	___wmul@multiplier+1
   518  077F  0820               	movf	_chuc,w
   519  0780  00F0               	movwf	___wmul@multiplier
   520  0781  300A               	movlw	10
   521  0782  00F2               	movwf	___wmul@multiplicand
   522  0783  3000               	movlw	0
   523  0784  00F3               	movwf	___wmul@multiplicand+1
   524  0785  120A  118A  2643  120A  118A  	fcall	___wmul
   525  078A  0870               	movf	?___wmul,w
   526  078B  1283               	bcf	3,5	;RP0=0, select bank0
   527  078C  1303               	bcf	3,6	;RP1=0, select bank0
   528  078D  072A               	addwf	??_display+2,w
   529  078E  00AC               	movwf	??_display+4
   530  078F  0871               	movf	?___wmul+1,w
   531  0790  1803               	skipnc
   532  0791  0A71               	incf	?___wmul+1,w
   533  0792  072B               	addwf	??_display+3,w
   534  0793  00AD               	movwf	??_display+5
   535  0794  09AC               	comf	??_display+4,f
   536  0795  09AD               	comf	??_display+5,f
   537  0796  0AAC               	incf	??_display+4,f
   538  0797  1903               	skipnz
   539  0798  0AAD               	incf	??_display+5,f
   540  0799  082E               	movf	_dem,w
   541  079A  072C               	addwf	??_display+4,w
   542  079B  00A2               	movwf	_donvi
   543  079C  082F               	movf	_dem+1,w
   544  079D  1803               	skipnc
   545  079E  0A2F               	incf	_dem+1,w
   546  079F  072D               	addwf	??_display+5,w
   547  07A0  00A3               	movwf	_donvi+1
   548                           
   549                           ;Counter_T1.c: 54: PORTB = maled[nghin];
   550  07A1  0824               	movf	_nghin,w
   551  07A2  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   552  07A3  0084               	movwf	4
   553  07A4  120A  118A  2003  120A  118A  	fcall	stringdir
   554  07A9  0086               	movwf	6	;volatile
   555                           
   556                           ;Counter_T1.c: 55: RD0=0;
   557  07AA  1008               	bcf	8,0	;volatile
   558                           
   559                           ;Counter_T1.c: 56: _delay((unsigned long)((5)*(8000000/4000.0)));
   560  07AB  300D               	movlw	13
   561  07AC  00A9               	movwf	??_display+1
   562  07AD  30FB               	movlw	251
   563  07AE  00A8               	movwf	??_display
   564  07AF                     u257:	
   565  07AF  0BA8               	decfsz	??_display,f
   566  07B0  2FAF               	goto	u257
   567  07B1  0BA9               	decfsz	??_display+1,f
   568  07B2  2FAF               	goto	u257
   569  07B3  2FB4               	nop2
   570                           
   571                           ;Counter_T1.c: 57: RD0=1;
   572  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   573  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   574  07B6  1408               	bsf	8,0	;volatile
   575                           
   576                           ;Counter_T1.c: 59: PORTB = maled[tram];
   577  07B7  0826               	movf	_tram,w
   578  07B8  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   579  07B9  0084               	movwf	4
   580  07BA  120A  118A  2003  120A  118A  	fcall	stringdir
   581  07BF  0086               	movwf	6	;volatile
   582                           
   583                           ;Counter_T1.c: 60: RD1=0;
   584  07C0  1088               	bcf	8,1	;volatile
   585                           
   586                           ;Counter_T1.c: 61: _delay((unsigned long)((5)*(8000000/4000.0)));
   587  07C1  300D               	movlw	13
   588  07C2  00A9               	movwf	??_display+1
   589  07C3  30FB               	movlw	251
   590  07C4  00A8               	movwf	??_display
   591  07C5                     u267:	
   592  07C5  0BA8               	decfsz	??_display,f
   593  07C6  2FC5               	goto	u267
   594  07C7  0BA9               	decfsz	??_display+1,f
   595  07C8  2FC5               	goto	u267
   596  07C9  2FCA               	nop2
   597                           
   598                           ;Counter_T1.c: 62: RD1=1;
   599  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   600  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   601  07CC  1488               	bsf	8,1	;volatile
   602                           
   603                           ;Counter_T1.c: 64: PORTB = maled[chuc];
   604  07CD  0820               	movf	_chuc,w
   605  07CE  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   606  07CF  0084               	movwf	4
   607  07D0  120A  118A  2003  120A  118A  	fcall	stringdir
   608  07D5  0086               	movwf	6	;volatile
   609                           
   610                           ;Counter_T1.c: 65: RD2=0;
   611  07D6  1108               	bcf	8,2	;volatile
   612                           
   613                           ;Counter_T1.c: 66: _delay((unsigned long)((5)*(8000000/4000.0)));
   614  07D7  300D               	movlw	13
   615  07D8  00A9               	movwf	??_display+1
   616  07D9  30FB               	movlw	251
   617  07DA  00A8               	movwf	??_display
   618  07DB                     u277:	
   619  07DB  0BA8               	decfsz	??_display,f
   620  07DC  2FDB               	goto	u277
   621  07DD  0BA9               	decfsz	??_display+1,f
   622  07DE  2FDB               	goto	u277
   623  07DF  2FE0               	nop2
   624                           
   625                           ;Counter_T1.c: 67: RD2=1;
   626  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   627  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   628  07E2  1508               	bsf	8,2	;volatile
   629                           
   630                           ;Counter_T1.c: 69: PORTB = maled[donvi];
   631  07E3  0822               	movf	_donvi,w
   632  07E4  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   633  07E5  0084               	movwf	4
   634  07E6  120A  118A  2003  120A  118A  	fcall	stringdir
   635  07EB  0086               	movwf	6	;volatile
   636                           
   637                           ;Counter_T1.c: 70: RD3=0;
   638  07EC  1188               	bcf	8,3	;volatile
   639                           
   640                           ;Counter_T1.c: 71: _delay((unsigned long)((5)*(8000000/4000.0)));
   641  07ED  300D               	movlw	13
   642  07EE  00A9               	movwf	??_display+1
   643  07EF  30FB               	movlw	251
   644  07F0  00A8               	movwf	??_display
   645  07F1                     u287:	
   646  07F1  0BA8               	decfsz	??_display,f
   647  07F2  2FF1               	goto	u287
   648  07F3  0BA9               	decfsz	??_display+1,f
   649  07F4  2FF1               	goto	u287
   650  07F5  2FF6               	nop2
   651                           
   652                           ;Counter_T1.c: 72: RD3=1;
   653  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   654  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   655  07F8  1588               	bsf	8,3	;volatile
   656  07F9  0008               	return
   657  07FA                     __end_of_display:	
   658                           
   659                           	psect	text2
   660  0643                     __ptext2:	
   661 ;; *************** function ___wmul *****************
   662 ;; Defined at:
   663 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  multiplier      2    0[COMMON] unsigned int 
   666 ;;  multiplicand    2    2[COMMON] unsigned int 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  product         2    4[COMMON] unsigned int 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  2    0[COMMON] unsigned int 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         4       0       0       0       0
   679 ;;      Locals:         2       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         6       0       0       0       0
   682 ;;Total ram usage:        6 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_display
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function ___wmul
   693  0643                     ___wmul:	
   694                           
   695                           ;incstack = 0
   696                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   697  0643  01F4               	clrf	___wmul@product
   698  0644  01F5               	clrf	___wmul@product+1
   699  0645                     l602:	
   700  0645  1C70               	btfss	___wmul@multiplier,0
   701  0646  2E4D               	goto	l130
   702  0647  0872               	movf	___wmul@multiplicand,w
   703  0648  07F4               	addwf	___wmul@product,f
   704  0649  1803               	skipnc
   705  064A  0AF5               	incf	___wmul@product+1,f
   706  064B  0873               	movf	___wmul@multiplicand+1,w
   707  064C  07F5               	addwf	___wmul@product+1,f
   708  064D                     l130:	
   709  064D  3001               	movlw	1
   710  064E                     u145:	
   711  064E  1003               	clrc
   712  064F  0DF2               	rlf	___wmul@multiplicand,f
   713  0650  0DF3               	rlf	___wmul@multiplicand+1,f
   714  0651  3EFF               	addlw	-1
   715  0652  1D03               	skipz
   716  0653  2E4E               	goto	u145
   717  0654  3001               	movlw	1
   718  0655                     u155:	
   719  0655  1003               	clrc
   720  0656  0CF1               	rrf	___wmul@multiplier+1,f
   721  0657  0CF0               	rrf	___wmul@multiplier,f
   722  0658  3EFF               	addlw	-1
   723  0659  1D03               	skipz
   724  065A  2E55               	goto	u155
   725  065B  0870               	movf	___wmul@multiplier,w
   726  065C  0471               	iorwf	___wmul@multiplier+1,w
   727  065D  1D03               	btfss	3,2
   728  065E  2E45               	goto	l602
   729  065F  0875               	movf	___wmul@product+1,w
   730  0660  00F1               	movwf	?___wmul+1
   731  0661  0874               	movf	___wmul@product,w
   732  0662  00F0               	movwf	?___wmul
   733  0663  0008               	return
   734  0664                     __end_of___wmul:	
   735                           
   736                           	psect	text3
   737  068F                     __ptext3:	
   738 ;; *************** function ___lwdiv *****************
   739 ;; Defined at:
   740 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  divisor         2    6[COMMON] unsigned int 
   743 ;;  dividend        2    8[COMMON] unsigned int 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  quotient        2   11[COMMON] unsigned int 
   746 ;;  counter         1   13[COMMON] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2    6[COMMON] unsigned int 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         4       0       0       0       0
   757 ;;      Locals:         3       0       0       0       0
   758 ;;      Temps:          1       0       0       0       0
   759 ;;      Totals:         8       0       0       0       0
   760 ;;Total ram usage:        8 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_display
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function ___lwdiv
   771  068F                     ___lwdiv:	
   772                           
   773                           ;incstack = 0
   774                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   775  068F  01FB               	clrf	___lwdiv@quotient
   776  0690  01FC               	clrf	___lwdiv@quotient+1
   777  0691  0876               	movf	___lwdiv@divisor,w
   778  0692  0477               	iorwf	___lwdiv@divisor+1,w
   779  0693  1903               	btfsc	3,2
   780  0694  2EC6               	goto	l636
   781  0695  01FD               	clrf	___lwdiv@counter
   782  0696  0AFD               	incf	___lwdiv@counter,f
   783  0697                     l624:	
   784  0697  1BF7               	btfsc	___lwdiv@divisor+1,7
   785  0698  2EA5               	goto	l626
   786  0699  3001               	movlw	1
   787  069A                     u185:	
   788  069A  1003               	clrc
   789  069B  0DF6               	rlf	___lwdiv@divisor,f
   790  069C  0DF7               	rlf	___lwdiv@divisor+1,f
   791  069D  3EFF               	addlw	-1
   792  069E  1D03               	skipz
   793  069F  2E9A               	goto	u185
   794  06A0  3001               	movlw	1
   795  06A1  00FA               	movwf	??___lwdiv
   796  06A2  087A               	movf	??___lwdiv,w
   797  06A3  07FD               	addwf	___lwdiv@counter,f
   798  06A4  2E97               	goto	l624
   799  06A5                     l626:	
   800  06A5  3001               	movlw	1
   801  06A6                     u205:	
   802  06A6  1003               	clrc
   803  06A7  0DFB               	rlf	___lwdiv@quotient,f
   804  06A8  0DFC               	rlf	___lwdiv@quotient+1,f
   805  06A9  3EFF               	addlw	-1
   806  06AA  1D03               	skipz
   807  06AB  2EA6               	goto	u205
   808  06AC  0877               	movf	___lwdiv@divisor+1,w
   809  06AD  0279               	subwf	___lwdiv@dividend+1,w
   810  06AE  1D03               	skipz
   811  06AF  2EB2               	goto	u215
   812  06B0  0876               	movf	___lwdiv@divisor,w
   813  06B1  0278               	subwf	___lwdiv@dividend,w
   814  06B2                     u215:	
   815  06B2  1C03               	skipc
   816  06B3  2EBB               	goto	l632
   817  06B4  0876               	movf	___lwdiv@divisor,w
   818  06B5  02F8               	subwf	___lwdiv@dividend,f
   819  06B6  0877               	movf	___lwdiv@divisor+1,w
   820  06B7  1C03               	skipc
   821  06B8  03F9               	decf	___lwdiv@dividend+1,f
   822  06B9  02F9               	subwf	___lwdiv@dividend+1,f
   823  06BA  147B               	bsf	___lwdiv@quotient,0
   824  06BB                     l632:	
   825  06BB  3001               	movlw	1
   826  06BC                     u225:	
   827  06BC  1003               	clrc
   828  06BD  0CF7               	rrf	___lwdiv@divisor+1,f
   829  06BE  0CF6               	rrf	___lwdiv@divisor,f
   830  06BF  3EFF               	addlw	-1
   831  06C0  1D03               	skipz
   832  06C1  2EBC               	goto	u225
   833  06C2  3001               	movlw	1
   834  06C3  02FD               	subwf	___lwdiv@counter,f
   835  06C4  1D03               	btfss	3,2
   836  06C5  2EA5               	goto	l626
   837  06C6                     l636:	
   838  06C6  087C               	movf	___lwdiv@quotient+1,w
   839  06C7  00F7               	movwf	?___lwdiv+1
   840  06C8  087B               	movf	___lwdiv@quotient,w
   841  06C9  00F6               	movwf	?___lwdiv
   842  06CA  0008               	return
   843  06CB                     __end_of___lwdiv:	
   844  007E                     btemp	set	126	;btemp
   845  007E                     wtemp	set	126
   846  007E                     wtemp0	set	126
   847  0080                     wtemp1	set	128
   848  0082                     wtemp2	set	130
   849  0084                     wtemp3	set	132
   850  0086                     wtemp4	set	134
   851  0088                     wtemp5	set	136
   852  007F                     wtemp6	set	127
   853  007E                     ttemp	set	126
   854  007E                     ttemp0	set	126
   855  0081                     ttemp1	set	129
   856  0084                     ttemp2	set	132
   857  0087                     ttemp3	set	135
   858  007F                     ttemp4	set	127
   859  007E                     ltemp	set	126
   860  007E                     ltemp0	set	126
   861  0082                     ltemp1	set	130
   862  0086                     ltemp2	set	134
   863  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1208
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              6     6      0    1208
                                              0 BANK0      6     6      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     728
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 07 22:04:17 2016

                      pc 0002              __CFG_CP$OFF 0000                       fsr 0004  
    ___wmul@multiplicand 0072                      l130 064D                      l602 0645  
                    l632 06BB                      l624 0697                      l626 06A5  
                    l636 06C6                      l686 0678                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u205 06A6                      u215 06B2                      u225 06BC  
                    u145 064E                      u155 0655                      u185 069A  
                    u257 07AF             __CFG_CPD$OFF 0000                      u267 07C5  
                    u277 07DB                      u287 07F1                      _dem 002E  
                    fsr0 0004             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   _TMR1 000E             __CFG_WRT$OFF 0000                     _chuc 0020  
                   _main 0664                     _tram 0026                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___lwdiv 06CB                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086          __end_of_display 07FA                    _maled 0009  
                  _donvi 0022                    _nghin 0024           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07FA             __end_of_main 068F                   ??_main 007E  
         __CFG_PWRTE$OFF 0000                   ___wmul 0643                ??___lwdiv 007A  
              ??_display 0028  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_maled 0013               __pbssBANK0 002E               __pmaintext 0664  
                ?___wmul 0070               __stringtab 0003          __size_of___wmul 0021  
                ___lwdiv 068F                  __ptext1 06CB                  __ptext2 0643  
                __ptext3 068F                  _display 06CB                _T1CONbits 0010  
   end_of_initialization 07FC                _TRISDbits 0088           __end_of___wmul 0664  
    start_initialization 07FA                 ??___wmul 0074                ___latbits 0002  
          __pcstackBANK0 0028                __pnvBANK0 0020         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                __pstrings 0003                 ?_display 0070  
       ___lwdiv@quotient 007B           ___wmul@product 0074              __stringbase 0008  
      ___wmul@multiplier 0070         __size_of___lwdiv 003C       __end_of__stringtab 0009  
       __size_of_display 012F          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
          __size_of_main 002B                stringcode 0003                 stringdir 0003  
               stringtab 0003  
