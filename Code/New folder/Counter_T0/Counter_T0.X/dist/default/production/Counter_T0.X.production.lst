

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jan 19 02:08:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172                           
   173                           	psect	strings
   174  0003                     __pstrings:
   175  0003                     stringtab:
   176  0003                     __stringtab:
   177  0003                     stringcode:	
   178                           ;	String table - string pointers are 1 byte each
   179                           
   180  0003                     stringdir:
   181  0003  3000               	movlw	high stringdir
   182  0004  008A               	movwf	10
   183  0005  0804               	movf	4,w
   184  0006  0A84               	incf	4,f
   185  0007  0782               	addwf	2,f
   186  0008                     __stringbase:
   187  0008  3400               	retlw	0
   188  0009                     __end_of__stringtab:
   189  0009                     _maled:
   190  0009  343F               	retlw	63
   191  000A  3406               	retlw	6
   192  000B  345B               	retlw	91
   193  000C  344F               	retlw	79
   194  000D  3466               	retlw	102
   195  000E  346D               	retlw	109
   196  000F  347D               	retlw	125
   197  0010  3407               	retlw	7
   198  0011  347F               	retlw	127
   199  0012  346F               	retlw	111
   200  0013                     __end_of_maled:
   201                           
   202                           	psect	nvBANK0
   203  0020                     __pnvBANK0:
   204  0020                     _donvi:
   205  0020                     	ds	2
   206  0022                     _chuc:
   207  0022                     	ds	2
   208  0001                     _TMR0	set	1
   209  0008                     _PORTD	set	8
   210  0006                     _PORTB	set	6
   211  0041                     _RD1	set	65
   212  0040                     _RD0	set	64
   213  0088                     _TRISDbits	set	136
   214  0086                     _TRISB	set	134
   215  0081                     _OPTION_REGbits	set	129
   216                           
   217                           	psect	cinit
   218  07F4                     start_initialization:	
   219                           ; #config settings
   220                           
   221  07F4                     __initialization:
   222                           
   223                           ; Clear objects allocated to COMMON
   224  07F4  01FC               	clrf	__pbssCOMMON& (0+127)
   225  07F5  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   226                           
   227                           ; Clear objects allocated to BANK0
   228  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   229  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   230  07F8  01A4               	clrf	__pbssBANK0& (0+127)
   231  07F9  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   232  07FA  01A6               	clrf	(__pbssBANK0+2)& (0+127)
   233  07FB  01A7               	clrf	(__pbssBANK0+3)& (0+127)
   234  07FC                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  07FC                     __end_of__initialization:
   238  07FC  0183               	clrf	3
   239  07FD  120A  118A  2F15   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  007C                     __pbssCOMMON:
   243  007C                     _dem:
   244  007C                     	ds	2
   245                           
   246                           	psect	bssBANK0
   247  0024                     __pbssBANK0:
   248  0024                     _tram:
   249  0024                     	ds	2
   250  0026                     _nghin:
   251  0026                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_display:
   256  0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?___lwdiv:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?___lwmod:	
   263                           ; 2 bytes @ 0x0
   264                           
   265  0070                     ___lwdiv@divisor:	
   266                           ; 2 bytes @ 0x0
   267                           
   268  0070                     ___lwmod@divisor:	
   269                           ; 2 bytes @ 0x0
   270                           
   271                           
   272                           ; 2 bytes @ 0x0
   273  0070                     	ds	2
   274  0072                     ___lwdiv@dividend:
   275  0072                     ___lwmod@dividend:	
   276                           ; 2 bytes @ 0x2
   277                           
   278                           
   279                           ; 2 bytes @ 0x2
   280  0072                     	ds	2
   281  0074                     ??___lwdiv:
   282  0074                     ??___lwmod:	
   283                           ; 1 bytes @ 0x4
   284                           
   285                           
   286                           ; 1 bytes @ 0x4
   287  0074                     	ds	1
   288  0075                     ___lwmod@counter:
   289  0075                     ___lwdiv@quotient:	
   290                           ; 1 bytes @ 0x5
   291                           
   292                           
   293                           ; 2 bytes @ 0x5
   294  0075                     	ds	2
   295  0077                     ___lwdiv@counter:
   296                           
   297                           ; 1 bytes @ 0x7
   298  0077                     	ds	1
   299  0078                     ??_display:
   300                           
   301                           ; 1 bytes @ 0x8
   302  0078                     	ds	2
   303  007A                     ??_main:
   304                           
   305                           ; 1 bytes @ 0xA
   306  007A                     	ds	2
   307                           
   308                           	psect	maintext
   309  0715                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 24 in file "Counter_T0.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 300/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0
   332 ;;      Totals:         2       0       0       0       0
   333 ;;Total ram usage:        2 bytes
   334 ;; Hardware stack levels required when called:    2
   335 ;; This function calls:
   336 ;;		_display
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _main
   344  0715                     _main:
   345                           
   346                           ;Counter_T0.c: 26: OPTION_REGbits.T0CS = 1;
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   350  0715  1683               	bsf	3,5	;RP0=1, select bank1
   351  0716  1681               	bsf	1,5	;volatile
   352                           
   353                           ;Counter_T0.c: 27: OPTION_REGbits.PSA = 1;
   354  0717  1581               	bsf	1,3	;volatile
   355                           
   356                           ;Counter_T0.c: 28: TRISB = 0;
   357  0718  0186               	clrf	6	;volatile
   358                           
   359                           ;Counter_T0.c: 29: PORTB = 0;
   360  0719  1283               	bcf	3,5	;RP0=0, select bank0
   361  071A  0186               	clrf	6	;volatile
   362                           
   363                           ;Counter_T0.c: 30: TRISDbits.TRISD0 = 0;
   364  071B  1683               	bsf	3,5	;RP0=1, select bank1
   365  071C  1008               	bcf	8,0	;volatile
   366                           
   367                           ;Counter_T0.c: 31: TRISDbits.TRISD1 = 0;
   368  071D  1088               	bcf	8,1	;volatile
   369                           
   370                           ;Counter_T0.c: 32: PORTD = 0;
   371  071E  1283               	bcf	3,5	;RP0=0, select bank0
   372  071F  0188               	clrf	8	;volatile
   373  0720                     l731:
   374                           
   375                           ;Counter_T0.c: 34: {;Counter_T0.c: 35: display();
   376  0720  120A  118A  27A5  120A  118A  	fcall	_display
   377                           
   378                           ;Counter_T0.c: 36: dem=TMR0;
   379  0725  0801               	movf	1,w	;volatile
   380  0726  00FA               	movwf	??_main
   381  0727  01FB               	clrf	??_main+1
   382  0728  087A               	movf	??_main,w
   383  0729  00FC               	movwf	_dem
   384  072A  087B               	movf	??_main+1,w
   385  072B  00FD               	movwf	_dem+1
   386                           
   387                           ;Counter_T0.c: 37: if(dem>=100)
   388  072C  3000               	movlw	0
   389  072D  027D               	subwf	_dem+1,w
   390  072E  3064               	movlw	100
   391  072F  1903               	skipnz
   392  0730  027C               	subwf	_dem,w
   393  0731  1C03               	skipc
   394  0732  2F20               	goto	l731
   395                           
   396                           ;Counter_T0.c: 38: {;Counter_T0.c: 39: TMR0=0;
   397  0733  0181               	clrf	1	;volatile
   398                           
   399                           ;Counter_T0.c: 40: dem=0;
   400  0734  01FC               	clrf	_dem
   401  0735  01FD               	clrf	_dem+1
   402  0736  2F20               	goto	l731
   403  0737                     __end_of_main:
   404                           
   405                           	psect	text1
   406  07A5                     __ptext1:	
   407 ;; *************** function _display *****************
   408 ;; Defined at:
   409 ;;		line 44 in file "Counter_T0.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 300/0
   420 ;;		On exit  : 300/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          2       0       0       0       0
   426 ;;      Totals:         2       0       0       0       0
   427 ;;Total ram usage:        2 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		___lwdiv
   432 ;;		___lwmod
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _display
   440  07A5                     _display:
   441                           
   442                           ;Counter_T0.c: 46: chuc = dem/10;
   443                           
   444                           ;incstack = 0
   445                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   446  07A5  300A               	movlw	10
   447  07A6  00F0               	movwf	___lwdiv@divisor
   448  07A7  3000               	movlw	0
   449  07A8  00F1               	movwf	___lwdiv@divisor+1
   450  07A9  087D               	movf	_dem+1,w
   451  07AA  00F3               	movwf	___lwdiv@dividend+1
   452  07AB  087C               	movf	_dem,w
   453  07AC  00F2               	movwf	___lwdiv@dividend
   454  07AD  120A  118A  2769  120A  118A  	fcall	___lwdiv
   455  07B2  0871               	movf	?___lwdiv+1,w
   456  07B3  00A3               	movwf	_chuc+1
   457  07B4  0870               	movf	?___lwdiv,w
   458  07B5  00A2               	movwf	_chuc
   459                           
   460                           ;Counter_T0.c: 47: donvi = dem%10;
   461  07B6  300A               	movlw	10
   462  07B7  00F0               	movwf	___lwmod@divisor
   463  07B8  3000               	movlw	0
   464  07B9  00F1               	movwf	___lwmod@divisor+1
   465  07BA  087D               	movf	_dem+1,w
   466  07BB  00F3               	movwf	___lwmod@dividend+1
   467  07BC  087C               	movf	_dem,w
   468  07BD  00F2               	movwf	___lwmod@dividend
   469  07BE  120A  118A  2737  120A  118A  	fcall	___lwmod
   470  07C3  0871               	movf	?___lwmod+1,w
   471  07C4  00A1               	movwf	_donvi+1
   472  07C5  0870               	movf	?___lwmod,w
   473  07C6  00A0               	movwf	_donvi
   474                           
   475                           ;Counter_T0.c: 49: PORTB = maled[chuc];
   476  07C7  0822               	movf	_chuc,w
   477  07C8  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   478  07C9  0084               	movwf	4
   479  07CA  120A  118A  2003  120A  118A  	fcall	stringdir
   480  07CF  0086               	movwf	6	;volatile
   481                           
   482                           ;Counter_T0.c: 50: RD0=0;
   483  07D0  1008               	bcf	8,0	;volatile
   484                           
   485                           ;Counter_T0.c: 51: _delay((unsigned long)((10)*(8000000/4000.0)));
   486  07D1  301A               	movlw	26
   487  07D2  00F9               	movwf	??_display+1
   488  07D3  30F8               	movlw	248
   489  07D4  00F8               	movwf	??_display
   490  07D5                     u297:
   491  07D5  0BF8               	decfsz	??_display,f
   492  07D6  2FD5               	goto	u297
   493  07D7  0BF9               	decfsz	??_display+1,f
   494  07D8  2FD5               	goto	u297
   495  07D9  0000               	nop
   496                           
   497                           ;Counter_T0.c: 52: RD0=1;
   498  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   499  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   500  07DC  1408               	bsf	8,0	;volatile
   501                           
   502                           ;Counter_T0.c: 54: PORTB = maled[donvi];
   503  07DD  0820               	movf	_donvi,w
   504  07DE  3E01               	addlw	low ((_maled-__stringbase)| (0+32768))
   505  07DF  0084               	movwf	4
   506  07E0  120A  118A  2003  120A  118A  	fcall	stringdir
   507  07E5  0086               	movwf	6	;volatile
   508                           
   509                           ;Counter_T0.c: 55: RD1=0;
   510  07E6  1088               	bcf	8,1	;volatile
   511                           
   512                           ;Counter_T0.c: 56: _delay((unsigned long)((10)*(8000000/4000.0)));
   513  07E7  301A               	movlw	26
   514  07E8  00F9               	movwf	??_display+1
   515  07E9  30F8               	movlw	248
   516  07EA  00F8               	movwf	??_display
   517  07EB                     u307:
   518  07EB  0BF8               	decfsz	??_display,f
   519  07EC  2FEB               	goto	u307
   520  07ED  0BF9               	decfsz	??_display+1,f
   521  07EE  2FEB               	goto	u307
   522  07EF  0000               	nop
   523                           
   524                           ;Counter_T0.c: 57: RD1=1;
   525  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   526  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   527  07F2  1488               	bsf	8,1	;volatile
   528  07F3  0008               	return
   529  07F4                     __end_of_display:
   530                           
   531                           	psect	text2
   532  0737                     __ptext2:	
   533 ;; *************** function ___lwmod *****************
   534 ;; Defined at:
   535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  divisor         2    0[COMMON] unsigned int 
   538 ;;  dividend        2    2[COMMON] unsigned int 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  counter         1    5[COMMON] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;                  2    0[COMMON] unsigned int 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0
   545 ;; Tracked objects:
   546 ;;		On entry : 300/0
   547 ;;		On exit  : 300/0
   548 ;;		Unchanged: 300/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         4       0       0       0       0
   551 ;;      Locals:         1       0       0       0       0
   552 ;;      Temps:          1       0       0       0       0
   553 ;;      Totals:         6       0       0       0       0
   554 ;;Total ram usage:        6 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_display
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function ___lwmod
   565  0737                     ___lwmod:
   566                           
   567                           ;incstack = 0
   568                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   569  0737  0870               	movf	___lwmod@divisor,w
   570  0738  0471               	iorwf	___lwmod@divisor+1,w
   571  0739  1903               	btfsc	3,2
   572  073A  2F64               	goto	l701
   573  073B  01F5               	clrf	___lwmod@counter
   574  073C  0AF5               	incf	___lwmod@counter,f
   575  073D                     l691:
   576  073D  1BF1               	btfsc	___lwmod@divisor+1,7
   577  073E  2F4B               	goto	l693
   578  073F  3001               	movlw	1
   579  0740                     u235:
   580  0740  1003               	clrc
   581  0741  0DF0               	rlf	___lwmod@divisor,f
   582  0742  0DF1               	rlf	___lwmod@divisor+1,f
   583  0743  3EFF               	addlw	-1
   584  0744  1D03               	skipz
   585  0745  2F40               	goto	u235
   586  0746  3001               	movlw	1
   587  0747  00F4               	movwf	??___lwmod
   588  0748  0874               	movf	??___lwmod,w
   589  0749  07F5               	addwf	___lwmod@counter,f
   590  074A  2F3D               	goto	l691
   591  074B                     l693:
   592  074B  0871               	movf	___lwmod@divisor+1,w
   593  074C  0273               	subwf	___lwmod@dividend+1,w
   594  074D  1D03               	skipz
   595  074E  2F51               	goto	u255
   596  074F  0870               	movf	___lwmod@divisor,w
   597  0750  0272               	subwf	___lwmod@dividend,w
   598  0751                     u255:
   599  0751  1C03               	skipc
   600  0752  2F59               	goto	l697
   601  0753  0870               	movf	___lwmod@divisor,w
   602  0754  02F2               	subwf	___lwmod@dividend,f
   603  0755  0871               	movf	___lwmod@divisor+1,w
   604  0756  1C03               	skipc
   605  0757  03F3               	decf	___lwmod@dividend+1,f
   606  0758  02F3               	subwf	___lwmod@dividend+1,f
   607  0759                     l697:
   608  0759  3001               	movlw	1
   609  075A                     u265:
   610  075A  1003               	clrc
   611  075B  0CF1               	rrf	___lwmod@divisor+1,f
   612  075C  0CF0               	rrf	___lwmod@divisor,f
   613  075D  3EFF               	addlw	-1
   614  075E  1D03               	skipz
   615  075F  2F5A               	goto	u265
   616  0760  3001               	movlw	1
   617  0761  02F5               	subwf	___lwmod@counter,f
   618  0762  1D03               	btfss	3,2
   619  0763  2F4B               	goto	l693
   620  0764                     l701:
   621  0764  0873               	movf	___lwmod@dividend+1,w
   622  0765  00F1               	movwf	?___lwmod+1
   623  0766  0872               	movf	___lwmod@dividend,w
   624  0767  00F0               	movwf	?___lwmod
   625  0768  0008               	return
   626  0769                     __end_of___lwmod:
   627                           
   628                           	psect	text3
   629  0769                     __ptext3:	
   630 ;; *************** function ___lwdiv *****************
   631 ;; Defined at:
   632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  divisor         2    0[COMMON] unsigned int 
   635 ;;  dividend        2    2[COMMON] unsigned int 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  quotient        2    5[COMMON] unsigned int 
   638 ;;  counter         1    7[COMMON] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  2    0[COMMON] unsigned int 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0
   643 ;; Tracked objects:
   644 ;;		On entry : 300/0
   645 ;;		On exit  : 300/0
   646 ;;		Unchanged: 300/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         4       0       0       0       0
   649 ;;      Locals:         3       0       0       0       0
   650 ;;      Temps:          1       0       0       0       0
   651 ;;      Totals:         8       0       0       0       0
   652 ;;Total ram usage:        8 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_display
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function ___lwdiv
   663  0769                     ___lwdiv:
   664                           
   665                           ;incstack = 0
   666                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   667  0769  01F5               	clrf	___lwdiv@quotient
   668  076A  01F6               	clrf	___lwdiv@quotient+1
   669  076B  0870               	movf	___lwdiv@divisor,w
   670  076C  0471               	iorwf	___lwdiv@divisor+1,w
   671  076D  1903               	btfsc	3,2
   672  076E  2FA0               	goto	l679
   673  076F  01F7               	clrf	___lwdiv@counter
   674  0770  0AF7               	incf	___lwdiv@counter,f
   675  0771                     l667:
   676  0771  1BF1               	btfsc	___lwdiv@divisor+1,7
   677  0772  2F7F               	goto	l669
   678  0773  3001               	movlw	1
   679  0774                     u165:
   680  0774  1003               	clrc
   681  0775  0DF0               	rlf	___lwdiv@divisor,f
   682  0776  0DF1               	rlf	___lwdiv@divisor+1,f
   683  0777  3EFF               	addlw	-1
   684  0778  1D03               	skipz
   685  0779  2F74               	goto	u165
   686  077A  3001               	movlw	1
   687  077B  00F4               	movwf	??___lwdiv
   688  077C  0874               	movf	??___lwdiv,w
   689  077D  07F7               	addwf	___lwdiv@counter,f
   690  077E  2F71               	goto	l667
   691  077F                     l669:
   692  077F  3001               	movlw	1
   693  0780                     u185:
   694  0780  1003               	clrc
   695  0781  0DF5               	rlf	___lwdiv@quotient,f
   696  0782  0DF6               	rlf	___lwdiv@quotient+1,f
   697  0783  3EFF               	addlw	-1
   698  0784  1D03               	skipz
   699  0785  2F80               	goto	u185
   700  0786  0871               	movf	___lwdiv@divisor+1,w
   701  0787  0273               	subwf	___lwdiv@dividend+1,w
   702  0788  1D03               	skipz
   703  0789  2F8C               	goto	u195
   704  078A  0870               	movf	___lwdiv@divisor,w
   705  078B  0272               	subwf	___lwdiv@dividend,w
   706  078C                     u195:
   707  078C  1C03               	skipc
   708  078D  2F95               	goto	l675
   709  078E  0870               	movf	___lwdiv@divisor,w
   710  078F  02F2               	subwf	___lwdiv@dividend,f
   711  0790  0871               	movf	___lwdiv@divisor+1,w
   712  0791  1C03               	skipc
   713  0792  03F3               	decf	___lwdiv@dividend+1,f
   714  0793  02F3               	subwf	___lwdiv@dividend+1,f
   715  0794  1475               	bsf	___lwdiv@quotient,0
   716  0795                     l675:
   717  0795  3001               	movlw	1
   718  0796                     u205:
   719  0796  1003               	clrc
   720  0797  0CF1               	rrf	___lwdiv@divisor+1,f
   721  0798  0CF0               	rrf	___lwdiv@divisor,f
   722  0799  3EFF               	addlw	-1
   723  079A  1D03               	skipz
   724  079B  2F96               	goto	u205
   725  079C  3001               	movlw	1
   726  079D  02F7               	subwf	___lwdiv@counter,f
   727  079E  1D03               	btfss	3,2
   728  079F  2F7F               	goto	l669
   729  07A0                     l679:
   730  07A0  0876               	movf	___lwdiv@quotient+1,w
   731  07A1  00F1               	movwf	?___lwdiv+1
   732  07A2  0875               	movf	___lwdiv@quotient,w
   733  07A3  00F0               	movwf	?___lwdiv
   734  07A4  0008               	return
   735  07A5                     __end_of___lwdiv:
   736  007E                     btemp	set	126	;btemp
   737  007E                     wtemp0	set	126
   738                           
   739                           	psect	config
   740                           
   741                           ;Config register CONFIG @ 0x2007
   742                           ;	Oscillator Selection bits
   743                           ;	FOSC = HS, HS oscillator
   744                           ;	Watchdog Timer Enable bit
   745                           ;	WDTE = OFF, WDT disabled
   746                           ;	Power-up Timer Enable bit
   747                           ;	PWRTE = OFF, PWRT disabled
   748                           ;	Brown-out Reset Enable bit
   749                           ;	BOREN = OFF, BOR disabled
   750                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   751                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   752                           ;	Data EEPROM Memory Code Protection bit
   753                           ;	CPD = OFF, Data EEPROM code protection off
   754                           ;	Flash Program Memory Write Enable bits
   755                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   756                           ;	In-Circuit Debugger Mode bit
   757                           ;	DEBUG = 0x1, unprogrammed default
   758                           ;	Flash Program Memory Code Protection bit
   759                           ;	CP = OFF, Code protection off
   760  2007                     	org	8199
   761  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _display->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     533
                                             10 COMMON     2     2      0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0     533
                                              8 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jan 19 02:08:17 2021

                      pc 0002                       fsr 0004                      l701 0764  
                    l731 0720                      l675 0795                      l667 0771  
                    l691 073D                      l669 077F                      l693 074B  
                    l679 07A0                      l697 0759                      _RD0 0040  
                    _RD1 0041                      u205 0796                      u235 0740  
                    u307 07EB                      u165 0774                      u255 0751  
                    u185 0780                      u265 075A                      u195 078C  
                    u297 07D5                      _dem 007C                      fsr0 0004  
                   _TMR0 0001                     _chuc 0022                     _main 0715  
                   _tram 0024                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___lwdiv 07A5          __end_of___lwmod 0769  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
        __end_of_display 07F4                    _maled 0009                    _donvi 0020  
                  _nghin 0026                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F4             __end_of_main 0737  
                 ??_main 007A                ??___lwdiv 0074                ??___lwmod 0074  
              ??_display 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_maled 0013           _OPTION_REGbits 0081               __pbssBANK0 0024  
             __pmaintext 0715               __stringtab 0003                  ___lwdiv 0769  
                ___lwmod 0737                  __ptext1 07A5                  __ptext2 0737  
                __ptext3 0769                  _display 07A5     end_of_initialization 07FC  
              _TRISDbits 0088      start_initialization 07F4              __pbssCOMMON 007C  
              ___latbits 0002                __pnvBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                __pstrings 0003  
               ?_display 0070         ___lwdiv@quotient 0075              __stringbase 0008  
       __size_of___lwdiv 003C         __size_of___lwmod 0032       __end_of__stringtab 0009  
       __size_of_display 004F          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0022         ___lwmod@dividend 0072                stringcode 0003  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 0003  
               stringtab 0003  
