

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 21 16:05:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.31
    16                           ; Generated 13/10/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0006                     _PORTB	set	6
   171  0086                     _TRISB	set	134
   172                           
   173                           	psect	cinit
   174  07FC                     start_initialization:	
   175                           ; #config settings
   176                           
   177  07FC                     __initialization:
   178  07FC                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  07FC                     __end_of__initialization:
   182  07FC  0183               	clrf	3
   183  07FD  120A  118A  2FAE   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:
   187  0070                     ?_GPIO_init:
   188  0070                     ??_GPIO_init:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_SANGHET:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_SANGHET:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_TATHET:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_TATHET:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_XENKE:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ??_XENKE:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_SANGNUA:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ??_SANGNUA:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_main:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220  0070                     	ds	3
   221  0073                     ??_main:
   222                           
   223                           ; 1 bytes @ 0x3
   224  0073                     	ds	3
   225                           
   226                           	psect	maintext
   227  07AE                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 21 in file "Blink_port.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          3       0       0       0       0
   250 ;;      Totals:         3       0       0       0       0
   251 ;;Total ram usage:        3 bytes
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		_GPIO_init
   255 ;;		_SANGHET
   256 ;;		_SANGNUA
   257 ;;		_TATHET
   258 ;;		_XENKE
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _main
   266  07AE                     _main:
   267                           
   268                           ;Blink_port.c: 23: GPIO_init();
   269                           
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272  07AE  120A  118A  2778  120A  118A  	fcall	_GPIO_init
   273  07B3                     l582:
   274                           
   275                           ;Blink_port.c: 25: {;Blink_port.c: 26: SANGHET();
   276  07B3  120A  118A  277D  120A  118A  	fcall	_SANGHET
   277                           
   278                           ;Blink_port.c: 27: _delay((unsigned long)((500)*(4000000/4000.0)));
   279  07B8  3003               	movlw	3
   280  07B9  00F5               	movwf	??_main+2
   281  07BA  308A               	movlw	138
   282  07BB  00F4               	movwf	??_main+1
   283  07BC  3055               	movlw	85
   284  07BD  00F3               	movwf	??_main
   285  07BE                     u17:
   286  07BE  0BF3               	decfsz	??_main,f
   287  07BF  2FBE               	goto	u17
   288  07C0  0BF4               	decfsz	??_main+1,f
   289  07C1  2FBE               	goto	u17
   290  07C2  0BF5               	decfsz	??_main+2,f
   291  07C3  2FBE               	goto	u17
   292  07C4  2FC5               	nop2
   293                           
   294                           ;Blink_port.c: 28: TATHET();
   295  07C5  120A  118A  2774  120A  118A  	fcall	_TATHET
   296                           
   297                           ;Blink_port.c: 29: _delay((unsigned long)((500)*(4000000/4000.0)));
   298  07CA  3003               	movlw	3
   299  07CB  00F5               	movwf	??_main+2
   300  07CC  308A               	movlw	138
   301  07CD  00F4               	movwf	??_main+1
   302  07CE  3055               	movlw	85
   303  07CF  00F3               	movwf	??_main
   304  07D0                     u27:
   305  07D0  0BF3               	decfsz	??_main,f
   306  07D1  2FD0               	goto	u27
   307  07D2  0BF4               	decfsz	??_main+1,f
   308  07D3  2FD0               	goto	u27
   309  07D4  0BF5               	decfsz	??_main+2,f
   310  07D5  2FD0               	goto	u27
   311  07D6  2FD7               	nop2
   312                           
   313                           ;Blink_port.c: 30: XENKE();
   314  07D7  120A  118A  2798  120A  118A  	fcall	_XENKE
   315                           
   316                           ;Blink_port.c: 31: _delay((unsigned long)((500)*(4000000/4000.0)));
   317  07DC  3003               	movlw	3
   318  07DD  00F5               	movwf	??_main+2
   319  07DE  308A               	movlw	138
   320  07DF  00F4               	movwf	??_main+1
   321  07E0  3055               	movlw	85
   322  07E1  00F3               	movwf	??_main
   323  07E2                     u37:
   324  07E2  0BF3               	decfsz	??_main,f
   325  07E3  2FE2               	goto	u37
   326  07E4  0BF4               	decfsz	??_main+1,f
   327  07E5  2FE2               	goto	u37
   328  07E6  0BF5               	decfsz	??_main+2,f
   329  07E7  2FE2               	goto	u37
   330  07E8  2FE9               	nop2
   331                           
   332                           ;Blink_port.c: 32: SANGNUA();
   333  07E9  120A  118A  2782  120A  118A  	fcall	_SANGNUA
   334                           
   335                           ;Blink_port.c: 33: _delay((unsigned long)((500)*(4000000/4000.0)));
   336  07EE  3003               	movlw	3
   337  07EF  00F5               	movwf	??_main+2
   338  07F0  308A               	movlw	138
   339  07F1  00F4               	movwf	??_main+1
   340  07F2  3055               	movlw	85
   341  07F3  00F3               	movwf	??_main
   342  07F4                     u47:
   343  07F4  0BF3               	decfsz	??_main,f
   344  07F5  2FF4               	goto	u47
   345  07F6  0BF4               	decfsz	??_main+1,f
   346  07F7  2FF4               	goto	u47
   347  07F8  0BF5               	decfsz	??_main+2,f
   348  07F9  2FF4               	goto	u47
   349  07FA  2FFB               	nop2
   350  07FB  2FB3               	goto	l582
   351  07FC                     __end_of_main:
   352                           
   353                           	psect	text1
   354  0798                     __ptext1:	
   355 ;; *************** function _XENKE *****************
   356 ;; Defined at:
   357 ;;		line 49 in file "Blink_port.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 300/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          3       0       0       0       0
   374 ;;      Totals:         3       0       0       0       0
   375 ;;Total ram usage:        3 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _XENKE
   386  0798                     _XENKE:
   387                           
   388                           ;Blink_port.c: 51: PORTB = 0XAA;
   389                           
   390                           ;incstack = 0
   391                           ; Regs used in _XENKE: [wreg]
   392  0798  30AA               	movlw	170
   393  0799  1283               	bcf	3,5	;RP0=0, select bank0
   394  079A  1303               	bcf	3,6	;RP1=0, select bank0
   395  079B  0086               	movwf	6	;volatile
   396                           
   397                           ;Blink_port.c: 52: _delay((unsigned long)((500)*(4000000/4000.0)));
   398  079C  3003               	movlw	3
   399  079D  00F2               	movwf	??_XENKE+2
   400  079E  308A               	movlw	138
   401  079F  00F1               	movwf	??_XENKE+1
   402  07A0  3055               	movlw	85
   403  07A1  00F0               	movwf	??_XENKE
   404  07A2                     u57:
   405  07A2  0BF0               	decfsz	??_XENKE,f
   406  07A3  2FA2               	goto	u57
   407  07A4  0BF1               	decfsz	??_XENKE+1,f
   408  07A5  2FA2               	goto	u57
   409  07A6  0BF2               	decfsz	??_XENKE+2,f
   410  07A7  2FA2               	goto	u57
   411  07A8  2FA9               	nop2
   412                           
   413                           ;Blink_port.c: 53: PORTB = 0X55;
   414  07A9  3055               	movlw	85
   415  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   416  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   417  07AC  0086               	movwf	6	;volatile
   418  07AD  0008               	return
   419  07AE                     __end_of_XENKE:
   420                           
   421                           	psect	text2
   422  0774                     __ptext2:	
   423 ;; *************** function _TATHET *****************
   424 ;; Defined at:
   425 ;;		line 45 in file "Blink_port.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		status,2
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 300/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _TATHET
   454  0774                     _TATHET:
   455                           
   456                           ;Blink_port.c: 47: PORTB = 0X00;
   457                           
   458                           ;incstack = 0
   459                           ; Regs used in _TATHET: [status,2]
   460  0774  1283               	bcf	3,5	;RP0=0, select bank0
   461  0775  1303               	bcf	3,6	;RP1=0, select bank0
   462  0776  0186               	clrf	6	;volatile
   463  0777  0008               	return
   464  0778                     __end_of_TATHET:
   465                           
   466                           	psect	text3
   467  0782                     __ptext3:	
   468 ;; *************** function _SANGNUA *****************
   469 ;; Defined at:
   470 ;;		line 55 in file "Blink_port.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 300/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          3       0       0       0       0
   487 ;;      Totals:         3       0       0       0       0
   488 ;;Total ram usage:        3 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _SANGNUA
   499  0782                     _SANGNUA:
   500                           
   501                           ;Blink_port.c: 57: PORTB = 0X0F;
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in _SANGNUA: [wreg]
   505  0782  300F               	movlw	15
   506  0783  1283               	bcf	3,5	;RP0=0, select bank0
   507  0784  1303               	bcf	3,6	;RP1=0, select bank0
   508  0785  0086               	movwf	6	;volatile
   509                           
   510                           ;Blink_port.c: 58: _delay((unsigned long)((500)*(4000000/4000.0)));
   511  0786  3003               	movlw	3
   512  0787  00F2               	movwf	??_SANGNUA+2
   513  0788  308A               	movlw	138
   514  0789  00F1               	movwf	??_SANGNUA+1
   515  078A  3055               	movlw	85
   516  078B  00F0               	movwf	??_SANGNUA
   517  078C                     u67:
   518  078C  0BF0               	decfsz	??_SANGNUA,f
   519  078D  2F8C               	goto	u67
   520  078E  0BF1               	decfsz	??_SANGNUA+1,f
   521  078F  2F8C               	goto	u67
   522  0790  0BF2               	decfsz	??_SANGNUA+2,f
   523  0791  2F8C               	goto	u67
   524  0792  2F93               	nop2
   525                           
   526                           ;Blink_port.c: 59: PORTB = 0XF0;
   527  0793  30F0               	movlw	240
   528  0794  1283               	bcf	3,5	;RP0=0, select bank0
   529  0795  1303               	bcf	3,6	;RP1=0, select bank0
   530  0796  0086               	movwf	6	;volatile
   531  0797  0008               	return
   532  0798                     __end_of_SANGNUA:
   533                           
   534                           	psect	text4
   535  077D                     __ptext4:	
   536 ;; *************** function _SANGHET *****************
   537 ;; Defined at:
   538 ;;		line 41 in file "Blink_port.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 300/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _SANGHET
   567  077D                     _SANGHET:
   568                           
   569                           ;Blink_port.c: 43: PORTB = 0X66;
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _SANGHET: [wreg]
   573  077D  3066               	movlw	102
   574  077E  1283               	bcf	3,5	;RP0=0, select bank0
   575  077F  1303               	bcf	3,6	;RP1=0, select bank0
   576  0780  0086               	movwf	6	;volatile
   577  0781  0008               	return
   578  0782                     __end_of_SANGHET:
   579                           
   580                           	psect	text5
   581  0778                     __ptext5:	
   582 ;; *************** function _GPIO_init *****************
   583 ;; Defined at:
   584 ;;		line 36 in file "Blink_port.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		status,2
   593 ;; Tracked objects:
   594 ;;		On entry : B00/0
   595 ;;		On exit  : B00/0
   596 ;;		Unchanged: 800/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _GPIO_init
   613  0778                     _GPIO_init:
   614                           
   615                           ;Blink_port.c: 38: TRISB = 0X00;
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _GPIO_init: [status,2]
   619  0778  1683               	bsf	3,5	;RP0=1, select bank1
   620  0779  0186               	clrf	6	;volatile
   621                           
   622                           ;Blink_port.c: 39: PORTB = 0X00;
   623  077A  1283               	bcf	3,5	;RP0=0, select bank0
   624  077B  0186               	clrf	6	;volatile
   625  077C  0008               	return
   626  077D                     __end_of_GPIO_init:
   627  007E                     btemp	set	126	;btemp
   628  007E                     wtemp0	set	126
   629                           
   630                           	psect	config
   631                           
   632                           ;Config register CONFIG @ 0x2007
   633                           ;	Oscillator Selection bits
   634                           ;	FOSC = XT, XT oscillator
   635                           ;	Watchdog Timer Enable bit
   636                           ;	WDTE = OFF, WDT disabled
   637                           ;	Power-up Timer Enable bit
   638                           ;	PWRTE = OFF, PWRT disabled
   639                           ;	Brown-out Reset Enable bit
   640                           ;	BOREN = OFF, BOR disabled
   641                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   642                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   643                           ;	Data EEPROM Memory Code Protection bit
   644                           ;	CPD = OFF, Data EEPROM code protection off
   645                           ;	Flash Program Memory Write Enable bits
   646                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   647                           ;	In-Circuit Debugger Mode bit
   648                           ;	DEBUG = 0x1, unprogrammed default
   649                           ;	Flash Program Memory Code Protection bit
   650                           ;	CP = OFF, Code protection off
   651  2007                     	org	8199
   652  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SANGNUA
    _main->_XENKE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                          _GPIO_init
                            _SANGHET
                            _SANGNUA
                             _TATHET
                              _XENKE
 ---------------------------------------------------------------------------------
 (1) _XENKE                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TATHET                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SANGNUA                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SANGHET                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_init
   _SANGHET
   _SANGNUA
   _TATHET
   _XENKE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 21 16:05:03 2021

                     u17 07BE                       u27 07D0                       u37 07E2  
                     u47 07F4                       u57 07A2                       u67 078C  
                    l582 07B3          __end_of_SANGHET 0782          __end_of_SANGNUA 0798  
                   _main 07AE                     btemp 007E                     start 0000  
     __size_of_GPIO_init 0005                    ?_main 0070                    _PORTB 0006  
                  _XENKE 0798                    _TRISB 0086                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073                   ?_XENKE 0070                ??_SANGHET 0070  
              ??_SANGNUA 0070        __end_of_GPIO_init 077D                   _TATHET 0774  
__end_of__initialization 07FC            __end_of_XENKE 07AE           __pcstackCOMMON 0070  
                ??_XENKE 0070                  ?_TATHET 0070               __pmaintext 07AE  
                _SANGHET 077D                  _SANGNUA 0782          __size_of_TATHET 0004  
                __ptext1 0798                  __ptext2 0774                  __ptext3 0782  
                __ptext4 077D                  __ptext5 0778     end_of_initialization 07FC  
              _GPIO_init 0778               ?_GPIO_init 0070           __end_of_TATHET 0778  
    start_initialization 07FC                 ??_TATHET 0070                 ?_SANGHET 0070  
               ?_SANGNUA 0070                ___latbits 0002              ??_GPIO_init 0070  
         __size_of_XENKE 0016         __size_of_SANGHET 0005         __size_of_SANGNUA 0016  
          __size_of_main 004E  
