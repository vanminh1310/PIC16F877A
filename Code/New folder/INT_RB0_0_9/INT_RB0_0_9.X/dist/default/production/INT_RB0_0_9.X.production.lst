

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jan 18 17:20:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.31
    14                           ; Generated 13/10/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	strings
   170  0033                     __pstrings:
   171  0033                     stringtab:
   172  0033                     __stringtab:
   173  0033                     stringcode:	
   174                           ;	String table - string pointers are 1 byte each
   175                           
   176  0033                     stringdir:
   177  0033  3000               	movlw	high stringdir
   178  0034  008A               	movwf	10
   179  0035  0804               	movf	4,w
   180  0036  0A84               	incf	4,f
   181  0037  0782               	addwf	2,f
   182  0038                     __stringbase:
   183  0038  3400               	retlw	0
   184  0039                     __end_of__stringtab:
   185  0039                     _Code7Seg:
   186  0039  343F               	retlw	63
   187  003A  3406               	retlw	6
   188  003B  345B               	retlw	91
   189  003C  344F               	retlw	79
   190  003D  3466               	retlw	102
   191  003E  346D               	retlw	109
   192  003F  347D               	retlw	125
   193  0040  3407               	retlw	7
   194  0041  347F               	retlw	127
   195  0042  346F               	retlw	111
   196  0043                     __end_of_Code7Seg:
   197  0006                     _PORTB	set	6
   198  0008                     _PORTD	set	8
   199  0059                     _INTF	set	89
   200  005C                     _INTE	set	92
   201  005F                     _GIE	set	95
   202  0088                     _TRISD	set	136
   203  040E                     _INTEDG	set	1038
   204  0430                     _TRISB0	set	1072
   205                           
   206                           	psect	cinit
   207  000F                     start_initialization:	
   208                           ; #config settings
   209                           
   210  000F                     __initialization:
   211                           
   212                           ; Clear objects allocated to COMMON
   213  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   214  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   215  0011                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  0011                     __end_of__initialization:
   219  0011  0183               	clrf	3
   220  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMMON
   223  0070                     __pbssCOMMON:
   224  0070                     _count:
   225  0070                     	ds	2
   226                           
   227                           	psect	cstackCOMMON
   228  0072                     __pcstackCOMMON:
   229  0072                     ?_main:
   230  0072                     ?_ISR:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0072                     ??_ISR:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238  0072                     	ds	2
   239  0074                     ??_main:
   240                           
   241                           	psect	maintext
   242  0015                     __pmaintext:	
   243                           ; 1 bytes @ 0x2
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 13 in file "INT_RB0_0_9.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   258 ;; Tracked objects:
   259 ;;		On entry : B00/0
   260 ;;		On exit  : B00/0
   261 ;;		Unchanged: 800/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels used:    1
   269 ;; Hardware stack levels required when called:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _main
   279  0015                     _main:
   280                           
   281                           ;INT_RB0_0_9.c: 15: TRISD = 0x00;
   282                           
   283                           ;incstack = 0
   284                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   285  0015  1683               	bsf	3,5	;RP0=1, select bank1
   286  0016  0188               	clrf	8	;volatile
   287                           
   288                           ;INT_RB0_0_9.c: 16: PORTD = 0X00;
   289  0017  1283               	bcf	3,5	;RP0=0, select bank0
   290  0018  0188               	clrf	8	;volatile
   291                           
   292                           ;INT_RB0_0_9.c: 18: TRISB0 = 1;
   293  0019  1683               	bsf	3,5	;RP0=1, select bank1
   294  001A  1406               	bsf	6,0	;volatile
   295                           
   296                           ;INT_RB0_0_9.c: 19: PORTB = 0X00;
   297  001B  1283               	bcf	3,5	;RP0=0, select bank0
   298  001C  0186               	clrf	6	;volatile
   299                           
   300                           ;INT_RB0_0_9.c: 20: GIE = 1;
   301  001D  178B               	bsf	11,7	;volatile
   302                           
   303                           ;INT_RB0_0_9.c: 21: INTE = 1;
   304  001E  160B               	bsf	11,4	;volatile
   305                           
   306                           ;INT_RB0_0_9.c: 22: INTEDG = 1;
   307  001F  1683               	bsf	3,5	;RP0=1, select bank1
   308  0020  1701               	bsf	1,6	;volatile
   309  0021                     l598:
   310                           
   311                           ;INT_RB0_0_9.c: 24: {;INT_RB0_0_9.c: 25: PORTD = Code7Seg[count];
   312  0021  0870               	movf	_count,w
   313  0022  3E01               	addlw	low ((_Code7Seg-__stringbase)| (0+32768))
   314  0023  0084               	movwf	4
   315  0024  120A  118A  2033  120A  118A  	fcall	stringdir
   316  0029  1283               	bcf	3,5	;RP0=0, select bank0
   317  002A  0088               	movwf	8	;volatile
   318                           
   319                           ;INT_RB0_0_9.c: 26: if(count==10)
   320  002B  300A               	movlw	10
   321  002C  0670               	xorwf	_count,w
   322  002D  0471               	iorwf	_count+1,w
   323  002E  1D03               	btfss	3,2
   324  002F  2821               	goto	l598
   325                           
   326                           ;INT_RB0_0_9.c: 27: {;INT_RB0_0_9.c: 28: count=0;
   327  0030  01F0               	clrf	_count
   328  0031  01F1               	clrf	_count+1
   329  0032  2821               	goto	l598
   330  0033                     __end_of_main:
   331                           
   332                           	psect	text1
   333  0043                     __ptext1:	
   334 ;; *************** function _ISR *****************
   335 ;; Defined at:
   336 ;;		line 32 in file "INT_RB0_0_9.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0
   353 ;;      Totals:         2       0       0       0       0
   354 ;;Total ram usage:        2 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		Interrupt level 1
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _ISR
   365  0043                     _ISR:
   366                           
   367                           ;INT_RB0_0_9.c: 34: if(INTF==1)
   368  0043  1C8B               	btfss	11,1	;volatile
   369  0044  284C               	goto	i1l35
   370                           
   371                           ;INT_RB0_0_9.c: 35: {;INT_RB0_0_9.c: 36: {;INT_RB0_0_9.c: 37: count++;
   372  0045  3001               	movlw	1
   373  0046  07F0               	addwf	_count,f
   374  0047  1803               	skipnc
   375  0048  0AF1               	incf	_count+1,f
   376  0049  3000               	movlw	0
   377  004A  07F1               	addwf	_count+1,f
   378                           
   379                           ;INT_RB0_0_9.c: 38: INTF=0;
   380  004B  108B               	bcf	11,1	;volatile
   381  004C                     i1l35:
   382  004C  0873               	movf	??_ISR+1,w
   383  004D  008A               	movwf	10
   384  004E  0E72               	swapf	??_ISR,w
   385  004F  0083               	movwf	3
   386  0050  0EFE               	swapf	126,f
   387  0051  0E7E               	swapf	126,w
   388  0052  0009               	retfie
   389  0053                     __end_of_ISR:
   390  007E                     btemp	set	126	;btemp
   391  007E                     wtemp0	set	126
   392                           
   393                           	psect	intentry
   394  0004                     __pintentry:	
   395                           ;incstack = 0
   396                           ; Regs used in _ISR: [wreg]
   397                           
   398  0004                     interrupt_function:
   399  007E                     saved_w	set	btemp
   400  0004  00FE               	movwf	btemp
   401  0005  0E03               	swapf	3,w
   402  0006  00F2               	movwf	??_ISR
   403  0007  080A               	movf	10,w
   404  0008  00F3               	movwf	??_ISR+1
   405  0009  120A  118A  2843   	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jan 18 17:20:05 2021

                      pc 0002                       fsr 0004                      l598 0021  
                    _GIE 005F                      _ISR 0043                      fsr0 0004  
                   ?_ISR 0072                     _INTE 005C                     _INTF 0059  
                   i1l35 004C                     _main 0015                     btemp 007E  
                   start 000C                    ??_ISR 0072                    ?_main 0072  
                  _PORTB 0006                    _PORTD 0008                    _TRISD 0088  
                  _count 0070                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Code7Seg 0043          __initialization 000F  
           __end_of_main 0033                   ??_main 0074                   _INTEDG 040E  
                 _TRISB0 0430                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0072               __pmaintext 0015               __pintentry 0004  
             __stringtab 0033                  __ptext1 0043             __size_of_ISR 0010  
   end_of_initialization 0011      start_initialization 000F              __end_of_ISR 0053  
            __pbssCOMMON 0070                ___latbits 0002                __pstrings 0033  
      interrupt_function 0004              __stringbase 0038                 _Code7Seg 0039  
     __end_of__stringtab 0039            __size_of_main 001E                 intlevel1 0000  
              stringcode 0033                 stringdir 0033                 stringtab 0033  
