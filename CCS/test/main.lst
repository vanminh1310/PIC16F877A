CCS PCM C Compiler, Version 5.015, 5967               26-Thg2-21 10:58

               Filename:   E:\PIC16F877A\CCS\test\main.lst

               ROM used:   67 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           8 (2%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   032
0003:  NOP
....................  
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #define LED PIN_D0 
.................... #define DELAY 500 
....................  
....................  
....................  
.................... #fuses NOWDT,HS,PUT,NOPROTECT 
....................  
.................... void sangdan(){ 
.................... int8 i,temp; 
.................... temp = 0x00; 
.................... for(i=0;i<=8;i++){ 
....................    output_d(temp); 
....................    temp<<=1; 
....................    temp = temp|0x01; 
....................     
....................    delay_ms(250); 
....................     
.................... } 
.................... } 
.................... void test(){ 
.................... //output_d (0xff) ; 
.................... output_d(0xff); 
0018:  BSF    03.5
0019:  CLRF   08
001A:  MOVLW  FF
001B:  BCF    03.5
001C:  MOVWF  08
.................... delay_ms(1000); 
001D:  MOVLW  04
001E:  MOVWF  22
001F:  MOVLW  FA
0020:  MOVWF  23
0021:  CALL   004
0022:  DECFSZ 22,F
0023:  GOTO   01F
.................... output_d(0x00); 
0024:  BSF    03.5
0025:  CLRF   08
0026:  BCF    03.5
0027:  CLRF   08
.................... delay_ms(1000); 
0028:  MOVLW  04
0029:  MOVWF  22
002A:  MOVLW  FA
002B:  MOVWF  23
002C:  CALL   004
002D:  DECFSZ 22,F
002E:  GOTO   02A
002F:  BCF    0A.3
0030:  BCF    0A.4
0031:  GOTO   041 (RETURN)
.................... } 
....................  
.................... void main() 
0032:  MOVF   03,W
0033:  ANDLW  1F
0034:  MOVWF  03
0035:  BSF    03.5
0036:  BSF    1F.0
0037:  BSF    1F.1
0038:  BSF    1F.2
0039:  BCF    1F.3
003A:  MOVLW  07
003B:  MOVWF  1C
003C:  BCF    03.7
.................... { 
.................... INT8 i; 
.................... set_tris_d(0x00); 
003D:  MOVLW  00
003E:  MOVWF  08
....................  
.................... //Example blinking LED program 
.................... WHILE (true) 
.................... { 
.................... test(); 
003F:  BCF    03.5
0040:  GOTO   018
0041:  GOTO   040
.................... //sangdan(); 
.................... //chedo3(); 
.................... } 
.................... } 
....................  
0042:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
