CCS PCM C Compiler, Version 5.015, 5967               04-Thg3-21 08:29

               Filename:   E:\PIC16F877A\CCS\timer0\main.lst

               ROM used:   57 words (1%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #include<16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... //#include<def_877A.h> 
.................... #fuses NOWDT,HS,PUT,NOPROTECT 
.................... #use delay(clock=20000000) 
.................... #BIT IF0=0x0B.2  // bit so 2 cua thanh ghi INTCON=0Bh la co tran timer0 
.................... void tre1s(); 
.................... void main() 
*
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
.................... {setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2);// hoat dong su dung xung noi và   
0025:  MOVF   01,W
0026:  ANDLW  C0
0027:  MOVWF  01
....................                                        //  dung bo chia truoc 1:2 
.................... output_d(0xff); 
0028:  CLRF   08
0029:  MOVLW  FF
002A:  BCF    03.5
002B:  MOVWF  08
.................... while (1) 
.................... { 
....................   output_d(0x00); 
002C:  BSF    03.5
002D:  CLRF   08
002E:  BCF    03.5
002F:  CLRF   08
....................    tre1s(); 
0030:  CALL   004
....................   output_d(0xff); 
0031:  BSF    03.5
0032:  CLRF   08
0033:  MOVLW  FF
0034:  BCF    03.5
0035:  MOVWF  08
....................    tre1s(); 
0036:  CALL   004
0037:  GOTO   02C
.................... } 
.................... } 
.................... void tre1s() 
0038:  SLEEP
.................... { int16 i; 
....................    for(i=0;i<10000;i++) //5000*500us =  
*
0004:  CLRF   22
0005:  CLRF   21
0006:  MOVF   22,W
0007:  SUBLW  27
0008:  BTFSS  03.0
0009:  GOTO   019
000A:  BTFSS  03.2
000B:  GOTO   010
000C:  MOVF   21,W
000D:  SUBLW  0F
000E:  BTFSS  03.0
000F:  GOTO   019
....................    {set_timer0(6);   //  T_dinhthi =delay= 2*(256 - 6)*1us = 500us 
0010:  MOVLW  06
0011:  MOVWF  01
.................... //INitTIMER0=6;prescaler=2(do RTCC_div_2) 
....................  
....................   while(IF0==0); 
0012:  BTFSS  0B.2
0013:  GOTO   012
....................     IF0=0; 
0014:  BCF    0B.2
0015:  INCF   21,F
0016:  BTFSC  03.2
0017:  INCF   22,F
0018:  GOTO   006
....................    } 
0019:  RETURN
.................... } 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
