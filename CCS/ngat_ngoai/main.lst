CCS PCM C Compiler, Version 5.015, 5967               11-Thg3-21 16:49

               Filename:   E:\PIC16F877A\CCS\ngat_ngoai\main.lst

               ROM used:   25 words (0%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #use delay(clock=20000000) 
.................... #byte portb=0x06 
.................... #byte portd=0x08 
.................... #INT_RB 
.................... rb_isr(); 
.................... void dsjd() 
.................... { 
.................... portd=portb; 
.................... } 
....................  
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
.................... { 
.................... set_tris_b(0xF0); 
000F:  MOVLW  F0
0010:  MOVWF  06
.................... set_tris_d(0x00); 
0011:  MOVLW  00
0012:  MOVWF  08
.................... enable_interrupts(INT_RB); 
0013:  BCF    03.5
0014:  BSF    0B.3
.................... enable_interrupts(GLOBAL); 
0015:  MOVLW  C0
0016:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
0017:  GOTO   017
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
0018:  SLEEP

Configuration Fuses:
   Word  1: 3F73   RC NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
