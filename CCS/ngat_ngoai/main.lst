CCS PCM C Compiler, Version 5.015, 5967               13-Thg3-21 21:34

               Filename:   E:\PIC16F877A\CCS\ngat_ngoai\main.lst

               ROM used:   135 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           16 (4%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   065
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.3
0018:  GOTO   01B
0019:  BTFSC  0B.0
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses NOWDT,PUT,XT,NOPROTECT 
.................... #use delay(clock=4000000) 
*
0050:  MOVLW  29
0051:  MOVWF  04
0052:  BCF    03.7
0053:  MOVF   00,W
0054:  BTFSC  03.2
0055:  GOTO   064
0056:  MOVLW  01
0057:  MOVWF  78
0058:  CLRF   77
0059:  DECFSZ 77,F
005A:  GOTO   059
005B:  DECFSZ 78,F
005C:  GOTO   058
005D:  MOVLW  4A
005E:  MOVWF  77
005F:  DECFSZ 77,F
0060:  GOTO   05F
0061:  GOTO   062
0062:  DECFSZ 00,F
0063:  GOTO   056
0064:  RETURN
.................... #use fast_io(b) 
.................... #byte portb=0x06  
.................... #byte intcon=0x000B 
.................... #bit RB4=portb.4 
.................... #bit RB5=portb.5 
.................... #bit RB6=portb.6 
.................... #bit RB7=portb.7 
.................... #bit RBIF=intcon.0 //dinh nghia co ngat RB 
.................... #bit RBIE=intcon.3 //dinh nghia bit cho phep ngat RB 
.................... int led=0,speed; 
.................... // Chuong trinh ngat 
.................... #int_RB 
.................... void ngat_RB() 
.................... { 
.................... if((RBIF)&&(RBIE))  
*
002F:  BTFSS  0B.0
0030:  GOTO   04C
0031:  BTFSS  0B.3
0032:  GOTO   04C
.................... {  
.................... //Kiem tra sw1 
.................... { 
.................... if(RB4==0) 
0033:  BTFSC  06.4
0034:  GOTO   039
.................... { 
.................... led=0b00000001; //led1 sang 
0035:  MOVLW  01
0036:  MOVWF  27
.................... speed=250; 
0037:  MOVLW  FA
0038:  MOVWF  28
.................... }  
.................... } 
.................... //Kiem tra sw2  
.................... { 
.................... if(RB5==0) 
0039:  BTFSC  06.5
003A:  GOTO   03F
.................... { 
.................... led=0b00000011; //led1,2 sang 
003B:  MOVLW  03
003C:  MOVWF  27
.................... speed=200; 
003D:  MOVLW  C8
003E:  MOVWF  28
.................... }  
.................... } 
.................... //Kiem tra sw3 
.................... { 
.................... if(RB6==0) 
003F:  BTFSC  06.6
0040:  GOTO   045
.................... { 
.................... led=0b00000111; //led1,2,3 sang 
0041:  MOVLW  07
0042:  MOVWF  27
.................... speed=150; 
0043:  MOVLW  96
0044:  MOVWF  28
.................... }  
.................... } 
.................... //Kiem tra sw4 
.................... { 
.................... if(RB7==0) 
0045:  BTFSC  06.7
0046:  GOTO   04B
.................... { 
.................... led=0b00001111; //led1,2,3,4 sang 
0047:  MOVLW  0F
0048:  MOVWF  27
.................... speed=100; 
0049:  MOVLW  64
004A:  MOVWF  28
.................... }  
.................... } 
.................... RBIF=0; //Xoa co ngat RB  
004B:  BCF    0B.0
.................... } 
004C:  BCF    0B.0
004D:  BCF    0A.3
004E:  BCF    0A.4
004F:  GOTO   01B
.................... } 
....................  
.................... void main() 
*
0065:  MOVF   03,W
0066:  ANDLW  1F
0067:  MOVWF  03
0068:  CLRF   27
0069:  BSF    03.5
006A:  BSF    1F.0
006B:  BSF    1F.1
006C:  BSF    1F.2
006D:  BCF    1F.3
006E:  MOVLW  07
006F:  MOVWF  1C
0070:  BCF    03.7
.................... { 
.................... set_tris_b(0b11110000); 
0071:  MOVLW  F0
0072:  MOVWF  06
.................... portb=0b00001111; 
0073:  MOVLW  0F
0074:  BCF    03.5
0075:  MOVWF  06
.................... enable_interrupts(global); 
0076:  MOVLW  C0
0077:  IORWF  0B,F
.................... enable_interrupts(int_RB); 
0078:  BSF    0B.3
.................... ext_int_edge(H_to_L); 
0079:  BSF    03.5
007A:  BCF    01.6
.................... while(true) 
.................... { 
.................... portb=led; 
007B:  BCF    03.5
007C:  MOVF   27,W
007D:  MOVWF  06
.................... delay_ms(speed); 
007E:  MOVF   28,W
007F:  MOVWF  29
0080:  CALL   050
.................... portb=0; 
0081:  CLRF   06
.................... delay_ms(speed);  
0082:  MOVF   28,W
0083:  MOVWF  29
0084:  CALL   050
0085:  GOTO   07C
.................... } 
.................... } 
0086:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
