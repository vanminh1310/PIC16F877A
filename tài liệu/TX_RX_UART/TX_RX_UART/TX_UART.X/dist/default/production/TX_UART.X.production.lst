

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 03 15:55:57 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0019                     _TXREG	set	25
   170  001A                     _RCREG	set	26
   171  0065                     _RCIF	set	101
   172  00C4                     _CREN	set	196
   173  00C7                     _SPEN	set	199
   174  0086                     _TRISB	set	134
   175  0099                     _SPBRG	set	153
   176  0430                     _TRISB0	set	1072
   177  0439                     _TRISC1	set	1081
   178  0438                     _TRISC0	set	1080
   179  04C1                     _TRMT	set	1217
   180  04C5                     _TXEN	set	1221
   181  04C2                     _BRGH	set	1218
   182  04C6                     _TX9	set	1222
   183  04C4                     _SYNC	set	1220
   184  043E                     _TRISC6	set	1086
   185  043F                     _TRISC7	set	1087
   186                           
   187                           	psect	strings
   188  0003                     __pstrings:
   189  0003                     stringtab:
   190  0003                     __stringtab:
   191  0003                     stringcode:	
   192                           ;	String table - string pointers are 1 byte each
   193                           
   194  0003                     stringdir:
   195  0003  3000               	movlw	high stringdir
   196  0004  008A               	movwf	10
   197  0005  0804               	movf	4,w
   198  0006  0A84               	incf	4,f
   199  0007  0782               	addwf	2,f
   200  0008                     __stringbase:
   201  0008  3400               	retlw	0
   202  0009                     __end_of__stringtab:
   203  0009                     STR_1:
   204  0009  3442               	retlw	66	;'B'
   205  000A  3461               	retlw	97	;'a'
   206  000B  3469               	retlw	105	;'i'
   207  000C  3420               	retlw	32	;' '
   208  000D  3454               	retlw	84	;'T'
   209  000E  3461               	retlw	97	;'a'
   210  000F  3470               	retlw	112	;'p'
   211  0010  3420               	retlw	32	;' '
   212  0011  344C               	retlw	76	;'L'
   213  0012  346F               	retlw	111	;'o'
   214  0013  346E               	retlw	110	;'n'
   215  0014  3420               	retlw	32	;' '
   216  0015  3449               	retlw	73	;'I'
   217  0016  3454               	retlw	84	;'T'
   218  0017  3453               	retlw	83	;'S'
   219  0018  3435               	retlw	53	;'5'
   220  0019  3439               	retlw	57	;'9'
   221  001A  3400               	retlw	0
   222                           
   223                           	psect	cinit
   224  07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227  07FC                     __initialization:
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2FC7   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236  0070                     __pcstackCOMMON:
   237  0070                     ?_UART_init:
   238  0070                     ??_UART_init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_UART_read:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??_UART_read:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_UART_write:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_UART_write:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_UART_printf:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     UART_write@data:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	1
   265  0071                     ??_UART_printf:
   266                           
   267                           ; 1 bytes @ 0x1
   268  0071                     	ds	1
   269  0072                     UART_printf@s:
   270                           
   271                           ; 1 bytes @ 0x2
   272  0072                     	ds	1
   273  0073                     ??_main:
   274                           
   275                           	psect	maintext
   276  07C7                     __pmaintext:	
   277                           ; 1 bytes @ 0x3
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 14 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  dato_rx         1    0        unsigned char 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 300/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         1       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         1       0       0       0       0
   301 ;;Total ram usage:        1 bytes
   302 ;; Hardware stack levels required when called:    2
   303 ;; This function calls:
   304 ;;		_UART_init
   305 ;;		_UART_printf
   306 ;;		_UART_read
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  07C7                     _main:
   315                           
   316                           ;main.c: 16: char dato_rx;;main.c: 17: TRISB = TRISC0 = TRISC1 = 0;
   317                           
   318                           ;incstack = 0
   319                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   320  07C7  1683               	bsf	3,5	;RP0=1, select bank1
   321  07C8  1087               	bcf	7,1	;volatile
   322  07C9  1007               	bcf	7,0	;volatile
   323  07CA  3000               	movlw	0
   324  07CB  1807               	btfsc	7,0	;volatile
   325  07CC  3001               	movlw	1
   326  07CD  0086               	movwf	6	;volatile
   327                           
   328                           ;main.c: 18: TRISB0 = 0;
   329  07CE  1006               	bcf	6,0	;volatile
   330                           
   331                           ;main.c: 21: UART_init();
   332  07CF  120A  118A  27B9  120A  118A  	fcall	_UART_init
   333                           
   334                           ;main.c: 22: UART_printf("Bai Tap Lon ITS59");
   335  07D4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   336  07D5  120A  118A  27E0  120A  118A  	fcall	_UART_printf
   337  07DA                     l651:
   338  07DA  120A  118A  27AA  120A  118A  	fcall	_UART_read
   339  07DF  2FDA               	goto	l651
   340  07E0                     __end_of_main:
   341                           
   342                           	psect	text1
   343  07AA                     __ptext1:	
   344 ;; *************** function _UART_read *****************
   345 ;; Defined at:
   346 ;;		line 21 in file "UART.h"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      unsigned char 
   353 ;; Registers used:
   354 ;;		wreg
   355 ;; Tracked objects:
   356 ;;		On entry : 200/0
   357 ;;		On exit  : 300/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; This function calls:
   367 ;;		Nothing
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _UART_read
   375  07AA                     _UART_read:
   376                           
   377                           ;UART.h: 23: if (RCIF == 1)
   378                           
   379                           ;incstack = 0
   380                           ; Regs used in _UART_read: [wreg]
   381  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   382  07AB  1E8C               	btfss	12,5	;volatile
   383  07AC  2FAF               	goto	l613
   384                           
   385                           ;UART.h: 24: return RCREG;
   386  07AD  081A               	movf	26,w	;volatile
   387  07AE  0008               	return
   388  07AF                     l613:
   389                           
   390                           ;UART.h: 25: else;UART.h: 26: return 0;
   391  07AF  3000               	movlw	0
   392  07B0  0008               	return
   393  07B1                     __end_of_UART_read:
   394                           
   395                           	psect	text2
   396  07E0                     __ptext2:	
   397 ;; *************** function _UART_printf *****************
   398 ;; Defined at:
   399 ;;		line 35 in file "UART.h"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  s               1    wreg     PTR unsigned char 
   402 ;;		 -> STR_1(18), 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  s               1    2[COMMON] PTR unsigned char 
   405 ;;		 -> STR_1(18), 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 200/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         1       0       0       0       0
   417 ;;      Temps:          1       0       0       0       0
   418 ;;      Totals:         2       0       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; Hardware stack levels required when called:    1
   422 ;; This function calls:
   423 ;;		_UART_write
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           
   430                           ;psect for function _UART_printf
   431  07E0                     _UART_printf:
   432                           
   433                           ;incstack = 0
   434                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   435                           ;UART_printf@s stored from wreg
   436  07E0  00F2               	movwf	UART_printf@s
   437  07E1                     l641:	
   438                           ;UART.h: 37: while(*s !=0x00){
   439                           
   440  07E1  0872               	movf	UART_printf@s,w
   441  07E2  0084               	movwf	4
   442  07E3  120A  118A  2003  120A  118A  	fcall	stringdir
   443  07E8  3A00               	xorlw	0
   444  07E9  1903               	btfsc	3,2
   445  07EA  0008               	return
   446                           
   447                           ;UART.h: 38: UART_write(*s);
   448  07EB  0872               	movf	UART_printf@s,w
   449  07EC  0084               	movwf	4
   450  07ED  120A  118A  2003  120A  118A  	fcall	stringdir
   451  07F2  120A  118A  27B1  120A  118A  	fcall	_UART_write
   452                           
   453                           ;UART.h: 39: s++;
   454  07F7  3001               	movlw	1
   455  07F8  00F1               	movwf	??_UART_printf
   456  07F9  0871               	movf	??_UART_printf,w
   457  07FA  07F2               	addwf	UART_printf@s,f
   458  07FB  2FE1               	goto	l641
   459  07FC                     __end_of_UART_printf:
   460                           
   461                           	psect	text3
   462  07B1                     __ptext3:	
   463 ;; *************** function _UART_write *****************
   464 ;; Defined at:
   465 ;;		line 29 in file "UART.h"
   466 ;; Parameters:    Size  Location     Type
   467 ;;  data            1    wreg     unsigned char 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  data            1    0[COMMON] unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg
   474 ;; Tracked objects:
   475 ;;		On entry : 200/0
   476 ;;		On exit  : 300/100
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         1       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0
   482 ;;      Totals:         1       0       0       0       0
   483 ;;Total ram usage:        1 bytes
   484 ;; Hardware stack levels used:    1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_UART_printf
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _UART_write
   494  07B1                     _UART_write:
   495                           
   496                           ;incstack = 0
   497                           ; Regs used in _UART_write: [wreg]
   498                           ;UART_write@data stored from wreg
   499  07B1  00F0               	movwf	UART_write@data
   500                           
   501                           ;UART.h: 31: TXREG = data;
   502  07B2  0870               	movf	UART_write@data,w
   503  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   504  07B4  0099               	movwf	25	;volatile
   505  07B5                     l45:	
   506                           ;UART.h: 32: while(TRMT == 0);
   507                           
   508  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   509  07B6  1898               	btfsc	24,1	;volatile
   510  07B7  0008               	return
   511  07B8  2FB5               	goto	l45
   512  07B9                     __end_of_UART_write:
   513                           
   514                           	psect	text4
   515  07B9                     __ptext4:	
   516 ;; *************** function _UART_init *****************
   517 ;; Defined at:
   518 ;;		line 7 in file "UART.h"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg
   527 ;; Tracked objects:
   528 ;;		On entry : B00/100
   529 ;;		On exit  : B00/0
   530 ;;		Unchanged: 800/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _UART_init
   547  07B9                     _UART_init:
   548                           
   549                           ;UART.h: 9: TRISC7 = 1;
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in _UART_init: [wreg]
   553  07B9  1787               	bsf	7,7	;volatile
   554                           
   555                           ;UART.h: 10: TRISC6 = 0;
   556  07BA  1307               	bcf	7,6	;volatile
   557                           
   558                           ;UART.h: 12: SYNC = 0;
   559  07BB  1218               	bcf	24,4	;volatile
   560                           
   561                           ;UART.h: 13: TX9 = 0;
   562  07BC  1318               	bcf	24,6	;volatile
   563                           
   564                           ;UART.h: 14: BRGH = 1;
   565  07BD  1518               	bsf	24,2	;volatile
   566                           
   567                           ;UART.h: 15: SPBRG = 16;
   568  07BE  3010               	movlw	16
   569  07BF  0099               	movwf	25	;volatile
   570                           
   571                           ;UART.h: 16: SPEN = 1;
   572  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   573  07C1  1798               	bsf	24,7	;volatile
   574                           
   575                           ;UART.h: 17: TXEN = 1;
   576  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   577  07C3  1698               	bsf	24,5	;volatile
   578                           
   579                           ;UART.h: 18: CREN = 1;
   580  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   581  07C5  1618               	bsf	24,4	;volatile
   582  07C6  0008               	return
   583  07C7                     __end_of_UART_init:
   584  007E                     btemp	set	126	;btemp
   585  007E                     wtemp0	set	126

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_printf@s	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      88
                                              3 COMMON     1     1      0
                          _UART_init
                        _UART_printf
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     2      0      87
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 03 15:55:57 2020

                      pc 0002                       l45 07B5                       fsr 0004  
                    l613 07AF                      l641 07E1                      l651 07DA  
                    _TX9 04C6                      fsr0 0004                     STR_1 0009  
                   _BRGH 04C2                     _CREN 00C4                     _RCIF 0065  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 07C7                     btemp 007E  
                   start 0000                    ?_main 0070                    _RCREG 001A  
                  _SPBRG 0099                    _TRISB 0086                    _TXREG 0019  
     __size_of_UART_init 000E       __size_of_UART_read 0007              ?_UART_write 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07E0                   ??_main 0073  
                 _TRISB0 0430                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC6 043E                   _TRISC7 043F        __end_of_UART_init 07C7  
      __end_of_UART_read 07B1      __size_of_UART_write 0008             ?_UART_printf 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07C7  
           ??_UART_write 0070               __stringtab 0003       __end_of_UART_write 07B9  
                __ptext1 07AA                  __ptext2 07E0                  __ptext3 07B1  
                __ptext4 07B9     __size_of_UART_printf 001C     end_of_initialization 07FC  
              _UART_init 07B9                _UART_read 07AA               ?_UART_init 0070  
             ?_UART_read 0070      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003              ??_UART_init 0070              ??_UART_read 0070  
          ??_UART_printf 0071              __stringbase 0008           UART_write@data 0070  
     __end_of__stringtab 0009      __end_of_UART_printf 07FC            __size_of_main 0019  
           UART_printf@s 0072                stringcode 0003              _UART_printf 07E0  
               stringdir 0003                 stringtab 0003               _UART_write 07B1  
