

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Sep 07 11:01:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169  0078                     __pnvCOMMON:	
   170  0078                     _old_PORTB:	
   171  0078                     	ds	1
   172  000B                     _INTCON	set	11
   173  0008                     _PORTD	set	8
   174  0006                     _PORTB	set	6
   175  0058                     _RBIF	set	88
   176  0081                     _OPTION_REG	set	129
   177  0088                     _TRISD	set	136
   178  0430                     _TRISB0	set	1072
   179                           
   180                           	psect	cinit
   181  000F                     start_initialization:	
   182                           ; #config settings
   183                           
   184  000F                     __initialization:	
   185                           
   186                           ; Clear objects allocated to COMMON
   187  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   188  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   189  0011                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  0011                     __end_of__initialization:	
   193  0011  0183               	clrf	3
   194  0012  120A  118A  284E   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197  0076                     __pbssCOMMON:	
   198  0076                     _i:	
   199  0076                     	ds	2
   200                           
   201                           	psect	cstackCOMMON
   202  0070                     __pcstackCOMMON:	
   203  0070                     ?_ISR:	
   204  0070                     ??_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_main:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212  0070                     	ds	3
   213  0073                     ISR@new_PORTB:	
   214                           
   215                           ; 1 bytes @ 0x3
   216  0073                     	ds	1
   217  0074                     ISR@key_pressed:	
   218                           
   219                           ; 1 bytes @ 0x4
   220  0074                     	ds	1
   221  0075                     ??_main:	
   222                           
   223                           ; 1 bytes @ 0x5
   224  0075                     	ds	1
   225                           
   226                           	psect	maintext
   227  004E                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 43 in file "newmain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : B00/0
   245 ;;		Unchanged: 800/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          1       0       0       0       0
   250 ;;      Totals:         1       0       0       0       0
   251 ;;Total ram usage:        1 bytes
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           
   261                           ;psect for function _main
   262  004E                     _main:	
   263                           
   264                           ;newmain.c: 46: TRISB0=0xFF;
   265                           
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0]
   268  004E  1683               	bsf	3,5	;RP0=1, select bank1
   269  004F  1406               	bsf	6,0	;volatile
   270                           
   271                           ;newmain.c: 49: TRISD=0;
   272  0050  0188               	clrf	8	;volatile
   273                           
   274                           ;newmain.c: 50: PORTD=0;
   275  0051  1283               	bcf	3,5	;RP0=0, select bank0
   276  0052  0188               	clrf	8	;volatile
   277                           
   278                           ;newmain.c: 53: old_PORTB = PORTB;
   279  0053  0806               	movf	6,w	;volatile
   280  0054  00F5               	movwf	??_main
   281  0055  0875               	movf	??_main,w
   282  0056  00F8               	movwf	_old_PORTB
   283                           
   284                           ;newmain.c: 56: OPTION_REG |= 0b00000000;
   285  0057  1683               	bsf	3,5	;RP0=1, select bank1
   286  0058  0801               	movf	1,w	;volatile
   287                           
   288                           ;newmain.c: 57: INTCON |= 0b10011000;
   289  0059  3098               	movlw	152
   290  005A  00F5               	movwf	??_main
   291  005B  0875               	movf	??_main,w
   292  005C  048B               	iorwf	11,f	;volatile
   293  005D                     l604:	
   294                           
   295                           ;newmain.c: 59: PORTD=0x00;
   296  005D  1283               	bcf	3,5	;RP0=0, select bank0
   297  005E  0188               	clrf	8	;volatile
   298  005F  285D               	goto	l604
   299  0060                     __end_of_main:	
   300                           
   301                           	psect	text1
   302  0015                     __ptext1:	
   303 ;; *************** function _ISR *****************
   304 ;; Defined at:
   305 ;;		line 23 in file "newmain.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  key_pressed     1    4[COMMON] unsigned char 
   310 ;;  new_PORTB       1    3[COMMON] unsigned char 
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   320 ;;      Params:         0       0       0       0       0
   321 ;;      Locals:         2       0       0       0       0
   322 ;;      Temps:          3       0       0       0       0
   323 ;;      Totals:         5       0       0       0       0
   324 ;;Total ram usage:        5 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		Interrupt level 1
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _ISR
   335  0015                     _ISR:	
   336                           
   337                           ;newmain.c: 25: unsigned char key_pressed;;newmain.c: 26: unsigned char new_PORTB = PORT
      +                          B;
   338  0015  1283               	bcf	3,5	;RP0=0, select bank0
   339  0016  1303               	bcf	3,6	;RP1=0, select bank0
   340  0017  0806               	movf	6,w	;volatile
   341  0018  00F0               	movwf	??_ISR
   342  0019  0870               	movf	??_ISR,w
   343  001A  00F3               	movwf	ISR@new_PORTB
   344                           
   345                           ;newmain.c: 27: key_pressed = old_PORTB ^ new_PORTB;
   346  001B  0878               	movf	_old_PORTB,w
   347  001C  0673               	xorwf	ISR@new_PORTB,w
   348  001D  00F0               	movwf	??_ISR
   349  001E  0870               	movf	??_ISR,w
   350  001F  00F4               	movwf	ISR@key_pressed
   351                           
   352                           ;newmain.c: 28: if(key_pressed & (1<<4)) {
   353  0020  1E74               	btfss	ISR@key_pressed,4
   354  0021  2824               	goto	i1l23
   355                           
   356                           ;newmain.c: 29: PORTD = (1<<4);
   357  0022  3010               	movlw	16
   358  0023  282F               	goto	L3
   359  0024                     i1l23:	
   360                           ;newmain.c: 30: } else if(key_pressed & (1<<5)) {
   361                           
   362  0024  1EF4               	btfss	ISR@key_pressed,5
   363  0025  2828               	goto	i1l25
   364                           
   365                           ;newmain.c: 31: PORTD = (1<<5);
   366  0026  3020               	movlw	32
   367  0027  282F               	goto	L3
   368  0028                     i1l25:	
   369                           ;newmain.c: 32: } else if(key_pressed & (1<<6)) {
   370                           
   371  0028  1F74               	btfss	ISR@key_pressed,6
   372  0029  282C               	goto	i1l27
   373                           
   374                           ;newmain.c: 33: PORTD = (1<<6);
   375  002A  3040               	movlw	64
   376  002B  282F               	goto	L3
   377  002C                     i1l27:	
   378                           ;newmain.c: 34: } else if(key_pressed & (1<<7)) {
   379                           
   380  002C  1FF4               	btfss	ISR@key_pressed,7
   381  002D  2830               	goto	i1l586
   382                           
   383                           ;newmain.c: 35: PORTD = (1<<7);
   384  002E  3080               	movlw	128
   385  002F                     L3:	
   386  002F  0088               	movwf	8	;volatile
   387  0030                     i1l586:	
   388                           ;newmain.c: 36: } else {
   389                           
   390                           
   391                           ;newmain.c: 38: };newmain.c: 39: for(i=0; i<= 50000; i++);
   392  0030  01F6               	clrf	_i
   393  0031  01F7               	clrf	_i+1
   394  0032  30C3               	movlw	195
   395  0033  0277               	subwf	_i+1,w
   396  0034  3051               	movlw	81
   397  0035  1903               	skipnz
   398  0036  0276               	subwf	_i,w
   399  0037  1803               	btfsc	3,0
   400  0038  2846               	goto	i1l32
   401  0039                     i1l592:	
   402  0039  3001               	movlw	1
   403  003A  07F6               	addwf	_i,f
   404  003B  1803               	skipnc
   405  003C  0AF7               	incf	_i+1,f
   406  003D  3000               	movlw	0
   407  003E  07F7               	addwf	_i+1,f
   408  003F  30C3               	movlw	195
   409  0040  0277               	subwf	_i+1,w
   410  0041  3051               	movlw	81
   411  0042  1903               	skipnz
   412  0043  0276               	subwf	_i,w
   413  0044  1C03               	skipc
   414  0045  2839               	goto	i1l592
   415  0046                     i1l32:	
   416                           
   417                           ;newmain.c: 40: RBIF=0;
   418  0046  100B               	bcf	11,0	;volatile
   419  0047  0872               	movf	??_ISR+2,w
   420  0048  008A               	movwf	10
   421  0049  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   422  004A  0083               	movwf	3
   423  004B  0EFE               	swapf	126,f
   424  004C  0E7E               	swapf	126,w
   425  004D  0009               	retfie
   426  004E                     __end_of_ISR:	
   427  007E                     btemp	set	126	;btemp
   428  007E                     wtemp0	set	126
   429                           
   430                           	psect	intentry
   431  0004                     __pintentry:	
   432                           ;incstack = 0
   433                           ; Regs used in _ISR: [wreg+status,2+status,0]
   434                           
   435  0004                     interrupt_function:	
   436  007E                     saved_w	set	btemp
   437  0004  00FE               	movwf	btemp
   438  0005  0E03               	swapf	3,w
   439  0006  00F1               	movwf	??_ISR+1
   440  0007  080A               	movf	10,w
   441  0008  00F2               	movwf	??_ISR+2
   442  0009  120A  118A  2815   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Sep 07 11:01:17 2020

                      _i 0076                      l604 005D                      _ISR 0015  
                   ?_ISR 0070                     i1l23 0024                     i1l32 0046  
                   _RBIF 0058                     i1l25 0028                     i1l27 002C  
                   _main 004E                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l592 0039  
                  i1l586 0030                    _PORTB 0006                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0060  
                 ??_main 0075                   _INTCON 000B                   _TRISB0 0430  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
             __pnvCOMMON 0078               __pmaintext 004E               __pintentry 0004  
         ISR@key_pressed 0074                  __ptext1 0015             __size_of_ISR 0039  
   end_of_initialization 0011      start_initialization 000F              __end_of_ISR 004E  
           ISR@new_PORTB 0073              __pbssCOMMON 0076                ___latbits 0002  
              _old_PORTB 0078        interrupt_function 0004            __size_of_main 0012  
               intlevel1 0000               _OPTION_REG 0081  
