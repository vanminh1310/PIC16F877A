

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Sep 05 09:03:05 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	FNCALL	intlevel1,_ISR
    44                           	global	intlevel1
    45                           	FNROOT	intlevel1
    46                           	global	_i
    47                           	global	_old_PORTB
    48                           psect	nvCOMMON,class=COMMON,space=1
    49                           global __pnvCOMMON
    50  0079                     __pnvCOMMON:
    51  0079                     _old_PORTB:
    52  0079                            ds      1
    53                           
    54                           	global	_INTCON
    55  000B                     _INTCON	set	11
    56                           	global	_PORTB
    57  0006                     _PORTB	set	6
    58                           	global	_PORTD
    59  0008                     _PORTD	set	8
    60                           	global	_RBIF
    61  0058                     _RBIF	set	88
    62                           	global	_OPTION_REG
    63  0081                     _OPTION_REG	set	129
    64                           	global	_TRISD
    65  0088                     _TRISD	set	136
    66                           	global	_TRISB0
    67  0430                     _TRISB0	set	1072
    68                           	file	"C:\Users\BinhNGO\AppData\Local\Temp\sgpo."
    69                           	line	#
    70                           psect cinit,class=CODE,delta=2
    71                           global start_initialization
    72  0081                     start_initialization:
    73                           
    74                           psect	bssCOMMON,class=COMMON,space=1
    75                           global __pbssCOMMON
    76  0077                     __pbssCOMMON:
    77  0077                     _i:
    78  0077                            ds      2
    79                           
    80                           ; Clear objects allocated to COMMON
    81                           psect cinit,class=CODE,delta=2
    82  0081  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
    83  0082  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
    84                           psect cinit,class=CODE,delta=2
    85                           global end_of_initialization
    86                           
    87                           ;End of C runtime variable initialization code
    88                           
    89  0083                     end_of_initialization:
    90  0083  0183               clrf status
    91  0084  120A  118A  2866   ljmp _main	;jump to C main() function
    92                           psect	cstackCOMMON,class=COMMON,space=1
    93                           global __pcstackCOMMON
    94  0070                     __pcstackCOMMON:
    95                           	global	?_ISR
    96  0070                     ?_ISR:	; 0 bytes @ 0x0
    97                           	global	??_ISR
    98  0070                     ??_ISR:	; 0 bytes @ 0x0
    99                           	global	?_main
   100  0070                     ?_main:	; 0 bytes @ 0x0
   101  0070                     	ds	5
   102                           	global	ISR@new_PORTB
   103  0075                     ISR@new_PORTB:	; 1 bytes @ 0x5
   104  0075                     	ds	1
   105                           	global	ISR@key_pressed
   106  0076                     ISR@key_pressed:	; 1 bytes @ 0x6
   107  0076                     	ds	1
   108                           psect	cstackBANK0,class=BANK0,space=1
   109                           global __pcstackBANK0
   110  0020                     __pcstackBANK0:
   111                           	global	??_main
   112  0020                     ??_main:	; 0 bytes @ 0x0
   113  0020                     	ds	1
   114 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 1 stack 0
   115 ;;Auto spaces:   Size  Autos    Used
   116 ;; COMMON          14      7      10
   117 ;; BANK0           80      1       1
   118 ;; BANK1           80      0       0
   119 ;; BANK3           96      0       0
   120 ;; BANK2           96      0       0
   121                           
   122 ;;
   123 ;; Pointer list with targets:
   124                           
   125                           
   126                           
   127 ;;
   128 ;; Critical Paths under _main in COMMON
   129 ;;
   130 ;;   None.
   131 ;;
   132 ;; Critical Paths under _ISR in COMMON
   133 ;;
   134 ;;   None.
   135 ;;
   136 ;; Critical Paths under _main in BANK0
   137 ;;
   138 ;;   None.
   139 ;;
   140 ;; Critical Paths under _ISR in BANK0
   141 ;;
   142 ;;   None.
   143 ;;
   144 ;; Critical Paths under _main in BANK1
   145 ;;
   146 ;;   None.
   147 ;;
   148 ;; Critical Paths under _ISR in BANK1
   149 ;;
   150 ;;   None.
   151 ;;
   152 ;; Critical Paths under _main in BANK3
   153 ;;
   154 ;;   None.
   155 ;;
   156 ;; Critical Paths under _ISR in BANK3
   157 ;;
   158 ;;   None.
   159 ;;
   160 ;; Critical Paths under _main in BANK2
   161 ;;
   162 ;;   None.
   163 ;;
   164 ;; Critical Paths under _ISR in BANK2
   165 ;;
   166 ;;   None.
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   170 ;;
   171                           
   172 ;;
   173 ;;Call Graph Tables:
   174 ;;
   175 ;; ---------------------------------------------------------------------------------
   176 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   177 ;; ---------------------------------------------------------------------------------
   178 ;; (0) _main                                                 1     1      0       0
   179 ;;                                              0 BANK0      1     1      0
   180 ;; ---------------------------------------------------------------------------------
   181 ;; Estimated maximum stack depth 0
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   184 ;; ---------------------------------------------------------------------------------
   185 ;; (1) _ISR                                                  7     7      0      75
   186 ;;                                              0 COMMON     7     7      0
   187 ;; ---------------------------------------------------------------------------------
   188 ;; Estimated maximum stack depth 1
   189 ;; ---------------------------------------------------------------------------------
   190                           
   191 ;; Call Graph Graphs:
   192                           
   193 ;; _main (ROOT)
   194 ;;
   195 ;; _ISR (ROOT)
   196 ;;
   197                           
   198 ;; Address spaces:
   199                           
   200 ;;Name               Size   Autos  Total    Cost      Usage
   201 ;;BITCOMMON            E      0       0       0        0.0%
   202 ;;EEDATA             100      0       0       0        0.0%
   203 ;;NULL                 0      0       0       0        0.0%
   204 ;;CODE                 0      0       0       0        0.0%
   205 ;;COMMON               E      7       A       1       71.4%
   206 ;;BITSFR0              0      0       0       1        0.0%
   207 ;;SFR0                 0      0       0       1        0.0%
   208 ;;BITSFR1              0      0       0       2        0.0%
   209 ;;SFR1                 0      0       0       2        0.0%
   210 ;;STACK                0      0       0       2        0.0%
   211 ;;ABS                  0      0       B       3        0.0%
   212 ;;BITBANK0            50      0       0       4        0.0%
   213 ;;BITSFR3              0      0       0       4        0.0%
   214 ;;SFR3                 0      0       0       4        0.0%
   215 ;;BANK0               50      1       1       5        1.3%
   216 ;;BITSFR2              0      0       0       5        0.0%
   217 ;;SFR2                 0      0       0       5        0.0%
   218 ;;BITBANK1            50      0       0       6        0.0%
   219 ;;BANK1               50      0       0       7        0.0%
   220 ;;BITBANK3            60      0       0       8        0.0%
   221 ;;BANK3               60      0       0       9        0.0%
   222 ;;BITBANK2            60      0       0      10        0.0%
   223 ;;BANK2               60      0       0      11        0.0%
   224 ;;DATA                 0      0       B      12        0.0%
   225                           
   226                           	global	_main
   227                           psect	maintext,global,class=CODE,delta=2
   228                           global __pmaintext
   229  0066                     __pmaintext:
   230                           
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 37 in file "newmain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;		None               void
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0
   242 ;; Tracked objects:
   243 ;;		On entry : 17F/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       1       0       0       0
   250 ;;      Totals:         0       1       0       0       0
   251 ;;Total ram usage:        1 bytes
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           psect	maintext
   260                           	file	"newmain.c"
   261                           	line	37
   262                           	global	__size_of_main
   263  001B                     	__size_of_main	equ	__end_of_main-_main
   264                           	
   265  0066                     _main:	
   266                           	opt	stack 7
   267                           ; Regs used in _main: [wreg+status,2+status,0]
   268                           	line	39
   269                           	
   270  0066                     l1874:	
   271                           ;newmain.c: 39: TRISB0=0xFF;
   272  0066  1683               	bsf	status, 5	;RP0=1, select bank1
   273  0067  1303               	bcf	status, 6	;RP1=0, select bank1
   274  0068  1406               	bsf	(1072/8)^080h,(1072)&7
   275                           	line	42
   276                           	
   277  0069                     l1876:	
   278                           ;newmain.c: 42: TRISD=0;
   279  0069  0188               	clrf	(136)^080h	;volatile
   280                           	line	43
   281                           ;newmain.c: 43: PORTD=0;
   282  006A  1283               	bcf	status, 5	;RP0=0, select bank0
   283  006B  1303               	bcf	status, 6	;RP1=0, select bank0
   284  006C  0188               	clrf	(8)	;volatile
   285                           	line	46
   286                           	
   287  006D                     l1878:	
   288                           ;newmain.c: 46: old_PORTB = PORTB;
   289  006D  0806               	movf	(6),w	;volatile
   290  006E  00A0               	movwf	(??_main+0)+0
   291  006F  0820               	movf	(??_main+0)+0,w
   292  0070  00F9               	movwf	(_old_PORTB)
   293                           	line	49
   294                           	
   295  0071                     l1880:	
   296                           ;newmain.c: 49: OPTION_REG |= 0b00000000;
   297  0071  1683               	bsf	status, 5	;RP0=1, select bank1
   298  0072  1303               	bcf	status, 6	;RP1=0, select bank1
   299  0073  0801               	movf	(129)^080h,w	;volatile
   300                           	line	50
   301                           	
   302  0074                     l1882:	
   303                           ;newmain.c: 50: INTCON |= 0b10011000;
   304  0074  3098               	movlw	(098h)
   305  0075  1283               	bcf	status, 5	;RP0=0, select bank0
   306  0076  1303               	bcf	status, 6	;RP1=0, select bank0
   307  0077  00A0               	movwf	(??_main+0)+0
   308  0078  0820               	movf	(??_main+0)+0,w
   309  0079  048B               	iorwf	(11),f	;volatile
   310  007A  287B               	goto	l1884
   311                           	line	51
   312                           ;newmain.c: 51: while(1) {
   313                           	
   314  007B                     l702:	
   315                           	line	52
   316                           	
   317  007B                     l1884:	
   318                           ;newmain.c: 52: PORTD=0x00;
   319  007B  0188               	clrf	(8)	;volatile
   320  007C  287B               	goto	l1884
   321                           	line	53
   322                           	
   323  007D                     l703:	
   324                           	line	51
   325  007D  287B               	goto	l1884
   326                           	
   327  007E                     l704:	
   328                           	line	54
   329                           	
   330  007E                     l705:	
   331                           	global	start
   332  007E  120A  118A  2812   	ljmp	start
   333                           	opt stack 0
   334                           GLOBAL	__end_of_main
   335  0081                     	__end_of_main:
   336 ;; =============== function _main ends ============
   337                           
   338                           	signat	_main,88
   339                           	global	_ISR
   340                           psect	text72,local,class=CODE,delta=2
   341                           global __ptext72
   342  0015                     __ptext72:
   343                           
   344 ;; *************** function _ISR *****************
   345 ;; Defined at:
   346 ;;		line 17 in file "newmain.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  key_pressed     1    6[COMMON] unsigned char 
   351 ;;  new_PORTB       1    5[COMMON] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;		None               void
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         2       0       0       0       0
   363 ;;      Temps:          5       0       0       0       0
   364 ;;      Totals:         7       0       0       0       0
   365 ;;Total ram usage:        7 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		Interrupt level 1
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           psect	text72
   374                           	file	"newmain.c"
   375                           	line	17
   376                           	global	__size_of_ISR
   377  0051                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   378                           	
   379  0015                     _ISR:	
   380                           	opt	stack 7
   381                           ; Regs used in _ISR: [wreg+status,2+status,0]
   382                           psect	intentry,class=CODE,delta=2
   383                           global __pintentry
   384  0004                     __pintentry:
   385                           global interrupt_function
   386  0004                     interrupt_function:
   387                           	global saved_w
   388  007E                     	saved_w	set	btemp+0
   389  0004  00FE               	movwf	saved_w
   390  0005  0E03               	swapf	status,w
   391  0006  00F1               	movwf	(??_ISR+1)
   392  0007  0804               	movf	fsr0,w
   393  0008  00F2               	movwf	(??_ISR+2)
   394  0009  080A               	movf	pclath,w
   395  000A  00F3               	movwf	(??_ISR+3)
   396  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   397  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   398  000D  087F               	movf	btemp+1,w
   399  000E  00F4               	movwf	(??_ISR+4)
   400  000F  120A  118A  2815   	ljmp	_ISR
   401                           psect	text72
   402                           	line	19
   403                           	
   404  0015                     i1l1074:	
   405                           ;newmain.c: 18: unsigned char key_pressed;
   406                           ;newmain.c: 19: unsigned char new_PORTB = PORTB;
   407  0015  0806               	movf	(6),w	;volatile
   408  0016  00F0               	movwf	(??_ISR+0)+0
   409  0017  0870               	movf	(??_ISR+0)+0,w
   410  0018  00F5               	movwf	(ISR@new_PORTB)
   411                           	line	20
   412                           	
   413  0019                     i1l1076:	
   414                           ;newmain.c: 20: key_pressed = old_PORTB ^ new_PORTB;
   415  0019  0879               	movf	(_old_PORTB),w
   416  001A  0675               	xorwf	(ISR@new_PORTB),w
   417  001B  00F0               	movwf	(??_ISR+0)+0
   418  001C  0870               	movf	(??_ISR+0)+0,w
   419  001D  00F6               	movwf	(ISR@key_pressed)
   420                           	line	21
   421                           	
   422  001E                     i1l1078:	
   423                           ;newmain.c: 21: if(key_pressed & (1<<4)) {
   424  001E  1E76               	btfss	(ISR@key_pressed),(4)&7
   425  001F  2821               	goto	u1_21
   426  0020  2822               	goto	u1_20
   427  0021                     u1_21:
   428  0021  2825               	goto	i1l689
   429  0022                     u1_20:
   430                           	line	22
   431                           	
   432  0022                     i1l1080:	
   433                           ;newmain.c: 22: PORTD = (1<<4);
   434  0022  3010               	movlw	(010h)
   435  0023  0088               	movwf	(8)	;volatile
   436                           	line	23
   437                           ;newmain.c: 23: } else if(key_pressed & (1<<5)) {
   438  0024  283E               	goto	i1l1088
   439                           	
   440  0025                     i1l689:	
   441  0025  1EF6               	btfss	(ISR@key_pressed),(5)&7
   442  0026  2828               	goto	u2_21
   443  0027  2829               	goto	u2_20
   444  0028                     u2_21:
   445  0028  282C               	goto	i1l691
   446  0029                     u2_20:
   447                           	line	24
   448                           	
   449  0029                     i1l1082:	
   450                           ;newmain.c: 24: PORTD = (1<<5);
   451  0029  3020               	movlw	(020h)
   452  002A  0088               	movwf	(8)	;volatile
   453                           	line	25
   454                           ;newmain.c: 25: } else if(key_pressed & (1<<6)) {
   455  002B  283E               	goto	i1l1088
   456                           	
   457  002C                     i1l691:	
   458  002C  1F76               	btfss	(ISR@key_pressed),(6)&7
   459  002D  282F               	goto	u3_21
   460  002E  2830               	goto	u3_20
   461  002F                     u3_21:
   462  002F  2833               	goto	i1l693
   463  0030                     u3_20:
   464                           	line	26
   465                           	
   466  0030                     i1l1084:	
   467                           ;newmain.c: 26: PORTD = (1<<6);
   468  0030  3040               	movlw	(040h)
   469  0031  0088               	movwf	(8)	;volatile
   470                           	line	27
   471                           ;newmain.c: 27: } else if(key_pressed & (1<<7)) {
   472  0032  283E               	goto	i1l1088
   473                           	
   474  0033                     i1l693:	
   475  0033  1FF6               	btfss	(ISR@key_pressed),(7)&7
   476  0034  2836               	goto	u4_21
   477  0035  2837               	goto	u4_20
   478  0036                     u4_21:
   479  0036  283E               	goto	i1l1088
   480  0037                     u4_20:
   481                           	line	28
   482                           	
   483  0037                     i1l1086:	
   484                           ;newmain.c: 28: PORTD = (1<<7);
   485  0037  3080               	movlw	(080h)
   486  0038  0088               	movwf	(8)	;volatile
   487                           	line	29
   488                           ;newmain.c: 29: } else {
   489  0039  283E               	goto	i1l1088
   490                           	
   491  003A                     i1l695:	
   492  003A  283E               	goto	i1l1088
   493                           	line	31
   494                           	
   495  003B                     i1l696:	
   496  003B  283E               	goto	i1l1088
   497                           	
   498  003C                     i1l694:	
   499  003C  283E               	goto	i1l1088
   500                           	
   501  003D                     i1l692:	
   502  003D  283E               	goto	i1l1088
   503                           	
   504  003E                     i1l690:	
   505                           	line	32
   506                           	
   507  003E                     i1l1088:	
   508                           ;newmain.c: 31: }
   509                           ;newmain.c: 32: for(i=0; i<= 50000; i++);
   510  003E  01F7               	clrf	(_i)
   511  003F  01F8               	clrf	(_i+1)
   512                           	
   513  0040                     i1l1090:	
   514  0040  30C3               	movlw	high(0C351h)
   515  0041  0278               	subwf	(_i+1),w
   516  0042  3051               	movlw	low(0C351h)
   517  0043  1903               	skipnz
   518  0044  0277               	subwf	(_i),w
   519  0045  1C03               	skipc
   520  0046  2848               	goto	u5_21
   521  0047  2849               	goto	u5_20
   522  0048                     u5_21:
   523  0048  284B               	goto	i1l1094
   524  0049                     u5_20:
   525  0049  285A               	goto	i1l698
   526                           	
   527  004A                     i1l1092:	
   528  004A  285A               	goto	i1l698
   529                           	
   530  004B                     i1l697:	
   531                           	
   532  004B                     i1l1094:	
   533  004B  3001               	movlw	low(01h)
   534  004C  07F7               	addwf	(_i),f
   535  004D  1803               	skipnc
   536  004E  0AF8               	incf	(_i+1),f
   537  004F  3000               	movlw	high(01h)
   538  0050  07F8               	addwf	(_i+1),f
   539  0051  30C3               	movlw	high(0C351h)
   540  0052  0278               	subwf	(_i+1),w
   541  0053  3051               	movlw	low(0C351h)
   542  0054  1903               	skipnz
   543  0055  0277               	subwf	(_i),w
   544  0056  1C03               	skipc
   545  0057  2859               	goto	u6_21
   546  0058  285A               	goto	u6_20
   547  0059                     u6_21:
   548  0059  284B               	goto	i1l1094
   549  005A                     u6_20:
   550                           	
   551  005A                     i1l698:	
   552                           	line	33
   553                           ;newmain.c: 33: RBIF=0;
   554  005A  100B               	bcf	(88/8),(88)&7
   555                           	line	34
   556                           	
   557  005B                     i1l699:	
   558  005B  0874               	movf	(??_ISR+4),w
   559  005C  00FF               	movwf	btemp+1
   560  005D  0873               	movf	(??_ISR+3),w
   561  005E  008A               	movwf	pclath
   562  005F  0872               	movf	(??_ISR+2),w
   563  0060  0084               	movwf	fsr0
   564  0061  0E71               	swapf	(??_ISR+1)^0FFFFFF80h,w
   565  0062  0083               	movwf	status
   566  0063  0EFE               	swapf	saved_w,f
   567  0064  0E7E               	swapf	saved_w,w
   568  0065  0009               	retfie
   569                           	opt stack 0
   570                           GLOBAL	__end_of_ISR
   571  0066                     	__end_of_ISR:
   572 ;; =============== function _ISR ends ============
   573                           
   574                           	signat	_ISR,88
   575                           psect	text73,local,class=CODE,delta=2
   576                           global __ptext73
   577  0000                     __ptext73:
   578                           	global	btemp
   579  007E                     	btemp set 07Eh
   580                           
   581                           	DABS	1,126,2	;btemp
   582                           	global	wtemp0
   583  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Sep 05 09:03:05 2020

                   _i 0077                   l702 007B                   l703 007D                   l704 007E  
                 l705 007E                   _ISR 0015                   fsr0 0004                  ?_ISR 0070  
                l1880 0071                  l1882 0074                  l1874 0066                  l1884 007B  
                l1876 0069                  l1878 006D                  _RBIF 0058                  u1_20 0022  
                u1_21 0021                  u2_20 0029                  u2_21 0028                  u3_20 0030  
                u3_21 002F                  u4_20 0037                  u4_21 0036                  u5_20 0049  
                u5_21 0048                  u6_20 005A                  u6_21 0059                  _main 0066  
                btemp 007E                  start 0012                 ??_ISR 0070                 ?_main 0070  
               i1l690 003E                 i1l691 002C                 i1l692 003D                 i1l693 0033  
               i1l694 003C                 i1l695 003A                 i1l696 003B                 i1l697 004B  
               i1l689 0025                 i1l698 005A                 i1l699 005B                 _PORTB 0006  
               _PORTD 0008                 _TRISD 0088                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0081                ??_main 0020                i1l1080 0022  
              i1l1090 0040                i1l1082 0029                i1l1074 0015                i1l1092 004A  
              i1l1084 0030                i1l1076 0019                i1l1094 004B                i1l1086 0037  
              i1l1078 001E                i1l1088 003E                _INTCON 000B                _TRISB0 0430  
              saved_w 007E        __pcstackCOMMON 0070            __pnvCOMMON 0079            __pmaintext 0066  
          __pintentry 0004        ISR@key_pressed 0076          __size_of_ISR 0051  end_of_initialization 0083  
 start_initialization 0081           __end_of_ISR 0066          ISR@new_PORTB 0075           __pbssCOMMON 0077  
       __pcstackBANK0 0020             _old_PORTB 0079     interrupt_function 0004              __ptext72 0015  
            __ptext73 0000         __size_of_main 001B              intlevel1 0000            _OPTION_REG 0081  
