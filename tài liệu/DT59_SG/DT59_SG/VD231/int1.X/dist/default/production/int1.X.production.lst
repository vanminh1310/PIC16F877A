

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Sep 12 09:18:00 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	FNCALL	intlevel1,_ISR
    44                           	global	intlevel1
    45                           	FNROOT	intlevel1
    46                           	global	_INTCON
    47                           psect	maintext,global,class=CODE,delta=2
    48                           global __pmaintext
    49  005C                     __pmaintext:
    50  000B                     _INTCON	set	11
    51                           	global	_PORTD
    52  0008                     _PORTD	set	8
    53                           	global	_INTF
    54  0059                     _INTF	set	89
    55                           	global	_OPTION_REG
    56  0081                     _OPTION_REG	set	129
    57                           	global	_TRISD
    58  0088                     _TRISD	set	136
    59                           	global	_TRISB0
    60  0430                     _TRISB0	set	1072
    61                           	file	"C:\Users\BinhNGO\AppData\Local\Temp\sdnc."
    62                           	line	#
    63                           psect cinit,class=CODE,delta=2
    64                           global start_initialization
    65  0071                     start_initialization:
    66                           
    67                           psect cinit,class=CODE,delta=2
    68                           global end_of_initialization
    69                           
    70                           ;End of C runtime variable initialization code
    71                           
    72  0071                     end_of_initialization:
    73  0071  0183               clrf status
    74  0072  120A  118A  285C   ljmp _main	;jump to C main() function
    75                           psect	cstackCOMMON,class=COMMON,space=1
    76                           global __pcstackCOMMON
    77  0070                     __pcstackCOMMON:
    78                           	global	?_ISR
    79  0070                     ?_ISR:	; 0 bytes @ 0x0
    80                           	global	??_ISR
    81  0070                     ??_ISR:	; 0 bytes @ 0x0
    82                           	global	?_main
    83  0070                     ?_main:	; 0 bytes @ 0x0
    84  0070                     	ds	4
    85                           	global	ISR@i
    86  0074                     ISR@i:	; 2 bytes @ 0x4
    87  0074                     	ds	2
    88                           	global	ISR@j
    89  0076                     ISR@j:	; 2 bytes @ 0x6
    90  0076                     	ds	2
    91                           psect	cstackBANK0,class=BANK0,space=1
    92                           global __pcstackBANK0
    93  0020                     __pcstackBANK0:
    94                           	global	??_main
    95  0020                     ??_main:	; 0 bytes @ 0x0
    96  0020                     	ds	1
    97 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    98 ;;Auto spaces:   Size  Autos    Used
    99 ;; COMMON          14      8       8
   100 ;; BANK0           80      1       1
   101 ;; BANK1           80      0       0
   102 ;; BANK3           96      0       0
   103 ;; BANK2           96      0       0
   104                           
   105 ;;
   106 ;; Pointer list with targets:
   107                           
   108                           
   109                           
   110 ;;
   111 ;; Critical Paths under _main in COMMON
   112 ;;
   113 ;;   None.
   114 ;;
   115 ;; Critical Paths under _ISR in COMMON
   116 ;;
   117 ;;   None.
   118 ;;
   119 ;; Critical Paths under _main in BANK0
   120 ;;
   121 ;;   None.
   122 ;;
   123 ;; Critical Paths under _ISR in BANK0
   124 ;;
   125 ;;   None.
   126 ;;
   127 ;; Critical Paths under _main in BANK1
   128 ;;
   129 ;;   None.
   130 ;;
   131 ;; Critical Paths under _ISR in BANK1
   132 ;;
   133 ;;   None.
   134 ;;
   135 ;; Critical Paths under _main in BANK3
   136 ;;
   137 ;;   None.
   138 ;;
   139 ;; Critical Paths under _ISR in BANK3
   140 ;;
   141 ;;   None.
   142 ;;
   143 ;; Critical Paths under _main in BANK2
   144 ;;
   145 ;;   None.
   146 ;;
   147 ;; Critical Paths under _ISR in BANK2
   148 ;;
   149 ;;   None.
   150                           
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   153 ;;
   154                           
   155 ;;
   156 ;;Call Graph Tables:
   157 ;;
   158 ;; ---------------------------------------------------------------------------------
   159 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   160 ;; ---------------------------------------------------------------------------------
   161 ;; (0) _main                                                 1     1      0       0
   162 ;;                                              0 BANK0      1     1      0
   163 ;; ---------------------------------------------------------------------------------
   164 ;; Estimated maximum stack depth 0
   165 ;; ---------------------------------------------------------------------------------
   166 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   167 ;; ---------------------------------------------------------------------------------
   168 ;; (1) _ISR                                                  8     8      0      60
   169 ;;                                              0 COMMON     8     8      0
   170 ;; ---------------------------------------------------------------------------------
   171 ;; Estimated maximum stack depth 1
   172 ;; ---------------------------------------------------------------------------------
   173                           
   174 ;; Call Graph Graphs:
   175                           
   176 ;; _main (ROOT)
   177 ;;
   178 ;; _ISR (ROOT)
   179 ;;
   180                           
   181 ;; Address spaces:
   182                           
   183 ;;Name               Size   Autos  Total    Cost      Usage
   184 ;;BITCOMMON            E      0       0       0        0.0%
   185 ;;EEDATA             100      0       0       0        0.0%
   186 ;;NULL                 0      0       0       0        0.0%
   187 ;;CODE                 0      0       0       0        0.0%
   188 ;;COMMON               E      8       8       1       57.1%
   189 ;;BITSFR0              0      0       0       1        0.0%
   190 ;;SFR0                 0      0       0       1        0.0%
   191 ;;BITSFR1              0      0       0       2        0.0%
   192 ;;SFR1                 0      0       0       2        0.0%
   193 ;;STACK                0      0       0       2        0.0%
   194 ;;ABS                  0      0       0       3        0.0%
   195 ;;BITBANK0            50      0       0       4        0.0%
   196 ;;BITSFR3              0      0       0       4        0.0%
   197 ;;SFR3                 0      0       0       4        0.0%
   198 ;;BANK0               50      1       1       5        1.3%
   199 ;;BITSFR2              0      0       0       5        0.0%
   200 ;;SFR2                 0      0       0       5        0.0%
   201 ;;BITBANK1            50      0       0       6        0.0%
   202 ;;BANK1               50      0       0       7        0.0%
   203 ;;BITBANK3            60      0       0       8        0.0%
   204 ;;BANK3               60      0       0       9        0.0%
   205 ;;BITBANK2            60      0       0      10        0.0%
   206 ;;BANK2               60      0       0      11        0.0%
   207 ;;DATA                 0      0       0      12        0.0%
   208                           
   209                           	global	_main
   210                           psect	maintext
   211                           
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 15 in file "newmain.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;		None               void
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0
   223 ;; Tracked objects:
   224 ;;		On entry : 17F/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0
   230 ;;      Temps:          0       1       0       0       0
   231 ;;      Totals:         0       1       0       0       0
   232 ;;Total ram usage:        1 bytes
   233 ;; Hardware stack levels required when called:    1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           psect	maintext
   241                           	file	"newmain.c"
   242                           	line	15
   243                           	global	__size_of_main
   244  0015                     	__size_of_main	equ	__end_of_main-_main
   245                           	
   246  005C                     _main:	
   247                           	opt	stack 7
   248                           ; Regs used in _main: [wreg+status,2+status,0]
   249                           	line	16
   250                           	
   251  005C                     l1856:	
   252                           ;newmain.c: 16: PORTD=0;
   253  005C  1283               	bcf	status, 5	;RP0=0, select bank0
   254  005D  1303               	bcf	status, 6	;RP1=0, select bank0
   255  005E  0188               	clrf	(8)	;volatile
   256                           	line	17
   257                           	
   258  005F                     l1858:	
   259                           ;newmain.c: 17: TRISB0=1;
   260  005F  1683               	bsf	status, 5	;RP0=1, select bank1
   261  0060  1303               	bcf	status, 6	;RP1=0, select bank1
   262  0061  1406               	bsf	(1072/8)^080h,(1072)&7
   263                           	line	18
   264                           ;newmain.c: 18: TRISD=0;
   265  0062  0188               	clrf	(136)^080h	;volatile
   266                           	line	19
   267                           ;newmain.c: 19: OPTION_REG=0X00;
   268  0063  0181               	clrf	(129)^080h	;volatile
   269                           	line	20
   270                           	
   271  0064                     l1860:	
   272                           ;newmain.c: 20: INTCON|=0Xd0;
   273  0064  30D0               	movlw	(0D0h)
   274  0065  1283               	bcf	status, 5	;RP0=0, select bank0
   275  0066  1303               	bcf	status, 6	;RP1=0, select bank0
   276  0067  00A0               	movwf	(??_main+0)+0
   277  0068  0820               	movf	(??_main+0)+0,w
   278  0069  048B               	iorwf	(11),f	;volatile
   279  006A  286B               	goto	l1862
   280                           	line	21
   281                           ;newmain.c: 21: while(1) {
   282                           	
   283  006B                     l692:	
   284                           	line	22
   285                           	
   286  006B                     l1862:	
   287                           ;newmain.c: 22: PORTD=0x00;
   288  006B  0188               	clrf	(8)	;volatile
   289  006C  286B               	goto	l1862
   290                           	line	23
   291                           	
   292  006D                     l693:	
   293                           	line	21
   294  006D  286B               	goto	l1862
   295                           	
   296  006E                     l694:	
   297                           	line	24
   298                           	
   299  006E                     l695:	
   300                           	global	start
   301  006E  120A  118A  2812   	ljmp	start
   302                           	opt stack 0
   303                           GLOBAL	__end_of_main
   304  0071                     	__end_of_main:
   305 ;; =============== function _main ends ============
   306                           
   307                           	signat	_main,88
   308                           	global	_ISR
   309                           psect	text72,local,class=CODE,delta=2
   310                           global __ptext72
   311  0015                     __ptext72:
   312                           
   313 ;; *************** function _ISR *****************
   314 ;; Defined at:
   315 ;;		line 6 in file "newmain.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  j               2    6[COMMON] unsigned int 
   320 ;;  i               2    4[COMMON] unsigned int 
   321 ;; Return value:  Size  Location     Type
   322 ;;		None               void
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         4       0       0       0       0
   332 ;;      Temps:          4       0       0       0       0
   333 ;;      Totals:         8       0       0       0       0
   334 ;;Total ram usage:        8 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		Interrupt level 1
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           psect	text72
   343                           	file	"newmain.c"
   344                           	line	6
   345                           	global	__size_of_ISR
   346  0047                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   347                           	
   348  0015                     _ISR:	
   349                           	opt	stack 7
   350                           ; Regs used in _ISR: [wreg+status,2]
   351                           psect	intentry,class=CODE,delta=2
   352                           global __pintentry
   353  0004                     __pintentry:
   354                           global interrupt_function
   355  0004                     interrupt_function:
   356                           	global saved_w
   357  007E                     	saved_w	set	btemp+0
   358  0004  00FE               	movwf	saved_w
   359  0005  0E03               	swapf	status,w
   360  0006  00F0               	movwf	(??_ISR+0)
   361  0007  0804               	movf	fsr0,w
   362  0008  00F1               	movwf	(??_ISR+1)
   363  0009  080A               	movf	pclath,w
   364  000A  00F2               	movwf	(??_ISR+2)
   365  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   366  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   367  000D  087F               	movf	btemp+1,w
   368  000E  00F3               	movwf	(??_ISR+3)
   369  000F  120A  118A  2815   	ljmp	_ISR
   370                           psect	text72
   371                           	line	8
   372                           	
   373  0015                     i1l1064:	
   374                           ;newmain.c: 7: unsigned int i,j;
   375                           ;newmain.c: 8: PORTD=0X55;
   376  0015  3055               	movlw	(055h)
   377  0016  0088               	movwf	(8)	;volatile
   378                           	line	9
   379                           	
   380  0017                     i1l1066:	
   381                           ;newmain.c: 9: for(i=0;i<600;i++)
   382  0017  01F4               	clrf	(ISR@i)
   383  0018  01F5               	clrf	(ISR@i+1)
   384                           	
   385  0019                     i1l1068:	
   386  0019  3002               	movlw	high(0258h)
   387  001A  0275               	subwf	(ISR@i+1),w
   388  001B  3058               	movlw	low(0258h)
   389  001C  1903               	skipnz
   390  001D  0274               	subwf	(ISR@i),w
   391  001E  1C03               	skipc
   392  001F  2821               	goto	u1_21
   393  0020  2822               	goto	u1_20
   394  0021                     u1_21:
   395  0021  2824               	goto	i1l1072
   396  0022                     u1_20:
   397  0022  2850               	goto	i1l686
   398                           	
   399  0023                     i1l1070:	
   400  0023  2850               	goto	i1l686
   401                           	line	10
   402                           	
   403  0024                     i1l685:	
   404                           	
   405  0024                     i1l1072:	
   406                           ;newmain.c: 10: for(j=0;j<2000;j++);
   407  0024  01F6               	clrf	(ISR@j)
   408  0025  01F7               	clrf	(ISR@j+1)
   409                           	
   410  0026                     i1l1074:	
   411  0026  3007               	movlw	high(07D0h)
   412  0027  0277               	subwf	(ISR@j+1),w
   413  0028  30D0               	movlw	low(07D0h)
   414  0029  1903               	skipnz
   415  002A  0276               	subwf	(ISR@j),w
   416  002B  1C03               	skipc
   417  002C  282E               	goto	u2_21
   418  002D  282F               	goto	u2_20
   419  002E                     u2_21:
   420  002E  2831               	goto	i1l1078
   421  002F                     u2_20:
   422  002F  2841               	goto	i1l1080
   423                           	
   424  0030                     i1l1076:	
   425  0030  2841               	goto	i1l1080
   426                           	
   427  0031                     i1l687:	
   428                           	
   429  0031                     i1l1078:	
   430  0031  3001               	movlw	low(01h)
   431  0032  07F6               	addwf	(ISR@j),f
   432  0033  1803               	skipnc
   433  0034  0AF7               	incf	(ISR@j+1),f
   434  0035  3000               	movlw	high(01h)
   435  0036  07F7               	addwf	(ISR@j+1),f
   436  0037  3007               	movlw	high(07D0h)
   437  0038  0277               	subwf	(ISR@j+1),w
   438  0039  30D0               	movlw	low(07D0h)
   439  003A  1903               	skipnz
   440  003B  0276               	subwf	(ISR@j),w
   441  003C  1C03               	skipc
   442  003D  283F               	goto	u3_21
   443  003E  2840               	goto	u3_20
   444  003F                     u3_21:
   445  003F  2831               	goto	i1l1078
   446  0040                     u3_20:
   447  0040  2841               	goto	i1l1080
   448                           	
   449  0041                     i1l688:	
   450                           	line	9
   451                           	
   452  0041                     i1l1080:	
   453  0041  3001               	movlw	low(01h)
   454  0042  07F4               	addwf	(ISR@i),f
   455  0043  1803               	skipnc
   456  0044  0AF5               	incf	(ISR@i+1),f
   457  0045  3000               	movlw	high(01h)
   458  0046  07F5               	addwf	(ISR@i+1),f
   459  0047  3002               	movlw	high(0258h)
   460  0048  0275               	subwf	(ISR@i+1),w
   461  0049  3058               	movlw	low(0258h)
   462  004A  1903               	skipnz
   463  004B  0274               	subwf	(ISR@i),w
   464  004C  1C03               	skipc
   465  004D  284F               	goto	u4_21
   466  004E  2850               	goto	u4_20
   467  004F                     u4_21:
   468  004F  2824               	goto	i1l1072
   469  0050                     u4_20:
   470                           	
   471  0050                     i1l686:	
   472                           	line	11
   473                           ;newmain.c: 11: INTF=0;
   474  0050  108B               	bcf	(89/8),(89)&7
   475                           	line	12
   476                           	
   477  0051                     i1l689:	
   478  0051  0873               	movf	(??_ISR+3),w
   479  0052  00FF               	movwf	btemp+1
   480  0053  0872               	movf	(??_ISR+2),w
   481  0054  008A               	movwf	pclath
   482  0055  0871               	movf	(??_ISR+1),w
   483  0056  0084               	movwf	fsr0
   484  0057  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
   485  0058  0083               	movwf	status
   486  0059  0EFE               	swapf	saved_w,f
   487  005A  0E7E               	swapf	saved_w,w
   488  005B  0009               	retfie
   489                           	opt stack 0
   490                           GLOBAL	__end_of_ISR
   491  005C                     	__end_of_ISR:
   492 ;; =============== function _ISR ends ============
   493                           
   494                           	signat	_ISR,88
   495                           psect	text73,local,class=CODE,delta=2
   496                           global __ptext73
   497  0000                     __ptext73:
   498                           	global	btemp
   499  007E                     	btemp set 07Eh
   500                           
   501                           	DABS	1,126,2	;btemp
   502                           	global	wtemp0
   503  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Sep 12 09:18:00 2020

                 l692 006B                   l693 006D                   l694 006E                   l695 006E  
                 _ISR 0015                   fsr0 0004                  ?_ISR 0070                  ISR@i 0074  
                ISR@j 0076                  l1860 0064                  l1862 006B                  l1856 005C  
                l1858 005F                  _INTF 0059                  u1_20 0022                  u1_21 0021  
                u2_20 002F                  u2_21 002E                  u3_20 0040                  u3_21 003F  
                u4_20 0050                  u4_21 004F                  _main 005C                  btemp 007E  
                start 0012                 ??_ISR 0070                 ?_main 0070                 i1l685 0024  
               i1l686 0050                 i1l687 0031                 i1l688 0041                 i1l689 0051  
               _PORTD 0008                 _TRISD 0088                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0071                ??_main 0020                i1l1070 0023  
              i1l1080 0041                i1l1072 0024                i1l1064 0015                i1l1074 0026  
              i1l1066 0017                i1l1076 0030                i1l1068 0019                i1l1078 0031  
              _INTCON 000B                _TRISB0 0430                saved_w 007E        __pcstackCOMMON 0070  
          __pmaintext 005C            __pintentry 0004          __size_of_ISR 0047  end_of_initialization 0071  
 start_initialization 0071           __end_of_ISR 005C         __pcstackBANK0 0020     interrupt_function 0004  
            __ptext72 0015              __ptext73 0000         __size_of_main 0015              intlevel1 0000  
          _OPTION_REG 0081  
